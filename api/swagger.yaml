---
swagger: "2.0"
info:
  description: "<b><h2>API Overview</h2></b><br>Restful API are supported in Device42\
    \ as one of the primary methods of entering, editing and retrieving data.<br><br>\
    \ The API documentation has samples in curl for now and we will be adding other\
    \ programming languages in future. You can refer to our github repositories at\
    \ https://github.com/device42 for some sample code in python.<br><br> The RESTful\
    \ API's enforce the role-based security that is created with the Device42 app.\
    \ If you want a user to have access via the API, but not via the UI - deselect\
    \ 'Staff Status' for that user from UI Tools > Admins & Permissions > Administrators.<br><br>If\
    \ you'd like to see your changes on our UI, please visit http://swaggerdemo.device42.com\
    \ and use credentials 'guest:device42_rocks!'. Please be aware that every 30 minutes\
    \ our database resets and all data entered with POST/PUT calls from this page\
    \ will be lost.<br><br>If you have any questions/suggestions, please send us a\
    \ note to support at device42.com below. <br><h2><a id = 'Sample_API_Code'><b>Sample\
    \ API Code</b></a></h2> <b>Sample Code with API Calls in the Python and .Net Programming\
    \ Languages.</b><br>The following programs written in the Python programming language\
    \ are available at <a href= 'https://github.com/device42/Device42-AutoDiscovery-Scripts'>Device42\
    \ sample programs</a><br><ul><li>api-sample.py: Runs against a single Windows\
    \ system and uploads info to device42 appliance.</li><li>ad-sample.py: Can run\
    \ against Active directory computers, servers or a given list and upload discovered\
    \ systems’ info to device42 appliance.</li><li>d42_api_linux_upload_sample_script.py:\
    \ Runs on a single *nix based system and uploads info to device42 appliance.</li><li>sample-script-facter-facts-to-d42:\
    \ Runs on puppet master and uploads nodes info from facter fact files to device42\
    \ appliance.</li><li>d42_api_solaris_sample_script.py: Runs on an individual solaris\
    \ system and uploads info to device42 appliance.</li></ul>The csv2d42apis.py sample\
    \ program shows how to create a CSV file of data to import into device42. It reads\
    \ a CSV file, matches columns to arguments for APIs and sends data to device42\
    \ via POST or PUT. This program can be found at: <a href= 'https://github.com/device42/API_Helpers'>\
    \ Device42 sample CSV importer</a>.<br><br>The Auto Discovery Client source code\
    \ can be found at Device42 <a href='https://docs.device42.com/auto-discovery/'>Auto\
    \ Discovery Client</a>. This is a .net program that uses the device42 Restful\
    \ API’s to load the discovered data.<h2><a id = 'Response_Status_Messages'><b>Response\
    \ & Status Messages</b></a></h2><b>Responses</b><br>The response to most POST\
    \ calls will have the following format: <br>{'msg':['PartModel added/updated',\
    \ 17, 'RAM Acme 123456', true, true], 'code':0}<br><br>Using the example above:<br>'17'\
    \ = ID of the object<br>'RAM Acme 123456' = representation of the object<br> 'true,\
    \ true' = object added and is new.<br>'true, false' = object updated.<br>'false,\
    \ false' = no changes.<br><br><b>Status Codes</b><br><u>Code 0</u><br>Success!\
    \ e.g. = {'msg': 'device added or updated', <b>code:0</b>}<br><br><u>'HTTP/1.1\
    \ 200 OK'</u><br>Success! All other responses are errors and will display an error\
    \ code e.g.: 400, 401, 403, 405, 410, 500, 503. These are explained in each call.<br><br>Please\
    \ let us know if you notice something odd with a response and we will fix it!\
    \ :) <h2><a id = 'Get_Limits_Offsets'><b>API Get Limits and Offsets</b></a></h2>In\
    \ Device42’s global settings we have the option to enforce API GET limits and\
    \ this setting is recommended for better performance. To set this value from Device42,\
    \ go to Tools>Settings>Global Settings and the click Edit in the top right. Toward\
    \ the bottom of the screen you will see the API section. First check the “Enforce\
    \ API GET Limits” checkbox, then enter a value for API GET Limit. A good limit\
    \ to start with is 500 or 1000, depending on the performance you experience.<br><br>After\
    \ setting this limit all GET calls below can have the results augmented via “\
    offset” and “limit” parameters to tell Device42 which value to start returning\
    \ results from, and how many results to return at maximum.<br>Examples:<br><br>'/?limit=50'\
    \ returns the first 50 results.<br><br> '/?offset=100' will start at the 101st\
    \ result. <br><br>'/?offset=42&limit=42' returns 42 results, starting at the 43rd.<br><br>\
    \ Note that offset is used for paging - that is, the offset is only applied when\
    \ the total number of objects returned exceeds the limit that is returned."
  version: "2.0"
  title: "Device42 API"
  contact:
    name: "Device42"
    email: "support@device42.com"
host: "swaggerdemo.device42.com"
schemes:
- "https"
consumes:
- "application/x-www-form-urlencoded"
produces:
- "application/json"
paths:
  /api/1.0/buildings/:
    get:
      tags:
      - "Buildings"
      summary: "Retrieve information about all buildings."
      description: "Get All Buildings"
      operationId: "getBuildings"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              buildings:
                $ref: "#/definitions/buildings"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Buildings"
      summary: "Create/update buildings."
      description: "Create/Update Building"
      operationId: "postBuildings"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of building"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "address"
        in: "formData"
        description: "Address of building."
        required: true
        type: "string"
        x-exportParamName: "Address"
      - name: "contact_name"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ContactName"
        x-optionalDataType: "String"
      - name: "contact_phone"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ContactPhone"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/buildings/{ID}/:
    delete:
      tags:
      - "Buildings"
      summary: "Delete Building"
      description: "This API is used to delete the building with the building id supplied\
        \ as the required argument."
      operationId: "deleteBuildings"
      parameters:
      - name: "ID"
        in: "path"
        description: "building id"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/building/:
    put:
      tags:
      - "Buildings"
      summary: "Create/update custom fields for buildings."
      description: "Create or update custom fields for buildings. \"ID\" or \"name\"\
        \ of building is needed even when value is not being changed"
      operationId: "putCustom_fieldsBuilding"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of building"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "id"
        in: "formData"
        description: "ID of building"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/rooms/:
    get:
      tags:
      - "Rooms"
      summary: "Retrieve information about all rooms."
      description: "Get All Rooms"
      operationId: "getRooms"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "building_id"
        in: "query"
        description: "filter by building ID (Added in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "BuildingId"
        x-optionalDataType: "String"
      - name: "building"
        in: "query"
        description: "filter by building name"
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              rooms:
                $ref: "#/definitions/rooms"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Rooms"
      summary: "Create or update a room."
      description: "Create or update a Room. Required parameters: <ul><li>name</li>\
        \ <li>building_id <b>OR</b> building</li>"
      operationId: "postRooms"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of room"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "building_id"
        in: "formData"
        description: "Existing building ID"
        required: false
        type: "string"
        x-exportParamName: "BuildingId"
        x-optionalDataType: "String"
      - name: "building"
        in: "formData"
        description: "Existing building name"
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "horizontal_grid_numbering"
        in: "formData"
        description: "numeric by default"
        required: false
        type: "string"
        enum:
        - "numeric"
        - "alphabetic"
        x-exportParamName: "HorizontalGridNumbering"
        x-optionalDataType: "String"
      - name: "horizontal_grid_start"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "HorizontalGridStart"
        x-optionalDataType: "String"
      - name: "vertical_grid_numbering"
        in: "formData"
        description: "numeric by default"
        required: false
        type: "string"
        enum:
        - "numeric"
        - "alphabetic"
        x-exportParamName: "VerticalGridNumbering"
        x-optionalDataType: "String"
      - name: "vertical_grid_start"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "VerticalGridStart"
        x-optionalDataType: "String"
      - name: "uom"
        in: "formData"
        description: "unit of measurement (meters or inches)"
        required: false
        type: "string"
        enum:
        - "m"
        - "in"
        x-exportParamName: "Uom"
        x-optionalDataType: "String"
      - name: "height"
        in: "formData"
        description: "room height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "grid_rows"
        in: "formData"
        description: "number of rows in the room grid"
        required: false
        type: "string"
        x-exportParamName: "GridRows"
        x-optionalDataType: "String"
      - name: "grid_cols"
        in: "formData"
        description: "number of columns in the room grid"
        required: false
        type: "string"
        x-exportParamName: "GridCols"
        x-optionalDataType: "String"
      - name: "raised_floor"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "RaisedFloor"
        x-optionalDataType: "String"
      - name: "raised_floor_height"
        in: "formData"
        description: "height of raised floor"
        required: false
        type: "string"
        x-exportParamName: "RaisedFloorHeight"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "reverse_xaxis"
        in: "formData"
        description: "'yes' reverses the numbering order on the x-axis"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ReverseXaxis"
        x-optionalDataType: "String"
      - name: "reverse_yaxis"
        in: "formData"
        description: "'yes' reverses the numbering order on the y-axis"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ReverseYaxis"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/rooms/{ID}/:
    get:
      tags:
      - "Rooms"
      summary: "Get a Specific Room"
      description: "Retrieve detailed information about a specific rooms includes\
        \ racks, devices and objects directly related to that room."
      operationId: "getRoomsID"
      parameters:
      - name: "ID"
        in: "path"
        description: "The ID of the room to retrieve"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              building:
                example: "New Haven"
              reverse_yaxis:
                example: "no"
              name:
                example: "NHDC1"
              notes:
                example: "Demo Room"
              devices:
                type: "array"
                items:
                  type: "object"
                  properties:
                    device:
                      type: "object"
                      properties:
                        uuid:
                          example: ""
                        serial_no:
                          example: ""
                        asset_no:
                          example: ""
                        name:
                          example: "CRAC2"
                        device_url:
                          example: "/api/api/1.0/devices/id/123/"
                        type:
                          example: "other"
                        device_id:
                          example: "123"
              grid_cols:
                example: "10"
              room_id:
                example: "1"
              reverse_xaxis:
                example: "no"
              grid_rows:
                example: "9"
              building_id:
                example: "1"
              racks:
                type: "array"
                items:
                  $ref: "#/definitions/RoomsRacks"
              assets:
                type: "array"
                items:
                  type: "object"
                  properties:
                    asset_id:
                      example: "30"
                    serial_no:
                      example: ""
                    type:
                      example: "Breaker Panel"
                    name:
                      example: "Power1"
                    asset_no:
                      example: "0084"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Rooms"
      summary: "Update information about an existing room."
      description: "Update a Room"
      operationId: "putRoomsID"
      parameters:
      - name: "ID"
        in: "path"
        description: "id of the room"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      - name: "name"
        in: "formData"
        description: "Name of room"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "building_id"
        in: "formData"
        description: "Existing building ID"
        required: false
        type: "string"
        x-exportParamName: "BuildingId"
        x-optionalDataType: "String"
      - name: "horizontal_grid_numbering"
        in: "formData"
        description: "numeric by default"
        required: false
        type: "string"
        enum:
        - "numeric"
        - "alphabetic"
        x-exportParamName: "HorizontalGridNumbering"
        x-optionalDataType: "String"
      - name: "horizontal_grid_start"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "HorizontalGridStart"
        x-optionalDataType: "String"
      - name: "vertical_grid_numbering"
        in: "formData"
        description: "numeric by default"
        required: false
        type: "string"
        enum:
        - "numeric"
        - "alphabetic"
        x-exportParamName: "VerticalGridNumbering"
        x-optionalDataType: "String"
      - name: "vertical_grid_start"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "VerticalGridStart"
        x-optionalDataType: "String"
      - name: "uom"
        in: "formData"
        description: "unit of measurement (meters or inches)"
        required: false
        type: "string"
        enum:
        - "m"
        - "in"
        x-exportParamName: "Uom"
        x-optionalDataType: "String"
      - name: "height"
        in: "formData"
        description: "room height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "grid_rows"
        in: "formData"
        description: "number of rows in the room grid"
        required: false
        type: "string"
        x-exportParamName: "GridRows"
        x-optionalDataType: "String"
      - name: "grid_cols"
        in: "formData"
        description: "number of columns in the room grid"
        required: false
        type: "string"
        x-exportParamName: "GridCols"
        x-optionalDataType: "String"
      - name: "raised_floor"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "RaisedFloor"
        x-optionalDataType: "String"
      - name: "raised_floor_height"
        in: "formData"
        description: "height of raised floor"
        required: false
        type: "string"
        x-exportParamName: "RaisedFloorHeight"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "reverse_xaxis"
        in: "formData"
        description: "'yes' reverses the numbering order on the x-axis"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ReverseXaxis"
        x-optionalDataType: "String"
      - name: "reverse_yaxis"
        in: "formData"
        description: "'yes' reverses the numbering order on the y-axis"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ReverseYaxis"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "Rooms"
      summary: "Delete Room"
      description: "This API is used to delete the room with the room id supplied\
        \ as the required argument."
      operationId: "deleteRoomsID"
      parameters:
      - name: "ID"
        in: "path"
        description: "room id"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/room/:
    put:
      tags:
      - "Rooms"
      summary: "Create/update custom fields for rooms."
      description: "Create or update custom fields for rooms. \"ID\" or \"name\" of\
        \ room is needed even when value is not being changed."
      operationId: "putCustom_fieldsRoom"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of room"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "id"
        in: "formData"
        description: "Room ID or UI > Tools > Export > Room"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/room/:
    post:
      tags:
      - "Rooms"
      summary: "Add a device to a room."
      description: "Add device to room"
      operationId: "postDeviceRoom"
      parameters:
      - name: "room_id"
        in: "formData"
        description: "Room ID or UI > Tools > Export > Room"
        required: true
        type: "string"
        x-exportParamName: "RoomId"
      - name: "name"
        in: "formData"
        description: "The name of the device to add"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "type"
        in: "formData"
        required: true
        type: "string"
        enum:
        - "CRAC"
        - "UPS"
        x-exportParamName: "Type_"
      - name: "wall"
        in: "formData"
        description: "Choose 'middle' if you do not want the object to be placed along\
          \ one of the 4 walls."
        required: false
        type: "string"
        enum:
        - "left"
        - "right"
        - "top"
        - "bottom"
        - "middle"
        x-exportParamName: "Wall"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/room/{ID}/:
    delete:
      tags:
      - "Rooms"
      summary: "Delete Device from its Room"
      description: "This API is used to delete the device from its room with the device\
        \ id supplied as the required argument."
      operationId: "deleteDeviceRoom"
      parameters:
      - name: "ID"
        in: "path"
        description: "device id"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/assets/room/:
    post:
      tags:
      - "Rooms"
      summary: "Add an asset to a room."
      description: "Add asset to room"
      operationId: "postAssetsRoom"
      parameters:
      - name: "room_id"
        in: "formData"
        description: "Room ID or UI > Tools > Export > Room"
        required: true
        type: "string"
        x-exportParamName: "RoomId"
      - name: "asset"
        in: "formData"
        description: "The name of the asset"
        required: true
        type: "string"
        x-exportParamName: "Asset"
      - name: "type"
        in: "formData"
        required: true
        type: "string"
        enum:
        - "Breaker Panel"
        - "AC"
        - "DMARC"
        x-exportParamName: "Type_"
      - name: "wall"
        in: "formData"
        description: "Choose 'middle' if you do not want the object to be placed along\
          \ one of the 4 walls."
        required: false
        type: "string"
        enum:
        - "left"
        - "right"
        - "top"
        - "bottom"
        - "middle"
        x-exportParamName: "Wall"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/assets/room/{id}/:
    delete:
      tags:
      - "Rooms"
      summary: "Delete an Asset from its Room"
      description: "This API is used to delete the asset with the asset id supplied\
        \ as the required argument from its room."
      operationId: "deleteAssetsRoom"
      parameters:
      - name: "id"
        in: "path"
        description: "device id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/racks/:
    get:
      tags:
      - "Racks"
      summary: "Get All Racks"
      description: "This API will retrieve basic information about all racks."
      operationId: "getRacks"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "building_id"
        in: "query"
        description: "filter by building ID (Added in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "BuildingId"
        x-optionalDataType: "String"
      - name: "building"
        in: "query"
        description: "filter by building name"
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "room_id"
        in: "query"
        description: "filter by room ID (Added in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "RoomId"
        x-optionalDataType: "String"
      - name: "room"
        in: "query"
        description: "filter by room name. Only works if room ID is not present (Added\
          \ in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "filter by rack size in U"
        required: false
        type: "integer"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "row"
        in: "query"
        description: "filter by row name"
        required: false
        type: "string"
        x-exportParamName: "Row"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "query"
        description: "filter by asset number"
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "query"
        description: "filter by manufacturer"
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              limit:
                example: "2"
              offset:
                example: "0"
              racks:
                type: "array"
                items:
                  $ref: "#/definitions/racks"
              total_count:
                example: "275"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Racks"
      summary: "Create a rack."
      description: "Create / Update Racks. Creating a new rack requires both <ul><li>name</li><li>size</li></ul><p>\
        \ However, if updating a rack, use </p> <ul><li>rack_id</li></ul> <p>or all\
        \ of</p> <ul><li>name</li><li>room</li> <li>building</li></ul><p> If using\
        \ room/building name, first combination of room name or room and building\
        \ name will be used.</p>"
      operationId: "postRacks"
      parameters:
      - name: "name"
        in: "formData"
        description: "Rack name - must be unique within a room"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "size"
        in: "formData"
        description: "In UI"
        required: true
        type: "integer"
        x-exportParamName: "Size"
      - name: "rack_id"
        in: "formData"
        description: "Required to update a rack using ID. This has highest priority\
          \ to update a rack."
        required: false
        type: "integer"
        x-exportParamName: "RackId"
        x-optionalDataType: "Int32"
      - name: "room"
        in: "formData"
        description: "Name of room - Required if changing a rack without rack_id."
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "building"
        in: "formData"
        description: "Name of building - Used when there are non-unique room names."
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "new_name"
        in: "formData"
        description: "Use to change name of object."
        required: false
        type: "string"
        x-exportParamName: "NewName"
        x-optionalDataType: "String"
      - name: "room_id"
        in: "formData"
        description: "Room ID if Room name is not unique"
        required: false
        type: "string"
        x-exportParamName: "RoomId"
        x-optionalDataType: "String"
      - name: "numbering_start_from_bottom"
        in: "formData"
        description: "default is yes, no to change, otherwise ignored."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "NumberingStartFromBottom"
        x-optionalDataType: "String"
      - name: "first_number"
        in: "formData"
        description: "default 0, add to change."
        required: false
        type: "string"
        x-exportParamName: "FirstNumber"
        x-optionalDataType: "String"
      - name: "row"
        in: "formData"
        description: "this row field is for the name of the rows, and not related\
          \ to the grid positioning of the rack"
        required: false
        type: "string"
        x-exportParamName: "Row"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "name of the hardware/software manufacturer."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "start_row"
        in: "formData"
        description: "Starting row for rack, for grid positioning"
        required: false
        type: "string"
        x-exportParamName: "StartRow"
        x-optionalDataType: "String"
      - name: "start_col"
        in: "formData"
        description: "Starting column for the rack, for grid positioning"
        required: false
        type: "string"
        x-exportParamName: "StartCol"
        x-optionalDataType: "String"
      - name: "row_size"
        in: "formData"
        description: "How many rows long the rack is"
        required: false
        type: "string"
        x-exportParamName: "RowSize"
        x-optionalDataType: "String"
      - name: "col_size"
        in: "formData"
        description: "how many racks wide the rack is"
        required: false
        type: "string"
        x-exportParamName: "ColSize"
        x-optionalDataType: "String"
      - name: "orientation"
        in: "formData"
        description: "orientation of the rack in room layout view. Possible values:\
          \ right, left, up or down."
        required: false
        type: "string"
        enum:
        - "left"
        - "right"
        - "up"
        - "down"
        x-exportParamName: "Orientation"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/racks/{ID}/:
    get:
      tags:
      - "Racks"
      summary: "Retrieve detailed information about a specific rack including all\
        \ racked devices, assets and PDUs."
      description: "Get a Specific Rack"
      operationId: "getRacksID"
      parameters:
      - name: "ID"
        in: "path"
        description: "The ID of the rack to retrieve"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              asset_no:
                example: ""
              assets:
                example: ""
              available_u:
                example: "10"
              building:
                example: "New Haven"
              custom_fields:
                type: "array"
                items:
                  type: "object"
                  properties:
                    key:
                      example: "Master Key?"
                    notes:
                      example: ""
                    value:
                      example: ""
              devices:
                type: "array"
                items:
                  $ref: "#/definitions/RackDevices"
              first_number:
                example: "0"
              manufacturer:
                example: "APC Inc."
              name:
                example: "NH-DC1-02"
              notes:
                example: ""
              number_between_us:
                example: "true"
              numbering_start_from_bottom:
                example: "yes"
              pdus:
                type: "array"
                items:
                  type: "object"
                  properties:
                    bootstrap_power:
                      example: "0.00 W"
                    depth:
                      example: "Half Depth"
                    file_names:
                      example: ""
                    name:
                      example: "USNHCTPDU-03"
                    num_ports:
                      example: "32"
                    orientation:
                      example: "Back"
                    pdu_id:
                      example: "16"
                    power_draw:
                      example: " "
                    reversed:
                      example: "no"
                    size:
                      example: "1"
                    start_at:
                      example: ""
                    total_ports:
                      example: "32"
                    where:
                      example: "Right"
                    width:
                      example: "2520"
                    xpos:
                      example: "0"
              rack_id:
                example: "21"
              rack_middle_option:
                example: "Start at"
              rack_url:
                example: "/api/api/1.0/racks/21/"
              room:
                example: "NHDC1"
              row:
                example: ""
              row_size:
                example: "1"
              size:
                example: "42"
              start_col:
                example: "29"
              start_row:
                example: "10"
              tags:
                example: ""
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "Racks"
      summary: "This API is used to delete the rack with the rack id supplied as the\
        \ required argument."
      description: "Delete Rack"
      operationId: "deleteRacksID"
      parameters:
      - name: "ID"
        in: "path"
        description: "rack id"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/rack/:
    put:
      tags:
      - "Racks"
      summary: "Create/update custom fields for racks."
      description: "Create or update custom fields for racks. \"ID\" or \"name\" of\
        \ rack is needed even when value is not being changed."
      operationId: "putCustom_fieldsRack"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of room"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "id"
        in: "formData"
        description: "Rack ID or UI > Tools > Export > Rack"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/assets/:
    get:
      tags:
      - "Assets"
      summary: "Retrieve basic information about all assets."
      description: "Get All Assets"
      operationId: "getAssets"
      parameters:
      - name: "asset_no"
        in: "query"
        description: "filter by asset # (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "query"
        description: "filter by serial # (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "last_updated_lt"
        in: "query"
        description: "last updated less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedLt"
        x-optionalDataType: "String"
      - name: "last_updated_gt"
        in: "query"
        description: "last updated greater than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedGt"
        x-optionalDataType: "String"
      - name: "first_added_lt"
        in: "query"
        description: "first added less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "FirstAddedLt"
        x-optionalDataType: "String"
      - name: "first_added_gt"
        in: "query"
        description: "first added greater date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "FirstAddedGt"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "filter by asset type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "asset_id"
        in: "query"
        description: "comma separated values of existing assets."
        required: false
        type: "string"
        x-exportParamName: "AssetId"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "query"
        description: "filter by service level name"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "customer"
        in: "query"
        description: "filter by customer name"
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_and"
        in: "query"
        description: "filter by all the tags, separated by comma. (This is an AND\
          \ filter and all tags have to match for filter, this was added in v6.3.1)"
        required: false
        type: "string"
        x-exportParamName: "TagsAnd"
        x-optionalDataType: "String"
      - name: "asset_no_contains"
        in: "query"
        description: "search for any asset that contains matching asset # (Added in\
          \ v9.2.0)"
        required: false
        type: "string"
        x-exportParamName: "AssetNoContains"
        x-optionalDataType: "String"
      - name: "custom_fields_and"
        in: "query"
        description: "filter by custom fields, and filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsAnd"
        x-optionalDataType: "String"
      - name: "custom_fields_or"
        in: "query"
        description: "filter by custom fields, or filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsOr"
        x-optionalDataType: "String"
      - name: "related_device_id"
        in: "query"
        description: "ID of the related device (added in v9.3.0)"
        required: false
        type: "string"
        x-exportParamName: "RelatedDeviceId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              assets:
                type: "array"
                items:
                  $ref: "#/definitions/Assets"
              limit:
                example: "2"
              offset:
                example: "0"
              total_count:
                example: "209"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Assets"
      summary: "Create assets."
      description: "Create Assets"
      operationId: "postAssets"
      parameters:
      - name: "type"
        in: "formData"
        description: "Select an existing asset type - required.<br> You can add a\
          \ new asset type in the UI or with PUT."
        required: true
        type: "string"
        enum:
        - "AC"
        - "Block Tile"
        - "Breaker Panel"
        - "Cable Modem"
        - "DMARC"
        - "Door"
        - "Fabric Extender"
        - "Fax Machine"
        - "Filler Panel"
        - "Monitor"
        - "Patch Panel"
        - "Patch Panel Module"
        - "Projector"
        - "Scanner"
        - "Sensor"
        - "Shredder"
        - "Software"
        - "Speaker Phone"
        - "TAP Module"
        - "Window"
        x-exportParamName: "Type_"
      - name: "name"
        in: "formData"
        description: "name of asset"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "In Service, Spare, Not in Service are pre-defined - or choose\
          \ your own."
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "customer"
        in: "formData"
        description: "Name of existing customer."
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "location"
        in: "formData"
        description: "Location/region of instance deployment"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "building"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "Name of existing vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "imgfile_id"
        in: "formData"
        description: "image file id. You can see these from Tools > Import > Hardware\
          \ Import for now."
        required: false
        type: "string"
        x-exportParamName: "ImgfileId"
        x-optionalDataType: "String"
      - name: "imgfile"
        in: "formData"
        description: "name of the image file (Added in v5.8.2). Use instead of imgfile_id"
        required: false
        type: "string"
        x-exportParamName: "Imgfile"
        x-optionalDataType: "String"
      - name: "back_image_id"
        in: "formData"
        description: "back image file id. You can see these from Tools > Import >\
          \ Hardware Import for now."
        required: false
        type: "string"
        x-exportParamName: "BackImageId"
        x-optionalDataType: "String"
      - name: "back_image"
        in: "formData"
        description: "name of the back image file. Use instead of back_image_id."
        required: false
        type: "string"
        x-exportParamName: "BackImage"
        x-optionalDataType: "String"
      - name: "rack_id"
        in: "formData"
        description: "ID of existing rack to add asset to."
        required: false
        type: "string"
        x-exportParamName: "RackId"
        x-optionalDataType: "String"
      - name: "room"
        in: "formData"
        description: "Used to identify a unique rack or to place asset in existing\
          \ room."
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "start_at"
        in: "formData"
        description: "Required if adding to rack. U Start location."
        required: false
        type: "string"
        x-exportParamName: "StartAt"
        x-optionalDataType: "String"
      - name: "size"
        in: "formData"
        description: "Required if adding asset to rack. in U."
        required: false
        type: "integer"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "orientation"
        in: "formData"
        description: "Back if back facing. Otherwise ignored"
        required: false
        type: "string"
        x-exportParamName: "Orientation"
        x-optionalDataType: "String"
      - name: "where"
        in: "formData"
        description: "Location in a rack. Note: If mounted a size must be provided\
          \ or available from the hardware model."
        required: false
        type: "string"
        enum:
        - "above"
        - "below"
        - "left"
        - "right"
        - "mounted"
        x-exportParamName: "Where"
        x-optionalDataType: "String"
      - name: "x_pos"
        in: "formData"
        description: "A number between 0 and 2520 representing the position within\
          \ the u slot in increments of 252, which is equal to 1/10th of the width\
          \ of the rack. 0 will place a device flush left, 1260 will place the left\
          \ side of a device in center."
        required: false
        type: "integer"
        maximum: 2520
        minimum: 0
        x-exportParamName: "XPos"
        x-optionalDataType: "Int32"
      - name: "depth"
        in: "formData"
        description: "Half depth by default. full to override. Optional."
        required: false
        type: "string"
        enum:
        - "half"
        - "full"
        x-exportParamName: "Depth"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "ID of the related device"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "tags"
        in: "formData"
        description: "add tags (comma separated)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "remove tags (comma separated)"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no, Corp:yes specifies that\
          \ the admin groups for this object are Prod_East with view only permission\
          \ and Corp with change permission. Use for initial insert."
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "patch_panel_model_id"
        in: "formData"
        description: "Patch Panel Model ID or UI Tools > Export > Patch Panel Model"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModelId"
        x-optionalDataType: "String"
      - name: "patch_panel_model"
        in: "formData"
        description: "Name of the patch panel model (use instead of ID, Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModel"
        x-optionalDataType: "String"
      - name: "numbering_start_from"
        in: "formData"
        description: "This is starting # for patch panel ports. Defaults to 1 if not\
          \ entered."
        required: false
        type: "string"
        x-exportParamName: "NumberingStartFrom"
        x-optionalDataType: "String"
      - name: "patch_panel_module_model_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModuleModelId"
        x-optionalDataType: "String"
      - name: "patch_panel_module_model"
        in: "formData"
        description: "Name of the patch panel module model (use instead of ID, Added\
          \ in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModuleModel"
        x-optionalDataType: "String"
      - name: "module_host_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ModuleHostId"
        x-optionalDataType: "String"
      - name: "module_host"
        in: "formData"
        description: "Name of the Module host. Must be unique asset name for this\
          \ to work. (use instead of ID, Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "ModuleHost"
        x-optionalDataType: "String"
      - name: "slot_no"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "SlotNo"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Assets"
      summary: "Modify assets."
      description: "Modify Assets. Need either <b>Asset ID</b> or <b>Asset</b>"
      operationId: "putAssets"
      parameters:
      - name: "asset_id"
        in: "formData"
        description: "Asset ID"
        required: false
        type: "integer"
        x-exportParamName: "AssetId"
        x-optionalDataType: "Int32"
      - name: "asset"
        in: "formData"
        description: "Name of asset. Required if asset_id not provided."
        required: false
        type: "string"
        x-exportParamName: "Asset"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "Used to change/add the type of asset"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "In Service, Spare, Not in Service are pre-defined - or choose\
          \ your own."
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "customer"
        in: "formData"
        description: "Name of existing customer."
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "location"
        in: "formData"
        description: "Location/region of instance deployment"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "building"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "Name of existing vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "imgfile_id"
        in: "formData"
        description: "image file id. You can see these from Tools > Import > Hardware\
          \ Import for now."
        required: false
        type: "string"
        x-exportParamName: "ImgfileId"
        x-optionalDataType: "String"
      - name: "imgfile"
        in: "formData"
        description: "name of the image file (Added in v5.8.2). Use instead of imgfile_id"
        required: false
        type: "string"
        x-exportParamName: "Imgfile"
        x-optionalDataType: "String"
      - name: "back_image_id"
        in: "formData"
        description: "back image file id. You can see these from Tools > Import >\
          \ Hardware Import for now."
        required: false
        type: "string"
        x-exportParamName: "BackImageId"
        x-optionalDataType: "String"
      - name: "back_image"
        in: "formData"
        description: "name of the back image file. Use instead of back_image_id."
        required: false
        type: "string"
        x-exportParamName: "BackImage"
        x-optionalDataType: "String"
      - name: "rack_id"
        in: "formData"
        description: "ID of existing rack to add asset to."
        required: false
        type: "string"
        x-exportParamName: "RackId"
        x-optionalDataType: "String"
      - name: "room"
        in: "formData"
        description: "Used to identify a unique rack or to place asset in existing\
          \ room."
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "start_at"
        in: "formData"
        description: "Required if adding to rack. U Start location."
        required: false
        type: "string"
        x-exportParamName: "StartAt"
        x-optionalDataType: "String"
      - name: "size"
        in: "formData"
        description: "Required if adding asset to rack. in U."
        required: false
        type: "integer"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "orientation"
        in: "formData"
        description: "Back if back facing. Otherwise ignored"
        required: false
        type: "string"
        x-exportParamName: "Orientation"
        x-optionalDataType: "String"
      - name: "where"
        in: "formData"
        description: "Location in a rack. Note: If mounted a size must be provided\
          \ or available from the hardware model."
        required: false
        type: "string"
        enum:
        - "above"
        - "below"
        - "left"
        - "right"
        - "mounted"
        x-exportParamName: "Where"
        x-optionalDataType: "String"
      - name: "x_pos"
        in: "formData"
        description: "A number between 0 and 2520 representing the position within\
          \ the u slot in increments of 252, which is equal to 1/10th of the width\
          \ of the rack. 0 will place a device flush left, 1260 will place the left\
          \ side of a device in center."
        required: false
        type: "integer"
        maximum: 2520
        minimum: 0
        x-exportParamName: "XPos"
        x-optionalDataType: "Int32"
      - name: "depth"
        in: "formData"
        description: "Half depth by default. full to override. Optional."
        required: false
        type: "string"
        enum:
        - "half"
        - "full"
        x-exportParamName: "Depth"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "ID of the related device"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "tags"
        in: "formData"
        description: "add tags (comma separated)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "remove tags (comma separated)"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "name of the category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "patch_panel_model_id"
        in: "formData"
        description: "Patch Panel Model ID or UI Tools > Export > Patch Panel Model"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModelId"
        x-optionalDataType: "String"
      - name: "patch_panel_model"
        in: "formData"
        description: "Name of the patch panel model (use instead of ID, Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModel"
        x-optionalDataType: "String"
      - name: "numbering_start_from"
        in: "formData"
        description: "This is starting # for patch panel ports. Defaults to 1 if not\
          \ entered."
        required: false
        type: "string"
        x-exportParamName: "NumberingStartFrom"
        x-optionalDataType: "String"
      - name: "patch_panel_module_model_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModuleModelId"
        x-optionalDataType: "String"
      - name: "patch_panel_module_model"
        in: "formData"
        description: "Name of the patch panel module model (use instead of ID, Added\
          \ in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModuleModel"
        x-optionalDataType: "String"
      - name: "module_host_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ModuleHostId"
        x-optionalDataType: "String"
      - name: "module_host"
        in: "formData"
        description: "Name of the Module host. Must be unique asset name for this\
          \ to work. (use instead of ID, Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "ModuleHost"
        x-optionalDataType: "String"
      - name: "slot_no"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "SlotNo"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/assets/{asset-id}/:
    get:
      tags:
      - "Assets"
      summary: "Retrieve detailed information about a specific asset."
      description: "Get a Specific Asset"
      operationId: "getAssetsAsset-id"
      parameters:
      - name: "asset-id"
        in: "path"
        description: "The ID of the asset to retrieve"
        required: true
        type: "integer"
        x-exportParamName: "AssetId"
      - name: "include_cols"
        in: "query"
        description: "do not return all columns just the ones specified. For example,\
          \ ?include_cols=name, device_id, rack will only result in name, device_id,\
          \ and rack included in the output. The following column names can be part\
          \ of include_cols: name, device_id, rack, name, device_id, serial_no, asset_no,\
          \ uuid, notes, in_service, service_level, type, id, last_updated, tags,\
          \ customer_id, customer, hw_model, hw_size, manufacturer, hw_depth, rack,\
          \ start_at, rack_id, orientation, row, room, building, blade_host_name,\
          \ blade_host_id, slot_number, virtual_host_name, location, device_sub_type,\
          \ os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
          \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore,\
          \ cpuspeed, ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details,\
          \ pdu_mapping_url,modules, vms, devices, aliases, xpos, ucs_manager"
        required: false
        type: "string"
        x-exportParamName: "IncludeCols"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Assets"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "Assets"
      summary: "This API is used to delete the asset with the asset id supplied as\
        \ the required argument."
      description: "Delete Asset"
      operationId: "deleteAssets"
      parameters:
      - name: "asset-id"
        in: "path"
        description: "asset id"
        required: true
        type: "integer"
        x-exportParamName: "AssetId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/asset/:
    put:
      tags:
      - "Assets"
      summary: "Create/update custom fields for assets."
      description: "Create or update custom fields for assets. \"ID\" or \"name\"\
        \ of asset is needed even when value is not being changed"
      operationId: "putCustom_fieldsAsset"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of asset"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "id"
        in: "formData"
        description: "ID of asset"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/:
    get:
      tags:
      - "Devices"
      summary: "Retrieve basic information about all devices."
      description: "Get All Devices With Brief Output"
      operationId: "getDevices"
      parameters:
      - name: "type"
        in: "query"
        description: "filter by device type (physical, virtual, blade, other, cluster,\
          \ or unknown)"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "device_sub_type"
        in: "query"
        description: "filter by device sub type (Added in v14.7.2)"
        required: false
        type: "string"
        x-exportParamName: "DeviceSubType"
        x-optionalDataType: "String"
      - name: "device_sub_type_id"
        in: "query"
        description: "filter by device sub type id (Added in v14.7.2)"
        required: false
        type: "string"
        x-exportParamName: "DeviceSubTypeId"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "query"
        description: "filter by service level name"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "in_service"
        in: "query"
        description: "filter by whether in service or not. Use yes or no."
        required: false
        type: "string"
        x-exportParamName: "InService"
        x-optionalDataType: "String"
      - name: "customer"
        in: "query"
        description: "filter by customer name"
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "blade_host_name"
        in: "query"
        description: "filter by blade host name"
        required: false
        type: "string"
        x-exportParamName: "BladeHostName"
        x-optionalDataType: "String"
      - name: "virtual_host_name"
        in: "query"
        description: "filter by virtual host name"
        required: false
        type: "string"
        x-exportParamName: "VirtualHostName"
        x-optionalDataType: "String"
      - name: "building_id"
        in: "query"
        description: "filter by building ID (Added in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "BuildingId"
        x-optionalDataType: "String"
      - name: "building"
        in: "query"
        description: "filter by building name"
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "room_id"
        in: "query"
        description: "filter by room ID (Added in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "RoomId"
        x-optionalDataType: "String"
      - name: "room"
        in: "query"
        description: "filter by room name. Only works if room ID is not present (Added\
          \ in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "rack_id"
        in: "query"
        description: "filter by rack ID (Added in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "RackId"
        x-optionalDataType: "String"
      - name: "rack"
        in: "query"
        description: "filter by rack name. Only works if rack ID is not present (Added\
          \ in v5.9.0)"
        required: false
        type: "string"
        x-exportParamName: "Rack"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "query"
        description: "filter by serial # (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "serial_no_contains"
        in: "query"
        description: "filter by partial serial match (Added in 9.7.1)"
        required: false
        type: "string"
        x-exportParamName: "SerialNoContains"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "query"
        description: "filter by object category"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "object_category_id"
        in: "query"
        description: "filter by object category ID"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategoryId"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "query"
        description: "filter by asset # (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "tags_and"
        in: "query"
        description: "filter by all the tags, separated by comma. (This is an AND\
          \ filter and all tags have to match for filter, this was added in v6.3.1)"
        required: false
        type: "string"
        x-exportParamName: "TagsAnd"
        x-optionalDataType: "String"
      - name: "uuid"
        in: "query"
        description: "filter by uuid (exact match) (Added in v6.3.2)"
        required: false
        type: "string"
        x-exportParamName: "Uuid"
        x-optionalDataType: "String"
      - name: "is_it_switch"
        in: "query"
        description: "filter by whether switch or not. Use yes or no. (Added in v6.3.2)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItSwitch"
        x-optionalDataType: "String"
      - name: "is_it_virtual_host"
        in: "query"
        description: "filter by whether virtual host or not. Use yes or no. (Added\
          \ in v6.3.2)"
        required: false
        type: "string"
        x-exportParamName: "IsItVirtualHost"
        x-optionalDataType: "String"
      - name: "is_it_blade_host"
        in: "query"
        description: "filter by whether blade host or not. Use yes or no. (Added in\
          \ v6.3.2)"
        required: false
        type: "string"
        x-exportParamName: "IsItBladeHost"
        x-optionalDataType: "String"
      - name: "hardware"
        in: "query"
        description: "filter by name of hardware model, comma separated for multiple\
          \ hardware models (or filter). (Added in v6.3.2)"
        required: false
        type: "string"
        x-exportParamName: "Hardware"
        x-optionalDataType: "String"
      - name: "hardware_ids"
        in: "query"
        description: "filter by ID of hardware models, comma separated"
        required: false
        type: "string"
        x-exportParamName: "HardwareIds"
        x-optionalDataType: "String"
      - name: "os"
        in: "query"
        description: "filter by OS name (added in v8.3.0)"
        required: false
        type: "string"
        x-exportParamName: "Os"
        x-optionalDataType: "String"
      - name: "virtual_subtype"
        in: "query"
        description: "filter by virtual subtype (added in v8.3.2)"
        required: false
        type: "string"
        x-exportParamName: "VirtualSubtype"
        x-optionalDataType: "String"
      - name: "last_updated_lt"
        in: "query"
        description: "last updated less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedLt"
        x-optionalDataType: "String"
      - name: "last_updated_gt"
        in: "query"
        description: "last updated greater than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedGt"
        x-optionalDataType: "String"
      - name: "first_added_lt"
        in: "query"
        description: "first added less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "FirstAddedLt"
        x-optionalDataType: "String"
      - name: "first_added_gt"
        in: "query"
        description: "first added greater date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "FirstAddedGt"
        x-optionalDataType: "String"
      - name: "custom_fields_and"
        in: "query"
        description: "filter by custom fields, and filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsAnd"
        x-optionalDataType: "String"
      - name: "custom_fields_or"
        in: "query"
        description: "filter by custom fields, or filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsOr"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              Devices:
                $ref: "#/definitions/devices"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/all/:
    get:
      tags:
      - "Devices"
      summary: "Retrieve detailed information about all devices."
      description: "Get All Devices With Detailed Output (added in v6.3.4)"
      operationId: "getDevicesAll"
      parameters:
      - name: "include_cols"
        in: "query"
        description: "do not return all columns just the ones specified. For example,\
          \ ?include_cols=name, device_id, rack will only result in name, device_id,\
          \ and rack included in the output. The following column names can be part\
          \ of include_cols: name, device_id, rack, name, device_id, serial_no, asset_no,\
          \ uuid, notes, in_service, service_level, type, id, last_updated, tags,\
          \ customer_id, customer, hw_model, hw_size, manufacturer, hw_depth, rack,\
          \ start_at, rack_id, orientation, row, room, building, blade_host_name,\
          \ blade_host_id, slot_number, virtual_host_name, location, device_sub_type,\
          \ os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
          \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore,\
          \ cpuspeed, ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details,\
          \ pdu_mapping_url,modules, vms, devices, aliases, xpos, ucs_manager"
        required: false
        type: "string"
        x-exportParamName: "IncludeCols"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "return this number of devices"
        required: false
        type: "string"
        x-exportParamName: "Limit"
        x-optionalDataType: "String"
      - name: "offset"
        in: "query"
        description: "start with this device (e.g. limit=100&offset=50 means start\
          \ with the 50th device and return the next 100 devices)"
        required: false
        type: "string"
        x-exportParamName: "Offset"
        x-optionalDataType: "String"
      - name: "blankasnull"
        in: "query"
        description: "start with this device (e.g. limit=100&offset=50 means start\
          \ with the 50th device and return the next 100 devices)"
        required: false
        type: "string"
        x-exportParamName: "Blankasnull"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/devicesAll"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/id/{device-id}/:
    get:
      tags:
      - "Devices"
      summary: "Get Device by Device Id"
      description: "Retrieve detailed information about a specific device using device\
        \ id."
      operationId: "getDevicesId"
      parameters:
      - name: "device-id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "follow"
        in: "query"
        description: "use yes if you want to see virtuals in a virtual host, modules\
          \ in a blade chassis and devices in a clustered device (Added in v5.7.4)"
        required: false
        type: "string"
        x-exportParamName: "Follow"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/devicesAll"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/customer_id/{customer-id}/:
    get:
      tags:
      - "Devices"
      summary: "Get Devices by Customer Id"
      description: "Retrieve all devices associated with a specific customer."
      operationId: "getDevicesCustomer_id"
      parameters:
      - name: "customer-id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "CustomerId"
      - name: "include_cols"
        in: "query"
        description: "do not return all columns just the ones specified. For example,\
          \ ?include_cols=name, device_id, rack will only result in name, device_id,\
          \ and rack included in the output. The following column names can be part\
          \ of include_cols: name, device_id, rack, name, device_id, serial_no, asset_no,\
          \ uuid, notes, in_service, service_level, type, id, last_updated, tags,\
          \ customer_id, customer, hw_model, hw_size, manufacturer, hw_depth, rack,\
          \ start_at, rack_id, orientation, row, room, building, blade_host_name,\
          \ blade_host_id, slot_number, virtual_host_name, location, device_sub_type,\
          \ os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
          \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore,\
          \ cpuspeed, ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details,\
          \ pdu_mapping_url,modules, vms, devices, aliases, xpos, ucs_manager"
        required: false
        type: "string"
        x-exportParamName: "IncludeCols"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/devicesCustomerId"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/name/{device-name}/:
    get:
      tags:
      - "Devices"
      summary: "Get Device by Device Name"
      description: "Retrieve detailed information about a specific device by device\
        \ name"
      operationId: "getDevicesName"
      parameters:
      - name: "device-name"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "DeviceName"
      - name: "include_cols"
        in: "query"
        description: "do not return all columns just the ones specified. For example,\
          \ ?include_cols=name, device_id, rack will only result in name, device_id,\
          \ and rack included in the output. The following column names can be part\
          \ of include_cols: name, device_id, rack, name, device_id, serial_no, asset_no,\
          \ uuid, notes, in_service, service_level, type, id, last_updated, tags,\
          \ customer_id, customer, hw_model, hw_size, manufacturer, hw_depth, rack,\
          \ start_at, rack_id, orientation, row, room, building, blade_host_name,\
          \ blade_host_id, slot_number, virtual_host_name, location, device_sub_type,\
          \ os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
          \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore,\
          \ cpuspeed, ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details,\
          \ pdu_mapping_url,modules, vms, devices, aliases, xpos, ucs_manager"
        required: false
        type: "string"
        x-exportParamName: "IncludeCols"
        x-optionalDataType: "String"
      - name: "follow"
        in: "query"
        description: "use yes if you want to see virtuals in a virtual host, modules\
          \ in a blade chassis and devices in a clusetered device"
        required: false
        type: "string"
        x-exportParamName: "Follow"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/devicesCustomerId"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/serial/{device-serial}/:
    get:
      tags:
      - "Devices"
      summary: "Get Device by Device Serial Number"
      description: "Retrieve detailed information about a specific device by device\
        \ serial number."
      operationId: "getDevicesSerial"
      parameters:
      - name: "device-serial"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "DeviceSerial"
      - name: "include_cols"
        in: "query"
        description: "do not return all columns just the ones specified. For example,\
          \ ?include_cols=name, device_id, rack will only result in name, device_id,\
          \ and rack included in the output. The following column names can be part\
          \ of include_cols: name, device_id, rack, name, device_id, serial_no, asset_no,\
          \ uuid, notes, in_service, service_level, type, id, last_updated, tags,\
          \ customer_id, customer, hw_model, hw_size, manufacturer, hw_depth, rack,\
          \ start_at, rack_id, orientation, row, room, building, blade_host_name,\
          \ blade_host_id, slot_number, virtual_host_name, location, device_sub_type,\
          \ os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
          \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore,\
          \ cpuspeed, ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details,\
          \ pdu_mapping_url,modules, vms, devices, aliases, xpos, ucs_manager"
        required: false
        type: "string"
        x-exportParamName: "IncludeCols"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/devicesCustomerId"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/asset/{device-asset}/:
    get:
      tags:
      - "Devices"
      summary: "Get Device by Device Asset Number"
      description: "Retrieve detailed information about a specific device by device\
        \ asset number."
      operationId: "getDevicesAsset"
      parameters:
      - name: "device-asset"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "DeviceAsset"
      - name: "include_cols"
        in: "query"
        description: "do not return all columns just the ones specified. For example,\
          \ ?include_cols=name, device_id, rack will only result in name, device_id,\
          \ and rack included in the output. The following column names can be part\
          \ of include_cols: name, device_id, rack, name, device_id, serial_no, asset_no,\
          \ uuid, notes, in_service, service_level, type, id, last_updated, tags,\
          \ customer_id, customer, hw_model, hw_size, manufacturer, hw_depth, rack,\
          \ start_at, rack_id, orientation, row, room, building, blade_host_name,\
          \ blade_host_id, slot_number, virtual_host_name, location, device_sub_type,\
          \ os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
          \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore,\
          \ cpuspeed, ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details,\
          \ pdu_mapping_url,modules, vms, devices, aliases, xpos, ucs_manager"
        required: false
        type: "string"
        x-exportParamName: "IncludeCols"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/devicesCustomerId"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/id/{device-id}/attachments/:
    get:
      tags:
      - "Devices"
      summary: "Get all attachments for a Device by Device Id."
      description: "Retrieve all the file attachments for a specific device using\
        \ device id.<br> Returns a zip file of all the attachments associated with\
        \ the device with the specified ID in URL.<br> Note that this implementation\
        \ of Swagger does not support file download - use another mechanism such as\
        \ cULR.<br> <br>cURL example:<br> curl -X GET \\<br> URL/api/1.0/devices/id/3/attachments\
        \ \\<br> -H 'Authorization: Basic YWRtaW46YWRtIW5kNDI='"
      operationId: "getAllDevicesAttachments"
      parameters:
      - name: "device-id"
        in: "formData"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              file_download:
                example: "attachments_archive.6646-2020-01-24.zip"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Devices"
      summary: "Upload and attach a file to a Device by Device Id."
      description: "Uploads a file attachment for a specific device using device id\
        \ and a selected file.<br> Note that this implementation of Swagger does not\
        \ support file upload - use another mechanism such as cULR.<br> <br>cURL example:<br>\
        \ curl -X POST \\<br> URL/api/1.0/devices/id/3/attachments/17 \\<br> -H 'Accept-Encoding:\
        \ gzip, deflate' \\<br> -H 'Authorization: Basic YWRtaW46YWRtIW5kNDI='<br>\
        \ -H 'Content-Type: multipart/form-data; boundary=--------------------------216746989913126372322897'\
        \ \\<br> -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\
        \ \\<br> -F 'some test pdf.pdf=@/C:/path/to/attachment/Some test pdf.pdf'\
        \ \\<br> -F 'file_attachment_details={\"some test pdf.pdf\":\"hello world!\
        \ I'\\''m a pdf description!\"}'"
      operationId: "uploadDevicesAttachments"
      parameters:
      - name: "device-id"
        in: "formData"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "name"
        in: "formData"
        description: "The name of the file attachment you select for upload.<br> This\
          \ filename is also required for the file_attachment_details parameter."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "file_attachment_details"
        in: "formData"
        description: "The name of the file to upload and a description.<br>Example:\
          \ {\"TEST_Attachment-3.txt\": \"test attachment-3\"} "
        required: true
        type: "string"
        x-exportParamName: "FileAttachmentDetails"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/id/{device-id}/attachments/{attachment_id}/:
    get:
      tags:
      - "Devices"
      summary: "Get a specific device attachment by Device Id and Attachment Id."
      description: "Retrieves a specific file attachment for a specific device using\
        \ device id and attachment id.<br> Note that this implementation of Swagger\
        \ does not support file download - use another mechanism such as cULR.<br>\
        \ <br>cURL example:<br> curl -X GET \\<br> URL/api/1.0/devices/id/3/attachments/17\
        \ \\<br> -H 'Authorization: Basic YWRtaW46YWRtIW5kNDI=' "
      operationId: "getaDevicesAttachment"
      parameters:
      - name: "device-id"
        in: "formData"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "attachment_id"
        in: "formData"
        description: "ID of the attachment to get."
        required: true
        type: "integer"
        x-exportParamName: "AttachmentId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              file_download:
                example: "attachment_1.txt"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/id/{device-id}/attachments/{id}/:
    delete:
      tags:
      - "Devices"
      summary: "Delete a device attachment by Device Id and Attachment Id."
      description: "Delete a file attachment for a specific device using device Id\
        \ and the attachment Id."
      operationId: "deleteDevicesAttachment"
      parameters:
      - name: "device-id"
        in: "formData"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "id"
        in: "path"
        description: "ID of the attachment to delete."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              attachment_id:
                example: "34"
              success:
                example: "true"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/devices/{id}/:
    delete:
      tags:
      - "Devices"
      summary: "Delete Device"
      description: "This API is used to delete a device with the device id supplied\
        \ as the required argument."
      operationId: "deleteDevicesId"
      parameters:
      - name: "id"
        in: "path"
        description: "Device id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              admin:
                example: "<ID>"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/:
    post:
      tags:
      - "Devices"
      summary: "Create/Update Device by Name"
      description: "This API is used to create a new device with the name supplied\
        \ as the required argument or update an existing device that has the name,\
        \ serial # or uuid of the required argument. For information purposes, this\
        \ is also the API that is used by the Device42 auto-discovery tool."
      operationId: "postDevice"
      parameters:
      - name: "name"
        in: "formData"
        description: "Device name. If device with name already exists - the existing\
          \ device is updated. If an existing device based on serial # or uuid are\
          \ found - name is ignored. In that case existing name is not changed and\
          \ you can use new_name if you wish to change the name."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "new_name"
        in: "formData"
        description: "As mentioned above, this can be used to change the name of an\
          \ existing device"
        required: false
        type: "string"
        x-exportParamName: "NewName"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "formData"
        description: "the serial # of the device. If a device with matching serial\
          \ # is found - that device is updated. Serial # with less than 3 characters\
          \ in length are ignored. Also, certain generic serial #s like 123456789\
          \ or ‘not specified’ are ignored."
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "uuid"
        in: "formData"
        description: "The uuid of the device. If a device with a matching uuid is\
          \ found - that device is updated."
        required: false
        type: "string"
        x-exportParamName: "Uuid"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "formData"
        description: "the asset # of the device."
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "the hardware manufacturer for the device."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "hardware"
        in: "formData"
        description: "the name of the hardware model for the device. Use in conjunction\
          \ with the manufacturer argument. However, an update will only occur if\
          \ no hardware model is previously assigned to the device."
        required: false
        type: "string"
        x-exportParamName: "Hardware"
        x-optionalDataType: "String"
      - name: "new_hardware"
        in: "formData"
        description: "If you want to change the hardware model for a device. If the\
          \ device is rack mounted, it will unmount the device before changing hardware\
          \ model and attempt to mount it back to same rack location (Changed in v6.3.2)"
        required: false
        type: "string"
        x-exportParamName: "NewHardware"
        x-optionalDataType: "String"
      - name: "is_it_switch"
        in: "formData"
        description: "‘yes’ indicates if device is a network switch"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItSwitch"
        x-optionalDataType: "String"
      - name: "is_it_virtual_host"
        in: "formData"
        description: "‘yes’ indicates if device is a virtual host"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItVirtualHost"
        x-optionalDataType: "String"
      - name: "is_it_blade_host"
        in: "formData"
        description: "‘yes’ indicates if device is a blade host"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItBladeHost"
        x-optionalDataType: "String"
      - name: "in_service"
        in: "formData"
        description: "‘yes’ indicates if device is in service, ‘no’ indicates not\
          \ in service"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "InService"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "is the type for device. Valid values are ‘unknown’, ‘physical’\
          , ‘virtual’, ‘blade’, ‘cluster’, or ‘other’."
        required: false
        type: "string"
        enum:
        - "unknown"
        - "physical"
        - "virtual"
        - "blade"
        - "cluster"
        - "other"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "the service level name for the device. The service level must\
          \ be pre-defined in the device42 appliance before it can be referenced in\
          \ an api call."
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "virtual_host"
        in: "formData"
        description: "Is the name for the host of the virtual machine. Two conditions\
          \ must be met for this value to successfully update: 1. The device must\
          \ be a virtual machine. 2. The virtual host must already exist in the device42\
          \ application and must be already marked as a virtual host."
        required: false
        type: "string"
        x-exportParamName: "VirtualHost"
        x-optionalDataType: "String"
      - name: "blade_host"
        in: "formData"
        description: "the name of the host for the blade machine. Two conditions must\
          \ be met for this value to successfully update: 1. The device must be a\
          \ blade type. 2. The blade host must already exist and must already be marked\
          \ as a blade host."
        required: false
        type: "string"
        x-exportParamName: "BladeHost"
        x-optionalDataType: "String"
      - name: "slot_no"
        in: "formData"
        description: "slot # for blade device."
        required: false
        type: "integer"
        x-exportParamName: "SlotNo"
        x-optionalDataType: "Int32"
      - name: "storage_room_id"
        in: "formData"
        description: "ID of the room to assign device to storage room. Added in v5.5.0"
        required: false
        type: "integer"
        x-exportParamName: "StorageRoomId"
        x-optionalDataType: "Int32"
      - name: "storage_room"
        in: "formData"
        description: "name of the room to assign device to, only used if the room\
          \ name is unique. Added in v5.5.0"
        required: false
        type: "string"
        x-exportParamName: "StorageRoom"
        x-optionalDataType: "String"
      - name: "os"
        in: "formData"
        description: "the name of the operating system (os, osver, and osverno all\
          \ required if updating any of the three)."
        required: false
        type: "string"
        x-exportParamName: "Os"
        x-optionalDataType: "String"
      - name: "osver"
        in: "formData"
        description: "the version of the operating system (os, osver, and osverno\
          \ all required if updating any of the three)"
        required: false
        type: "string"
        x-exportParamName: "Osver"
        x-optionalDataType: "String"
      - name: "osarch"
        in: "formData"
        description: "The architecture of the operating system (32 or 64)"
        required: false
        type: "string"
        x-exportParamName: "Osarch"
        x-optionalDataType: "String"
      - name: "osverno"
        in: "formData"
        description: "the version # or build # of the operating system (os, osver,\
          \ and osverno all required if updating any of the three)"
        required: false
        type: "integer"
        x-exportParamName: "Osverno"
        x-optionalDataType: "Int32"
      - name: "memory"
        in: "formData"
        description: "the total memory(RAM) in MB. Just numbers."
        required: false
        type: "string"
        x-exportParamName: "Memory"
        x-optionalDataType: "String"
      - name: "cpucount"
        in: "formData"
        description: "total # of CPUs. (If updating, cpupower and cpucore required)"
        required: false
        type: "integer"
        x-exportParamName: "Cpucount"
        x-optionalDataType: "Int32"
      - name: "cpupower"
        in: "formData"
        description: "CPU speed in MHz, just numbers. (If updating, cpucount and cpucore\
          \ required)"
        required: false
        type: "string"
        x-exportParamName: "Cpupower"
        x-optionalDataType: "String"
      - name: "cpucore"
        in: "formData"
        description: "number of cores/CPU. Integer. (If updating, cpupower and cpucount\
          \ required)"
        required: false
        type: "string"
        x-exportParamName: "Cpucore"
        x-optionalDataType: "String"
      - name: "hddcount"
        in: "formData"
        description: "total # of HDD (hddcount, hddsize, hddraid, and hddraid_type\
          \ all required when updating any of the 4)"
        required: false
        type: "integer"
        x-exportParamName: "Hddcount"
        x-optionalDataType: "Int32"
      - name: "hddsize"
        in: "formData"
        description: "HDD Size in GB (hddcount, hddsize, hddraid, and hddraid_type\
          \ all required when updating any of the 4)"
        required: false
        type: "string"
        x-exportParamName: "Hddsize"
        x-optionalDataType: "String"
      - name: "hddraid"
        in: "formData"
        description: "Raid. Possible values: software or hardware. none to clear.\
          \ (none added in v9.1.0) (hddcount, hddsize, hddraid, and hddraid_type all\
          \ required when updating any of the 4)"
        required: false
        type: "string"
        enum:
        - "none"
        - "software"
        - "hardware"
        x-exportParamName: "Hddraid"
        x-optionalDataType: "String"
      - name: "hddraid_type"
        in: "formData"
        description: "Raid Type. (hddcount, hddsize, hddraid, and hddraid_type all\
          \ required when updating any of the 4)"
        required: false
        type: "string"
        enum:
        - "none"
        - "raid 0"
        - "raid 1"
        - "raid 3"
        - "raid 5"
        - "raid 6"
        - "raid 10"
        - "raid 50"
        - "raidz"
        - "raidz2"
        x-exportParamName: "HddraidType"
        x-optionalDataType: "String"
      - name: "macaddress"
        in: "formData"
        description: "the mac address value. Use multiple POST/PUT to add multiple\
          \ mac addresses."
        required: false
        type: "string"
        x-exportParamName: "Macaddress"
        x-optionalDataType: "String"
      - name: "devices_in_cluster"
        in: "formData"
        description: "comma separated device names for devices in cluster. Only valid\
          \ for device type cluster."
        required: false
        type: "string"
        x-exportParamName: "DevicesInCluster"
        x-optionalDataType: "String"
      - name: "appcomps"
        in: "formData"
        description: "comma separated application component names on this device."
        required: false
        type: "string"
        x-exportParamName: "Appcomps"
        x-optionalDataType: "String"
      - name: "customer"
        in: "formData"
        description: "name of the customer. Customer record must already exist."
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "contract_id"
        in: "formData"
        description: "ID for the contract. Available via GET /api/api/1.0/contracts/\
          \ – DEPRECATED in v550."
        required: false
        type: "integer"
        x-exportParamName: "ContractId"
        x-optionalDataType: "Int32"
      - name: "contract"
        in: "formData"
        description: "Name of the contract. Used only if contract name is unique.\
          \ – DEPRECATED in v550."
        required: false
        type: "string"
        x-exportParamName: "Contract"
        x-optionalDataType: "String"
      - name: "aliases"
        in: "formData"
        description: "optional. Comma separated aliases for the device. Must not exist,\
          \ ignored otherwise."
        required: false
        type: "string"
        x-exportParamName: "Aliases"
        x-optionalDataType: "String"
      - name: "subtype"
        in: "formData"
        description: "Only for device type other. Must exist internally first."
        required: false
        type: "string"
        x-exportParamName: "Subtype"
        x-optionalDataType: "String"
      - name: "blade_host_clear"
        in: "formData"
        description: "clear blade host for device"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "BladeHostClear"
        x-optionalDataType: "String"
      - name: "virtual_subtype"
        in: "formData"
        description: "Only for device type virtual. Default is internal VM."
        required: false
        type: "string"
        default: "internal VM"
        enum:
        - "internal VM"
        - "ec2"
        - "azure_vm"
        - "azure_sql"
        - "azure_storage"
        - "other"
        - "outscale"
        - "linode"
        - "digitalOcean"
        - "vmware"
        - "citrix"
        - "kvm"
        - "hyperv"
        - "docker"
        - "lxc"
        - "rackspace_vm"
        - "softlayer_vm"
        - "ovirt"
        - "joyent_vm"
        - "virtualbox"
        x-exportParamName: "VirtualSubtype"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "comma separated tags (Added in v5.9.2)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "virtual_host_clear"
        in: "formData"
        description: "yes to clear virtual host for a VM (added in v9.1.0)"
        required: false
        type: "string"
        x-exportParamName: "VirtualHostClear"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "comma separated tags to remove (added in v9.1.0)"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "aliases_remove"
        in: "formData"
        description: "comma separated aliases to remove"
        required: false
        type: "string"
        x-exportParamName: "AliasesRemove"
        x-optionalDataType: "String"
      - name: "devices_in_cluster_remove"
        in: "formData"
        description: "comma separated device names for removing devices in cluster.\
          \ Only valid for device type cluster. (added in v9.2.0)"
        required: false
        type: "string"
        x-exportParamName: "DevicesInClusterRemove"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "If multitenancy is on, a category can be assigned to control\
          \ access to this object, e.g. Prod_East specifies that the users with access\
          \ to the Prod_East category will be able to access this device."
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "new_object_category"
        in: "formData"
        description: "Used to change category on a device if it is already set."
        required: false
        type: "string"
        x-exportParamName: "NewObjectCategory"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                $ref: "#/definitions/deviceName"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Devices"
      summary: "Update an existing device by name, serial, ID or asset number."
      description: "Update Device by Name, ID, Serial or Asset. Requires one of the\
        \ following parameters: name, serial, asset, device_id"
      operationId: "putDevice"
      parameters:
      - name: "name"
        in: "formData"
        description: "Updates the device found with that name. Otherwise returns “\
          device not found\""
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "serial"
        in: "formData"
        description: "If the serial number is provided, it must be a unique serial\
          \ number or a “device not found” error will result. If it is a unique serial\
          \ number, then the device that has that serial number will be updated."
        required: false
        type: "string"
        x-exportParamName: "Serial"
        x-optionalDataType: "String"
      - name: "asset"
        in: "formData"
        description: "If the asset number is provided, it must be a unique asset number\
          \ or a “device not found” error will result. If it is a unique asset number,\
          \ then the device that has that asset number will be updated."
        required: false
        type: "string"
        x-exportParamName: "Asset"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "update the device by Device42 ID"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "new_name"
        in: "formData"
        description: "As mentioned above, this can be used to change the name of an\
          \ existing device"
        required: false
        type: "string"
        x-exportParamName: "NewName"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "formData"
        description: "the serial # of the device. If a device with matching serial\
          \ # is found - that device is updated. Serial # with less than 3 characters\
          \ in length are ignored. Also, certain generic serial #s like 123456789\
          \ or ‘not specified’ are ignored."
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "uuid"
        in: "formData"
        description: "the uuid of the device. If a device with matching uuid is found\
          \ - that device is updated."
        required: false
        type: "string"
        x-exportParamName: "Uuid"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "formData"
        description: "the asset # of the device."
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "the hardware manufacturer for the device."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "hardware"
        in: "formData"
        description: "the name of the hardware model for the device. Use in conjunction\
          \ with the manufacturer argument. However, an update will only occur if\
          \ no hardware model is previously assigned to the device."
        required: false
        type: "string"
        x-exportParamName: "Hardware"
        x-optionalDataType: "String"
      - name: "new_hardware"
        in: "formData"
        description: "If you want to change the hardware model for a device. If the\
          \ device is rack mounted, it will unmount the device before changing hardware\
          \ model and attempt to mount it back to same rack location (Changed in v6.3.2)"
        required: false
        type: "string"
        x-exportParamName: "NewHardware"
        x-optionalDataType: "String"
      - name: "is_it_switch"
        in: "formData"
        description: "‘yes’ indicates if device is a network switch"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItSwitch"
        x-optionalDataType: "String"
      - name: "is_it_virtual_host"
        in: "formData"
        description: "‘yes’ indicates if device is a virtual host"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItVirtualHost"
        x-optionalDataType: "String"
      - name: "is_it_blade_host"
        in: "formData"
        description: "‘yes’ indicates if device is a blade host"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItBladeHost"
        x-optionalDataType: "String"
      - name: "in_service"
        in: "formData"
        description: "‘yes’ indicates if device is in service, ‘no’ indicates not\
          \ in service"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "InService"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "type of the device"
        required: false
        type: "string"
        enum:
        - "physical"
        - "virtual"
        - "blade"
        - "cluster"
        - "other"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "the service level name for the device. The service level must\
          \ be pre-defined in the device42 appliance before it can be referenced in\
          \ an api call."
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "virtual_host"
        in: "formData"
        description: "Is the name for the host of the virtual machine. Two conditions\
          \ must be met for this value to successfully update: 1. The device must\
          \ be a virtual machine. 2. The virtual host must already exist in the device42\
          \ application and must be already marked as a virtual host."
        required: false
        type: "string"
        x-exportParamName: "VirtualHost"
        x-optionalDataType: "String"
      - name: "blade_host"
        in: "formData"
        description: "the name of the host for the blade machine. Two conditions must\
          \ be met for this value to successfully update: 1. The device must be a\
          \ blade type. 2. The blade host must already exist and must already be marked\
          \ as a blade host."
        required: false
        type: "string"
        x-exportParamName: "BladeHost"
        x-optionalDataType: "String"
      - name: "slot_no"
        in: "formData"
        description: "slot # for blade device."
        required: false
        type: "integer"
        x-exportParamName: "SlotNo"
        x-optionalDataType: "Int32"
      - name: "storage_room_id"
        in: "formData"
        description: "ID of the room to assign device to storage room. Added in v5.5.0"
        required: false
        type: "integer"
        x-exportParamName: "StorageRoomId"
        x-optionalDataType: "Int32"
      - name: "storage_room"
        in: "formData"
        description: "name of the room to assign device to, only used if the room\
          \ name is unique. Added in v5.5.0"
        required: false
        type: "string"
        x-exportParamName: "StorageRoom"
        x-optionalDataType: "String"
      - name: "os"
        in: "formData"
        description: "the name of the operating system (os, osver, and osverno all\
          \ required if updating any of the three)."
        required: false
        type: "string"
        x-exportParamName: "Os"
        x-optionalDataType: "String"
      - name: "osver"
        in: "formData"
        description: "the version of the operating system (os, osver, and osverno\
          \ all required if updating any of the three)"
        required: false
        type: "string"
        x-exportParamName: "Osver"
        x-optionalDataType: "String"
      - name: "osarch"
        in: "formData"
        description: "The architecture of the operating system (32 or 64)"
        required: false
        type: "string"
        x-exportParamName: "Osarch"
        x-optionalDataType: "String"
      - name: "osverno"
        in: "formData"
        description: "the version # or build # of the operating system (os, osver,\
          \ and osverno all required if updating any of the three)"
        required: false
        type: "integer"
        x-exportParamName: "Osverno"
        x-optionalDataType: "Int32"
      - name: "memory"
        in: "formData"
        description: "the total memory(RAM) in MB. Just numbers."
        required: false
        type: "string"
        x-exportParamName: "Memory"
        x-optionalDataType: "String"
      - name: "cpucount"
        in: "formData"
        description: "total # of CPUs. (If updating, cpupower and cpucore required)"
        required: false
        type: "integer"
        x-exportParamName: "Cpucount"
        x-optionalDataType: "Int32"
      - name: "cpupower"
        in: "formData"
        description: "CPU speed in MHz, just numbers. (If updating, cpucount and cpucore\
          \ required)"
        required: false
        type: "string"
        x-exportParamName: "Cpupower"
        x-optionalDataType: "String"
      - name: "cpucore"
        in: "formData"
        description: "number of cores/CPU. Integer. (If updating, cpupower and cpucount\
          \ required)"
        required: false
        type: "string"
        x-exportParamName: "Cpucore"
        x-optionalDataType: "String"
      - name: "hddcount"
        in: "formData"
        description: "total # of HDD (hddcount, hddsize, hddraid, and hddraid_type\
          \ all required when updating any of the 4)"
        required: false
        type: "integer"
        x-exportParamName: "Hddcount"
        x-optionalDataType: "Int32"
      - name: "hddsize"
        in: "formData"
        description: "HDD Size in GB (hddcount, hddsize, hddraid, and hddraid_type\
          \ all required when updating any of the 4)"
        required: false
        type: "string"
        x-exportParamName: "Hddsize"
        x-optionalDataType: "String"
      - name: "hddraid"
        in: "formData"
        description: "Raid. Possible values: software or hardware. none to clear.\
          \ (none added in v9.1.0) (hddcount, hddsize, hddraid, and hddraid_type all\
          \ required when updating any of the 4)"
        required: false
        type: "string"
        enum:
        - "none"
        - "software"
        - "hardware"
        x-exportParamName: "Hddraid"
        x-optionalDataType: "String"
      - name: "hddraid_type"
        in: "formData"
        description: "Raid Type. (hddcount, hddsize, hddraid, and hddraid_type all\
          \ required when updating any of the 4)"
        required: false
        type: "string"
        enum:
        - "none"
        - "raid 0"
        - "raid 1"
        - "raid 3"
        - "raid 5"
        - "raid 6"
        - "raid 10"
        - "raid 50"
        - "raidz"
        - "raidz2"
        x-exportParamName: "HddraidType"
        x-optionalDataType: "String"
      - name: "macaddress"
        in: "formData"
        description: "the mac address value. Use multiple POST/PUT to add multiple\
          \ mac addresses."
        required: false
        type: "string"
        x-exportParamName: "Macaddress"
        x-optionalDataType: "String"
      - name: "devices_in_cluster"
        in: "formData"
        description: "comma separated device names for devices in cluster. Only valid\
          \ for device type cluster."
        required: false
        type: "string"
        x-exportParamName: "DevicesInCluster"
        x-optionalDataType: "String"
      - name: "appcomps"
        in: "formData"
        description: "comma separated application component names on this device."
        required: false
        type: "string"
        x-exportParamName: "Appcomps"
        x-optionalDataType: "String"
      - name: "customer"
        in: "formData"
        description: "name of the customer. Customer record must already exist."
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "contract_id"
        in: "formData"
        description: "ID for the contract. Available via GET /api/api/1.0/contracts/\
          \ – DEPRECATED in v550."
        required: false
        type: "integer"
        x-exportParamName: "ContractId"
        x-optionalDataType: "Int32"
      - name: "contract"
        in: "formData"
        description: "Name of the contract. Used only if contract name is unique.\
          \ – DEPRECATED in v550."
        required: false
        type: "string"
        x-exportParamName: "Contract"
        x-optionalDataType: "String"
      - name: "aliases"
        in: "formData"
        description: "optional. Comma separated aliases for the device. Must not exist,\
          \ ignored otherwise."
        required: false
        type: "string"
        x-exportParamName: "Aliases"
        x-optionalDataType: "String"
      - name: "subtype"
        in: "formData"
        description: "Only for device type other. Must exist internally first."
        required: false
        type: "string"
        x-exportParamName: "Subtype"
        x-optionalDataType: "String"
      - name: "blade_host_clear"
        in: "formData"
        description: "clear blade host for device"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "BladeHostClear"
        x-optionalDataType: "String"
      - name: "virtual_subtype"
        in: "formData"
        description: "Only for device type virtual. Default is internal VM."
        required: false
        type: "string"
        default: "internal VM"
        enum:
        - "internal VM"
        - "ec2"
        - "azure_vm"
        - "azure_sql"
        - "azure_storage"
        - "other"
        - "outscale"
        - "linode"
        - "digitalOcean"
        - "vmware"
        - "citrix"
        - "kvm"
        - "hyperv"
        - "docker"
        - "lxc"
        - "rackspace_vm"
        - "softlayer_vm"
        - "ovirt"
        - "joyent_vm"
        - "virtualbox"
        x-exportParamName: "VirtualSubtype"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "comma separated tags (Added in v5.9.2)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "virtual_host_clear"
        in: "formData"
        description: "yes to clear virtual host for a VM (added in v9.1.0)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "VirtualHostClear"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "comma separated tags to remove (added in v9.1.0)"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "aliases_remove"
        in: "formData"
        description: "comma separated aliases to remove"
        required: false
        type: "string"
        x-exportParamName: "AliasesRemove"
        x-optionalDataType: "String"
      - name: "devices_in_cluster_remove"
        in: "formData"
        description: "comma separated device names for removing devices in cluster.\
          \ Only valid for device type cluster. (added in v9.2.0)"
        required: false
        type: "string"
        x-exportParamName: "DevicesInClusterRemove"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "If multitenancy is on, a category can be assigned to control\
          \ access to this object, e.g. Prod_East specifies that the users with access\
          \ to the Prod_East category will be able to access this device."
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "new_object_category"
        in: "formData"
        description: "Used to change category on a device if it is already set."
        required: false
        type: "string"
        x-exportParamName: "NewObjectCategory"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                $ref: "#/definitions/deviceName"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
  /api/1.0/multiserial_device/:
    post:
      tags:
      - "Devices"
      summary: "Create/Update Multi-Serial Device by Name"
      description: "This API is used to create a new device with the name supplied\
        \ as the required argument or update an existing device that with that name.\
        \ This is similar to /api/api/1.0/devices/ POST call - but you can add duplicate\
        \ serial numberss and UUID for high density servers that share the same serial\
        \ # and/or UUID."
      operationId: "postMultiSerialDevice"
      parameters:
      - name: "name"
        in: "formData"
        description: "Device name. If device with name already exists - the existing\
          \ device is updated. If an existing device based on serial # or uuid are\
          \ found - name is ignored. In that case existing name is not changed and\
          \ you can use new_name if you wish to change the name."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "new_name"
        in: "formData"
        description: "As mentioned above, this can be used to change the name of an\
          \ existing device"
        required: false
        type: "string"
        x-exportParamName: "NewName"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "formData"
        description: "the serial # of the device. If a device with matching serial\
          \ # is found - that device is updated. Serial # with less than 3 characters\
          \ in length are ignored. Also, certain generic serial #s like 123456789\
          \ or ‘not specified’ are ignored."
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "uuid"
        in: "formData"
        description: "the uuid of the device. If a device with matching uuid is found\
          \ - that device is updated."
        required: false
        type: "string"
        x-exportParamName: "Uuid"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "formData"
        description: "the asset # of the device."
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "the hardware manufacturer for the device."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "hardware"
        in: "formData"
        description: "the name of the hardware model for the device. Use in conjunction\
          \ with the manufacturer argument. However, an update will only occur if\
          \ no hardware model is previously assigned to the device."
        required: false
        type: "string"
        x-exportParamName: "Hardware"
        x-optionalDataType: "String"
      - name: "new_hardware"
        in: "formData"
        description: "If you want to change the hardware model for a device. If the\
          \ device is rack mounted, it will unmount the device before changing hardware\
          \ model and attempt to mount it back to same rack location (Changed in v6.3.2)"
        required: false
        type: "string"
        x-exportParamName: "NewHardware"
        x-optionalDataType: "String"
      - name: "is_it_switch"
        in: "formData"
        description: "‘yes’ indicates if device is a network switch"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItSwitch"
        x-optionalDataType: "String"
      - name: "is_it_virtual_host"
        in: "formData"
        description: "‘yes’ indicates if device is a virtual host"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItVirtualHost"
        x-optionalDataType: "String"
      - name: "is_it_blade_host"
        in: "formData"
        description: "‘yes’ indicates if device is a blade host"
        required: false
        type: "string"
        x-exportParamName: "IsItBladeHost"
        x-optionalDataType: "String"
      - name: "in_service"
        in: "formData"
        description: "‘yes’ indicates if device is in service, ‘no’ indicates not\
          \ in service"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "InService"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "is the type for device. Valid values are ‘physical’, ‘virtual’\
          , ‘blade’, ‘cluster’, or ‘other’."
        required: false
        type: "string"
        enum:
        - "physical"
        - "virtual"
        - "blade"
        - "cluster"
        - "other"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "the service level name for the device. The service level must\
          \ be pre-defined in the device42 appliance before it can be referenced in\
          \ an api call."
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "virtual_host"
        in: "formData"
        description: "Is the name for the host of the virtual machine. Two conditions\
          \ must be met for this value to successfully update: 1. The device must\
          \ be a virtual machine. 2. The virtual host must already exist in the device42\
          \ application and must be already marked as a virtual host."
        required: false
        type: "string"
        x-exportParamName: "VirtualHost"
        x-optionalDataType: "String"
      - name: "blade_host"
        in: "formData"
        description: "the name of the host for the blade machine. Two conditions must\
          \ be met for this value to successfully update: 1. The device must be a\
          \ blade type. 2. The blade host must already exist and must already be marked\
          \ as a blade host."
        required: false
        type: "string"
        x-exportParamName: "BladeHost"
        x-optionalDataType: "String"
      - name: "slot_no"
        in: "formData"
        description: "slot # for blade device."
        required: false
        type: "integer"
        x-exportParamName: "SlotNo"
        x-optionalDataType: "Int32"
      - name: "storage_room_id"
        in: "formData"
        description: "ID of the room to assign device to storage room. Added in v5.5.0"
        required: false
        type: "integer"
        x-exportParamName: "StorageRoomId"
        x-optionalDataType: "Int32"
      - name: "storage_room"
        in: "formData"
        description: "name of the room to assign device to, only used if the room\
          \ name is unique. Added in v5.5.0"
        required: false
        type: "string"
        x-exportParamName: "StorageRoom"
        x-optionalDataType: "String"
      - name: "os"
        in: "formData"
        description: "the name of the operating system (os, osver, and osverno all\
          \ required if updating any of the three)."
        required: false
        type: "string"
        x-exportParamName: "Os"
        x-optionalDataType: "String"
      - name: "osver"
        in: "formData"
        description: "the version of the operating system (os, osver, and osverno\
          \ all required if updating any of the three)"
        required: false
        type: "string"
        x-exportParamName: "Osver"
        x-optionalDataType: "String"
      - name: "osarch"
        in: "formData"
        description: "The architecture of the operating system (32 or 64)"
        required: false
        type: "string"
        x-exportParamName: "Osarch"
        x-optionalDataType: "String"
      - name: "osverno"
        in: "formData"
        description: "the version # or build # of the operating system (os, osver,\
          \ and osverno all required if updating any of the three)"
        required: false
        type: "integer"
        x-exportParamName: "Osverno"
        x-optionalDataType: "Int32"
      - name: "memory"
        in: "formData"
        description: "the total memory(RAM) in MB. Just numbers."
        required: false
        type: "string"
        x-exportParamName: "Memory"
        x-optionalDataType: "String"
      - name: "cpucount"
        in: "formData"
        description: "total # of CPUs. (If updating, cpupower and cpucore required)"
        required: false
        type: "integer"
        x-exportParamName: "Cpucount"
        x-optionalDataType: "Int32"
      - name: "cpupower"
        in: "formData"
        description: "CPU speed in MHz, just numbers. (If updating, cpucount and cpucore\
          \ required)"
        required: false
        type: "string"
        x-exportParamName: "Cpupower"
        x-optionalDataType: "String"
      - name: "cpucore"
        in: "formData"
        description: "number of cores/CPU. Integer. (If updating, cpupower and cpucount\
          \ required)"
        required: false
        type: "string"
        x-exportParamName: "Cpucore"
        x-optionalDataType: "String"
      - name: "hddcount"
        in: "formData"
        description: "total # of HDD (hddcount, hddsize, hddraid, and hddraid_type\
          \ all required when updating any of the 4)"
        required: false
        type: "integer"
        x-exportParamName: "Hddcount"
        x-optionalDataType: "Int32"
      - name: "hddsize"
        in: "formData"
        description: "HDD Size in GB (hddcount, hddsize, hddraid, and hddraid_type\
          \ all required when updating any of the 4)"
        required: false
        type: "string"
        x-exportParamName: "Hddsize"
        x-optionalDataType: "String"
      - name: "hddraid"
        in: "formData"
        description: "Raid. Possible values: software or hardware. none to clear.\
          \ (none added in v9.1.0) (hddcount, hddsize, hddraid, and hddraid_type all\
          \ required when updating any of the 4)"
        required: false
        type: "string"
        enum:
        - "none"
        - "software"
        - "hardware"
        x-exportParamName: "Hddraid"
        x-optionalDataType: "String"
      - name: "hddraid_type"
        in: "formData"
        description: "Raid Type. (hddcount, hddsize, hddraid, and hddraid_type all\
          \ required when updating any of the 4)"
        required: false
        type: "string"
        enum:
        - "none"
        - "raid 0"
        - "raid 1"
        - "raid 3"
        - "raid 5"
        - "raid 6"
        - "raid 10"
        - "raid 50"
        - "raidz"
        - "raidz2"
        x-exportParamName: "HddraidType"
        x-optionalDataType: "String"
      - name: "macaddress"
        in: "formData"
        description: "the mac address value. Use multiple POST/PUT to add multiple\
          \ mac addresses."
        required: false
        type: "string"
        x-exportParamName: "Macaddress"
        x-optionalDataType: "String"
      - name: "devices_in_cluster"
        in: "formData"
        description: "comma separated device names for devices in cluster. Only valid\
          \ for device type cluster."
        required: false
        type: "string"
        x-exportParamName: "DevicesInCluster"
        x-optionalDataType: "String"
      - name: "appcomps"
        in: "formData"
        description: "comma separated application component names on this device."
        required: false
        type: "string"
        x-exportParamName: "Appcomps"
        x-optionalDataType: "String"
      - name: "customer"
        in: "formData"
        description: "name of the customer. Customer record must already exist."
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "contract_id"
        in: "formData"
        description: "ID for the contract. Available via GET /api/api/1.0/contracts/\
          \ – DEPRECATED in v550."
        required: false
        type: "integer"
        x-exportParamName: "ContractId"
        x-optionalDataType: "Int32"
      - name: "contract"
        in: "formData"
        description: "Name of the contract. Used only if contract name is unique.\
          \ – DEPRECATED in v550."
        required: false
        type: "string"
        x-exportParamName: "Contract"
        x-optionalDataType: "String"
      - name: "aliases"
        in: "formData"
        description: "optional. Comma separated aliases for the device. Must not exist,\
          \ ignored otherwise."
        required: false
        type: "string"
        x-exportParamName: "Aliases"
        x-optionalDataType: "String"
      - name: "subtype"
        in: "formData"
        description: "Only for device type other. Must exist internally first."
        required: false
        type: "string"
        x-exportParamName: "Subtype"
        x-optionalDataType: "String"
      - name: "blade_host_clear"
        in: "formData"
        description: "clear blade host for device"
        required: false
        type: "string"
        x-exportParamName: "BladeHostClear"
        x-optionalDataType: "String"
      - name: "virtual_subtype"
        in: "formData"
        description: "Only for device type virtual. Default is internal VM."
        required: false
        type: "string"
        default: "internal VM"
        enum:
        - "internal VM"
        - "ec2"
        - "azure_vm"
        - "azure_sql"
        - "azure_storage"
        - "other"
        - "outscale"
        - "linode"
        - "digitalOcean"
        - "vmware"
        - "citrix"
        - "kvm"
        - "hyperv"
        - "docker"
        - "lxc"
        - "rackspace_vm"
        - "softlayer_vm"
        - "ovirt"
        - "joyent_vm"
        - "virtualbox"
        x-exportParamName: "VirtualSubtype"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "comma separated tags (Added in v5.9.2)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "virtual_host_clear"
        in: "formData"
        description: "yes to clear virtual host for a VM (added in v9.1.0)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "VirtualHostClear"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "comma separated tags to remove (added in v9.1.0)"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "aliases_remove"
        in: "formData"
        description: "comma separated aliases to remove"
        required: false
        type: "string"
        x-exportParamName: "AliasesRemove"
        x-optionalDataType: "String"
      - name: "devices_in_cluster_remove"
        in: "formData"
        description: "comma separated device names for removing devices in cluster.\
          \ Only valid for device type cluster. (added in v9.2.0)"
        required: false
        type: "string"
        x-exportParamName: "DevicesInClusterRemove"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "If multitenancy is on, a category can be assigned to control\
          \ access to this object, e.g. Prod_East specifies that the users with access\
          \ to the Prod_East category will be able to access this device."
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "new_object_category"
        in: "formData"
        description: "Used to change category on a device if it is already set."
        required: false
        type: "string"
        x-exportParamName: "NewObjectCategory"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                $ref: "#/definitions/deviceName"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/multinodes/:
    post:
      tags:
      - "Devices"
      summary: "Create/Update Multi-Node Device by Name"
      description: "This API is used to create a new device with the name supplied\
        \ as the required argument or update an existing device that with that name.\
        \ This is similar to /api/api/1.0/devices/ POST call - but you can add duplicate\
        \ serial #s and UUID for high density servers that share the same serial #\
        \ and/or UUID."
      operationId: "postMultiNodeDevice"
      parameters:
      - name: "name"
        in: "formData"
        description: "Device name. If device with name already exists - the existing\
          \ device is updated. If an existing device based on serial # or uuid are\
          \ found - name is ignored. In that case existing name is not changed and\
          \ you can use new_name if you wish to change the name."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "new_name"
        in: "formData"
        description: "As mentioned above, this can be used to change the name of an\
          \ existing device"
        required: false
        type: "string"
        x-exportParamName: "NewName"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "formData"
        description: "the serial # of the device. If a device with matching serial\
          \ # is found - that device is updated. Serial # with less than 3 characters\
          \ in length are ignored. Also, certain generic serial #s like 123456789\
          \ or ‘not specified’ are ignored."
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "uuid"
        in: "formData"
        description: "the uuid of the device. If a device with matching uuid is found\
          \ - that device is updated."
        required: false
        type: "integer"
        x-exportParamName: "Uuid"
        x-optionalDataType: "Int32"
      - name: "asset_no"
        in: "formData"
        description: "the asset # of the device."
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "the hardware manufacturer for the device."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "hardware"
        in: "formData"
        description: "the name of the hardware model for the device. Use in conjunction\
          \ with the manufacturer argument. However, an update will only occur if\
          \ no hardware model is previously assigned to the device."
        required: false
        type: "string"
        x-exportParamName: "Hardware"
        x-optionalDataType: "String"
      - name: "new_hardware"
        in: "formData"
        description: "If you want to change the hardware model for a device. If the\
          \ device is rack mounted, it will unmount the device before changing hardware\
          \ model and attempt to mount it back to same rack location (Changed in v6.3.2)"
        required: false
        type: "string"
        x-exportParamName: "NewHardware"
        x-optionalDataType: "String"
      - name: "is_it_switch"
        in: "formData"
        description: "‘yes’ indicates if device is a network switch"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItSwitch"
        x-optionalDataType: "String"
      - name: "is_it_virtual_host"
        in: "formData"
        description: "‘yes’ indicates if device is a virtual host"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItVirtualHost"
        x-optionalDataType: "String"
      - name: "is_it_blade_host"
        in: "formData"
        description: "‘yes’ indicates if device is a blade host"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItBladeHost"
        x-optionalDataType: "String"
      - name: "in_service"
        in: "formData"
        description: "‘yes’ indicates if device is in service, ‘no’ indicates not\
          \ in service"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "InService"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "the type of the device"
        required: false
        type: "string"
        enum:
        - "physical"
        - "virtual"
        - "blade"
        - "cluster"
        - "other"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "the service level name for the device. The service level must\
          \ be pre-defined in the device42 appliance before it can be referenced in\
          \ an api call."
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "virtual_host"
        in: "formData"
        description: "Is the name for the host of the virtual machine. Two conditions\
          \ must be met for this value to successfully update: 1. The device must\
          \ be a virtual machine. 2. The virtual host must already exist in the device42\
          \ application and must be already marked as a virtual host."
        required: false
        type: "string"
        x-exportParamName: "VirtualHost"
        x-optionalDataType: "String"
      - name: "blade_host"
        in: "formData"
        description: "the name of the host for the blade machine. Two conditions must\
          \ be met for this value to successfully update: 1. The device must be a\
          \ blade type. 2. The blade host must already exist and must already be marked\
          \ as a blade host."
        required: false
        type: "string"
        x-exportParamName: "BladeHost"
        x-optionalDataType: "String"
      - name: "slot_no"
        in: "formData"
        description: "slot # for blade device."
        required: false
        type: "integer"
        x-exportParamName: "SlotNo"
        x-optionalDataType: "Int32"
      - name: "storage_room_id"
        in: "formData"
        description: "ID of the room to assign device to storage room. Added in v5.5.0"
        required: false
        type: "integer"
        x-exportParamName: "StorageRoomId"
        x-optionalDataType: "Int32"
      - name: "storage_room"
        in: "formData"
        description: "name of the room to assign device to, only used if the room\
          \ name is unique. Added in v5.5.0"
        required: false
        type: "string"
        x-exportParamName: "StorageRoom"
        x-optionalDataType: "String"
      - name: "os"
        in: "formData"
        description: "the name of the operating system (os, osver, and osverno all\
          \ required if updating any of the three)."
        required: false
        type: "string"
        x-exportParamName: "Os"
        x-optionalDataType: "String"
      - name: "osver"
        in: "formData"
        description: "the version of the operating system (os, osver, and osverno\
          \ all required if updating any of the three)"
        required: false
        type: "string"
        x-exportParamName: "Osver"
        x-optionalDataType: "String"
      - name: "osarch"
        in: "formData"
        description: "The architecture of the operating system (32 or 64)"
        required: false
        type: "string"
        x-exportParamName: "Osarch"
        x-optionalDataType: "String"
      - name: "osverno"
        in: "formData"
        description: "the version # or build # of the operating system (os, osver,\
          \ and osverno all required if updating any of the three)"
        required: false
        type: "integer"
        x-exportParamName: "Osverno"
        x-optionalDataType: "Int32"
      - name: "memory"
        in: "formData"
        description: "the total memory(RAM) in MB. Just numbers."
        required: false
        type: "string"
        x-exportParamName: "Memory"
        x-optionalDataType: "String"
      - name: "cpucount"
        in: "formData"
        description: "total # of CPUs. (If updating, cpupower and cpucore required)"
        required: false
        type: "integer"
        x-exportParamName: "Cpucount"
        x-optionalDataType: "Int32"
      - name: "cpupower"
        in: "formData"
        description: "CPU speed in MHz, just numbers. (If updating, cpucount and cpucore\
          \ required)"
        required: false
        type: "string"
        x-exportParamName: "Cpupower"
        x-optionalDataType: "String"
      - name: "cpucore"
        in: "formData"
        description: "number of cores/CPU. Integer. (If updating, cpupower and cpucount\
          \ required)"
        required: false
        type: "string"
        x-exportParamName: "Cpucore"
        x-optionalDataType: "String"
      - name: "hddcount"
        in: "formData"
        description: "total # of HDD (hddcount, hddsize, hddraid, and hddraid_type\
          \ all required when updating any of the 4)"
        required: false
        type: "integer"
        x-exportParamName: "Hddcount"
        x-optionalDataType: "Int32"
      - name: "hddsize"
        in: "formData"
        description: "HDD Size in GB (hddcount, hddsize, hddraid, and hddraid_type\
          \ all required when updating any of the 4)"
        required: false
        type: "string"
        x-exportParamName: "Hddsize"
        x-optionalDataType: "String"
      - name: "hddraid"
        in: "formData"
        description: "Raid. Possible values: software or hardware. none to clear.\
          \ (none added in v9.1.0) (hddcount, hddsize, hddraid, and hddraid_type all\
          \ required when updating any of the 4)"
        required: false
        type: "string"
        enum:
        - "none"
        - "software"
        - "hardware"
        x-exportParamName: "Hddraid"
        x-optionalDataType: "String"
      - name: "hddraid_type"
        in: "formData"
        description: "Raid Type. (hddcount, hddsize, hddraid, and hddraid_type all\
          \ required when updating any of the 4)"
        required: false
        type: "string"
        enum:
        - "none"
        - "raid 0"
        - "raid 1"
        - "raid 3"
        - "raid 5"
        - "raid 6"
        - "raid 10"
        - "raid 50"
        - "raidz"
        - "raidz2"
        x-exportParamName: "HddraidType"
        x-optionalDataType: "String"
      - name: "macaddress"
        in: "formData"
        description: "the mac address value. Use multiple POST/PUT to add multiple\
          \ mac addresses."
        required: false
        type: "string"
        x-exportParamName: "Macaddress"
        x-optionalDataType: "String"
      - name: "devices_in_cluster"
        in: "formData"
        description: "comma separated device names for devices in cluster. Only valid\
          \ for device type cluster."
        required: false
        type: "string"
        x-exportParamName: "DevicesInCluster"
        x-optionalDataType: "String"
      - name: "appcomps"
        in: "formData"
        description: "comma separated application component names on this device."
        required: false
        type: "string"
        x-exportParamName: "Appcomps"
        x-optionalDataType: "String"
      - name: "customer"
        in: "formData"
        description: "name of the customer. Customer record must already exist."
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "contract_id"
        in: "formData"
        description: "ID for the contract. Available via GET /api/api/1.0/contracts/\
          \ – DEPRECATED in v550."
        required: false
        type: "integer"
        x-exportParamName: "ContractId"
        x-optionalDataType: "Int32"
      - name: "contract"
        in: "formData"
        description: "Name of the contract. Used only if contract name is unique.\
          \ – DEPRECATED in v550."
        required: false
        type: "string"
        x-exportParamName: "Contract"
        x-optionalDataType: "String"
      - name: "aliases"
        in: "formData"
        description: "optional. Comma separated aliases for the device. Must not exist,\
          \ ignored otherwise."
        required: false
        type: "string"
        x-exportParamName: "Aliases"
        x-optionalDataType: "String"
      - name: "subtype"
        in: "formData"
        description: "Only for device type other. Must exist internally first."
        required: false
        type: "string"
        x-exportParamName: "Subtype"
        x-optionalDataType: "String"
      - name: "blade_host_clear"
        in: "formData"
        description: "clear blade host for device"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "BladeHostClear"
        x-optionalDataType: "String"
      - name: "virtual_subtype"
        in: "formData"
        description: "Only for device type virtual. Default is internal VM."
        required: false
        type: "string"
        default: "internal VM"
        enum:
        - "internal VM"
        - "ec2"
        - "azure_vm"
        - "azure_sql"
        - "azure_storage"
        - "other"
        - "outscale"
        - "linode"
        - "digitalOcean"
        - "vmware"
        - "citrix"
        - "kvm"
        - "hyperv"
        - "docker"
        - "lxc"
        - "rackspace_vm"
        - "softlayer_vm"
        - "ovirt"
        - "joyent_vm"
        - "virtualbox"
        x-exportParamName: "VirtualSubtype"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "comma separated tags (Added in v5.9.2)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "virtual_host_clear"
        in: "formData"
        description: "yes to clear virtual host for a VM (added in v9.1.0)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "VirtualHostClear"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "comma separated tags to remove (added in v9.1.0)"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "aliases_remove"
        in: "formData"
        description: "comma separated aliases to remove"
        required: false
        type: "string"
        x-exportParamName: "AliasesRemove"
        x-optionalDataType: "String"
      - name: "devices_in_cluster_remove"
        in: "formData"
        description: "comma separated device names for removing devices in cluster.\
          \ Only valid for device type cluster. (added in v9.2.0)"
        required: false
        type: "string"
        x-exportParamName: "DevicesInClusterRemove"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "If multitenancy is on, a category can be assigned to control\
          \ access to this object, e.g. Prod_East specifies that the users with access\
          \ to the Prod_East category will be able to access this device."
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "new_object_category"
        in: "formData"
        description: "Used to change category on a device if it is already set."
        required: false
        type: "string"
        x-exportParamName: "NewObjectCategory"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                $ref: "#/definitions/deviceName"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/cloud_instance/:
    post:
      tags:
      - "Devices"
      summary: "Create/Update Device Cloud Instance Information"
      description: "Update cloud instance information for devices. Requires either\
        \ device or device_id"
      operationId: "postCloudInstanceDevice"
      parameters:
      - name: "device"
        in: "formData"
        description: "Device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "Device ID"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "instance_id"
        in: "formData"
        description: "The cloud instance ID of the device"
        required: false
        type: "integer"
        x-exportParamName: "InstanceId"
        x-optionalDataType: "Int32"
      - name: "vendor"
        in: "formData"
        description: "The cloud vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "status"
        in: "formData"
        description: "Instance status (ie, running, stopped)"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "location"
        in: "formData"
        description: "Location/region of instance deployment"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              devices:
                $ref: "#/definitions/devices"
            description: "The above command returns results like this:"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/custom_field/:
    put:
      tags:
      - "Devices"
      summary: "Create/Update Custom Fields for a Device"
      description: "One of the following parameters is required: name, id, asset,\
        \ or serial"
      operationId: "putCustom_Field"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the device, or"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "id"
        in: "formData"
        description: "ID of the device"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "asset"
        in: "formData"
        description: "if there is more than 1 device with the same asset #, this will\
          \ return “device not found”, or"
        required: false
        type: "string"
        x-exportParamName: "Asset"
        x-optionalDataType: "String"
      - name: "serial"
        in: "formData"
        description: "if there is more than 1 device with the same serial #, this\
          \ will return “device not found”"
        required: false
        type: "string"
        x-exportParamName: "Serial"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related_field. The existing field to relate\
          \ this custom field to. Can be: appcomp (for application components), asset,\
          \ building, certificate, circuit, cusotmer, device, endusers, hardware (for\
          \ device hardware models), ip_address, natip, netport (for ports), os, part,\
          \ partmodel, password, pdu (for power units), pdu_model (for power unit\
          \ models), ports, purchase, purchaselineitem (for a line item on a purchase\
          \ order), rack, room, software, vlan (for subnets), switch_vlan (for vlans),\
          \ vrfgroup"
        required: false
        type: "string"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes."
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2 (added in v6.4.1)"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/impactlist/{device-id}/:
    get:
      tags:
      - "Devices"
      summary: "This API endpoint retrieves the impact list of a device by ID."
      description: "Get Device Impact List"
      operationId: "getDevicesImpactlist"
      parameters:
      - name: "device-id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              children:
                $ref: "#/definitions/devicesImpactList"
              name:
                example: "Dependant Apps"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
            detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/mountpoints/:
    get:
      tags:
      - "Devices"
      summary: "Get device mountpoints - introduced in version 10.5.0"
      description: "Get Device Mountpoints"
      operationId: "getDeviceMountpoints"
      parameters:
      - name: "device_id"
        in: "query"
        description: "id of the device"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              mountpoint_details:
                type: "array"
                items:
                  type: "object"
                  properties:
                    capacity:
                      example: "238504"
                    device:
                      example: "greg-ws"
                    filesystem:
                      example: ""
                    free_capacity:
                      example: "77187.07"
                    fstype:
                      example: "NTFS"
                    id:
                      example: "25"
                    label:
                      example: "C:"
                    last_updated:
                      example: "2016-09-16T15:17:19.110Z"
                    mountpoint:
                      example: "C:"
              total_count:
                example: "2"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Devices"
      summary: "Create/Update device mountpoints - introduced in version 10.5.0"
      description: "Create/Update Device Mountpoints"
      operationId: "postDeviceMountpoints"
      parameters:
      - name: "mountpoint"
        in: "formData"
        description: "path of the mountpoint"
        required: true
        type: "string"
        x-exportParamName: "Mountpoint"
      - name: "device"
        in: "formData"
        description: "device mountpoint is assigned to"
        required: true
        type: "string"
        x-exportParamName: "Device"
      - name: "filesytem"
        in: "formData"
        description: "mountpoint filesystem"
        required: false
        type: "string"
        x-exportParamName: "Filesytem"
        x-optionalDataType: "String"
      - name: "fstype"
        in: "formData"
        description: "mountpoint filesystem type"
        required: false
        type: "string"
        x-exportParamName: "Fstype"
        x-optionalDataType: "String"
      - name: "capacity"
        in: "formData"
        description: "capacity of mountpoint in MB"
        required: false
        type: "string"
        x-exportParamName: "Capacity"
        x-optionalDataType: "String"
      - name: "free_capacity"
        in: "formData"
        description: "free capacity of mountpoint in MB"
        required: false
        type: "string"
        x-exportParamName: "FreeCapacity"
        x-optionalDataType: "String"
      - name: "label"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/mountpoints/{id}/:
    delete:
      tags:
      - "Devices"
      summary: "Delete device mountpoints"
      description: "Delete Device Mountpoints"
      operationId: "deleteDeviceMountpoints"
      parameters:
      - name: "id"
        in: "path"
        description: "id of the mountpoint to delete"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "123"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/url/:
    get:
      tags:
      - "Devices"
      summary: "Get device URLs - introduced in version 7.0.0"
      description: "Get Device URLs"
      operationId: "getDeviceUrl"
      parameters:
      - name: "device"
        in: "query"
        description: "name of the device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              device_weblinks:
                type: "array"
                items:
                  type: "object"
                  properties:
                    device:
                      example: "NHCTWS001"
                    host:
                      example: " /v:{{device.name}}"
                    id:
                      example: "2"
                    notes:
                      example: "TESTSERVER NHCT"
                    port:
                      example: ""
                    type:
                      example: "rdp"
                    url_suffix:
                      example: " /f /restrictedadmin"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Devices"
      summary: "Use this API to associate a url (e.g. an http, https, or telnet url)\
        \ with a device."
      description: "Add Url to Device"
      operationId: "postDeviceUrl"
      parameters:
      - name: "type"
        in: "formData"
        description: "the url type (e.g. http, https, telnet). This must be an existing\
          \ url type in device42."
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "device"
        in: "formData"
        description: "name of the device to which this url belongs (required parameter)"
        required: true
        type: "string"
        x-exportParamName: "Device"
      - name: "host"
        in: "formData"
        description: "fqdn portion of the url. e.g. for http://www.device42.com/awesome,\
          \ host is www.device42.com"
        required: false
        type: "string"
        x-exportParamName: "Host"
        x-optionalDataType: "String"
      - name: "port"
        in: "formData"
        description: "port number if any"
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      - name: "url_suffix"
        in: "formData"
        description: "url suffix if any. e.g. it is “awesome” based on example given\
          \ above."
        required: false
        type: "string"
        x-exportParamName: "UrlSuffix"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Devices"
      summary: "Update Device URL"
      description: "Use this API to update and existing url (e.g. an http, https,\
        \ or telnet url) with a device. Type and device are required if no ID is provided."
      operationId: "putDeviceUrl"
      parameters:
      - name: "id"
        in: "formData"
        description: "ID of the URL"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "the url type (e.g. http, https, telnet). This must be an existing\
          \ url type in device42. (required if no ID)"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "name of the device to which this url belongs (required if no\
          \ ID)"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "host"
        in: "formData"
        description: "fqdn portion of the url. e.g. for https://example.com/awesome,\
          \ host is example.com"
        required: false
        type: "string"
        x-exportParamName: "Host"
        x-optionalDataType: "String"
      - name: "port"
        in: "formData"
        description: "port number if any"
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      - name: "url_suffix"
        in: "formData"
        description: "url suffix if any. e.g. it is “awesome” based on example given\
          \ above."
        required: false
        type: "string"
        x-exportParamName: "UrlSuffix"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/url/{id}/:
    delete:
      tags:
      - "Devices"
      summary: "Delete a device url"
      description: "This API call will delete a device url (Introduced in v7.0.0)"
      operationId: "deleteDeviceUrl"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "142"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/rack/:
    post:
      tags:
      - "Devices"
      summary: "Add/Update a device in a rack."
      description: "This API will add a new or existing device to a rack or will update\
        \ an existing device that is already in the rack. (Introduced in v321)<br>\
        \ Required parameters: <ul><li>device <b>OR</b> device_id <b>OR</b> serial_no\
        \ <b>OR</b> asset_no</li> <li>rack_id <b>OR</b> rack (with building, room,\
        \ or row to identify unique rack) <li>start_at</li>"
      operationId: "postDeviceRack"
      parameters:
      - name: "device"
        in: "formData"
        description: "name of the new or existing device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "Device ID of existing device"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "serial_no"
        in: "formData"
        description: "serial # of the existing device"
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "formData"
        description: "asset # of the existing device"
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "hw_model"
        in: "formData"
        description: "If the hw_model doesn’t exist or doesn’t have a type, we will\
          \ add it as type “regular (rack mountable)” (changed in v6.6.0)"
        required: false
        type: "string"
        x-exportParamName: "HwModel"
        x-optionalDataType: "String"
      - name: "size"
        in: "formData"
        description: "size of the hardware model, only for new hardware model or if\
          \ hardware model doesn’t have size. required for new hardware model (added\
          \ in v6.6.0)"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "manufacturer of the hardware model. Only for new hardware model\
          \ being added(added in v6.6.0)"
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "rack_id"
        in: "formData"
        description: "required if building name, room name or rack name are not provided.\
          \ This is the id of the rack. It can be obtained from Tools > Import > Import\
          \ Racked Devices."
        required: false
        type: "string"
        x-exportParamName: "RackId"
        x-optionalDataType: "String"
      - name: "building"
        in: "formData"
        description: "building is building name, room is room name, rack is rack name\
          \ and row is optional. This is used if rack_id is not provided and a unique\
          \ rack is found with that combination. This could be just rack for rack\
          \ name, if the rack name is unique. Otherwise add row, room or building\
          \ to identify a unique rack."
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "room"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "rack"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Rack"
        x-optionalDataType: "String"
      - name: "row"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Row"
        x-optionalDataType: "String"
      - name: "start_at"
        in: "formData"
        description: "This is the starting U location for the device in the rack.\
          \ Starting with v535, you can use “auto” as value to automatically mount\
          \ the device in next available slot."
        required: true
        type: "string"
        x-exportParamName: "StartAt"
      - name: "where"
        in: "formData"
        description: "location in rack, one of ‘above’, ‘below’, ‘left’, ‘right’,\
          \ ‘mounted’. Note: If mounted a size must be provided or available from\
          \ the hardware model."
        required: false
        type: "string"
        x-exportParamName: "Where"
        x-optionalDataType: "String"
      - name: "x_pos"
        in: "formData"
        description: "A number between 0 and 2520 representing the position within\
          \ the u slot. 0 is flush left. 2520 is flush right."
        required: false
        type: "string"
        x-exportParamName: "XPos"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device/rack/{device_id}/:
    delete:
      tags:
      - "Devices"
      summary: "Remove/Delete a device from a rack"
      description: "This API call will remove/delete a device from a rack (Introduced\
        \ in v6.3.2)"
      operationId: "deleteDeviceRackDevice_Id"
      parameters:
      - name: "device_id"
        in: "path"
        description: "ID of the device to be removed from the rack"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "142"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/device_ignore_rules/:
    get:
      tags:
      - "Device Ignore Rules"
      summary: "This call will get all device ignore rules."
      description: "Get all device ignore rules."
      operationId: "getdevice_ignore_rules"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "1"
              limit:
                example: "1000"
              DeviceIgnoreRules:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      example: "1"
                    text:
                      example: "macad-test"
                    option_type:
                      example: "3"
                    last_discovery:
                      example: "2020-05-21 14:42"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Device Ignore Rules"
      summary: "This call creates or updates a device ignore rule."
      description: "Create/update device ignore rule."
      parameters:
      - name: "id"
        in: "formData"
        description: "Required to update an existing ignore rule - the D42 ID of the\
          \ rule."
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "text"
        in: "formData"
        description: "Text for the ignore rule - in UI, 'Ignored text contains'."
        required: true
        type: "string"
        x-exportParamName: "Text"
      - name: "option_type"
        in: "formData"
        description: "Type of ignore rule for the device - in UI, 'Ignore device based\
          \ on'.<br> 1 = Device name<br> 2 = OS name<br> 3 = Mac address prefix<br>\
          \ 4 = Hardware model"
        required: true
        type: "string"
        enum:
        - "1"
        - "2"
        - "3"
        - "4"
        x-exportParamName: "OptionType"
      - name: "last_discovery"
        in: "formData"
        description: "The last time this rule was applied to ignore a device during\
          \ discovery (YYYY-MM-DD HH:MM)."
        required: false
        type: "string"
        x-exportParamName: "LastDiscovery"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/device_ignore_rules/{id}/:
    delete:
      tags:
      - "Device Ignore Rules"
      summary: "This call deletes a device ignore rule."
      description: "Used to delete a device ignore rule with the D42 rule ID as the\
        \ required argument."
      operationId: "deletedevice_ignore_rules"
      parameters:
      - name: "id"
        in: "path"
        description: "D42 ID of the ignore rule to delete."
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "11"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device_name_profile/:
    get:
      tags:
      - "Device Name Profile"
      summary: "This call will get all device name profiles."
      description: "Get all device name profiles."
      operationId: "getdevice_name_profile"
      parameters:
      - name: "name"
        in: "formData"
        description: "Used to easily identify different profiles for generating device\
          \ names."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "1"
              limit:
                example: "1000"
              device_name_profiles:
                type: "array"
                items:
                  type: "object"
                  properties:
                    start_number:
                      example: "1"
                    last_used:
                      example: "0"
                    suffix:
                      example: "SuffixOne"
                    number_length:
                      example: "4"
                    prefix:
                      example: "PrefixOne"
                    id:
                      example: "9"
                    name:
                      example: "DevNameProfile-One"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Device Name Profile"
      summary: "This call creates or updates a device name profile."
      description: "Create/update device name profile"
      parameters:
      - name: "name"
        in: "formData"
        description: "Used to easily identify different profiles for generating device\
          \ names."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "number_length"
        in: "formData"
        description: "Number length between 2 and 7. For numbers up to 9999, it would\
          \ be 4. Default is 4."
        required: true
        type: "integer"
        x-exportParamName: "NumberLength"
      - name: "start_number"
        in: "formData"
        description: "Starting number, where you want device numbers to start from.\
          \ Default is 1."
        required: true
        type: "integer"
        x-exportParamName: "StartNumber"
      - name: "last_used"
        in: "formData"
        description: "DO NOT CHANGE, unless you know what it is used for :). Default\
          \ is 0."
        required: true
        type: "integer"
        x-exportParamName: "LastUsed"
      - name: "prefix"
        in: "formData"
        description: "Prefix for the generated name number; e.g., SecretDC-Server\
          \ in SecretDC-Server0042."
        required: false
        type: "string"
        x-exportParamName: "Prefix"
        x-optionalDataType: "String"
      - name: "suffix"
        in: "formData"
        description: "Suffix for the generated name number; e.g., .domain.pvt in SecretDC-Server0042.domain.pvt."
        required: false
        type: "string"
        x-exportParamName: "Suffix"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device_name_profile/{id}/:
    delete:
      tags:
      - "Device Name Profile"
      summary: "This call deletes a device name profile."
      description: "This API is used to delete a device name profile with the device\
        \ name profile id supplied as the required argument."
      operationId: "deletedevice_profile_names"
      parameters:
      - name: "id"
        in: "path"
        description: "device name profile id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "11"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/object_categories/:
    get:
      tags:
      - "Object Categories"
      summary: "This call will get information about object categories."
      description: "Get all Object Categories"
      operationId: "getObject_categories"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              limit:
                example: "1000"
              object_categories:
                type: "array"
                items:
                  $ref: "#/definitions/object_categories"
              offset:
                example: "0"
              total_count:
                example: "3"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Object Categories"
      summary: "This call will create/update information about object categories."
      description: "Create/update Object Categories"
      operationId: "postObject_categories"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of object category to create/update"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "description"
        in: "formData"
        description: "Description of object category"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/hardwares/:
    get:
      tags:
      - "Hardware Models"
      summary: "This call will get information about hardware models."
      description: "Get all hardware models"
      operationId: "getHardwares"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "could be physical, blade, or other"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "device_sub_type"
        in: "query"
        description: "filter by device sub type (Added in v14.7.2)"
        required: false
        type: "string"
        x-exportParamName: "DeviceSubType"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        description: "filter by exact size"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "depth"
        in: "query"
        description: "could be half or full"
        required: false
        type: "string"
        x-exportParamName: "Depth"
        x-optionalDataType: "String"
      - name: "part_no"
        in: "query"
        description: "filter by part #"
        required: false
        type: "string"
        x-exportParamName: "PartNo"
        x-optionalDataType: "String"
      - name: "watts"
        in: "query"
        description: "filter by exact watts"
        required: false
        type: "string"
        x-exportParamName: "Watts"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "query"
        description: "name of the hardware manufacturer."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              models:
                type: "array"
                items:
                  $ref: "#/definitions/HardwareModels"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Hardware Models"
      summary: "This call will create/update information about hardware models."
      description: "Create/update"
      operationId: "postHardwares"
      parameters:
      - name: "name"
        in: "formData"
        description: "if similar hardware name already exists, first matching entry\
          \ is updated"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "new_name"
        in: "formData"
        description: "Use to change name of object."
        required: false
        type: "string"
        x-exportParamName: "NewName"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "1 = Regular, 2 = Blade, 3 = Other"
        required: false
        type: "integer"
        enum:
        - 1
        - 2
        - 3
        x-exportParamName: "Type_"
        x-optionalDataType: "Int32"
      - name: "device_subtype"
        in: "formData"
        description: "Subtype of \"other\" type devices"
        required: false
        type: "string"
        x-exportParamName: "DeviceSubtype"
        x-optionalDataType: "String"
      - name: "size"
        in: "formData"
        description: "Size in U for hardware type regular"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "width_ratio"
        in: "formData"
        description: "Default=1. Can be ½, 1/3,… 1/10, etc."
        required: false
        type: "string"
        x-exportParamName: "WidthRatio"
        x-optionalDataType: "String"
      - name: "depth"
        in: "formData"
        description: "half by default, full to override"
        required: false
        type: "string"
        enum:
        - "half"
        - "full"
        x-exportParamName: "Depth"
        x-optionalDataType: "String"
      - name: "blade_size"
        in: "formData"
        description: "1=Full Height 2=Half Height 3=Double Half Height 4=Double Full\
          \ Height 5=Quarter Height"
        required: false
        type: "integer"
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        x-exportParamName: "BladeSize"
        x-optionalDataType: "Int32"
      - name: "part_no"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PartNo"
        x-optionalDataType: "String"
      - name: "watts"
        in: "formData"
        description: "per power supply"
        required: false
        type: "string"
        x-exportParamName: "Watts"
        x-optionalDataType: "String"
      - name: "spec_url"
        in: "formData"
        description: "Specification url for the hardware model."
        required: false
        type: "string"
        x-exportParamName: "SpecUrl"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "name of the hardware/software manufacturer."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "front_image_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "FrontImageId"
        x-optionalDataType: "String"
      - name: "front_image"
        in: "formData"
        description: "name of the image file (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "FrontImage"
        x-optionalDataType: "String"
      - name: "back_image_id"
        in: "formData"
        description: "back image file id. You can see these from Tools > Import >\
          \ Hardware Import for now."
        required: false
        type: "string"
        x-exportParamName: "BackImageId"
        x-optionalDataType: "String"
      - name: "back_image"
        in: "formData"
        description: "name of the back image file. Use instead of back_image_id."
        required: false
        type: "string"
        x-exportParamName: "BackImage"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "max_blades_per_row"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "MaxBladesPerRow"
        x-optionalDataType: "String"
      - name: "slot_numbering"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "top_to_bottom"
        - "bottom_to_top"
        - "left_to_right"
        - "right_to_left"
        x-exportParamName: "SlotNumbering"
        x-optionalDataType: "String"
      - name: "module_pos"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "horizontal"
        - "vertical"
        x-exportParamName: "ModulePos"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/hardwares/{id}/:
    delete:
      tags:
      - "Hardware Models"
      summary: "Delete Hardware Model"
      description: "This API is used to delete the hardware model with the hardware\
        \ model id supplied as the required argument."
      operationId: "deleteHardwares"
      parameters:
      - name: "id"
        in: "path"
        description: "hardware model id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/operatingsystems/:
    get:
      tags:
      - "Operating Systems"
      summary: "This call will get information about operating systems."
      description: "Get all operating systems"
      operationId: "getOperatingSystems"
      parameters:
      - name: "licensed_count"
        in: "query"
        description: "Number of licensed instances of operating system"
        required: false
        type: "string"
        x-exportParamName: "LicensedCount"
        x-optionalDataType: "String"
      - name: "not_licensed_count"
        in: "query"
        description: "Number of discovered instances of operating system not set to\
          \ licensed"
        required: false
        type: "string"
        x-exportParamName: "NotLicensedCount"
        x-optionalDataType: "String"
      - name: "total_count"
        in: "query"
        description: "Count of IPs returned (use with offset as max results are limited\
          \ to 1000)"
        required: false
        type: "string"
        x-exportParamName: "TotalCount"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "Filter by OS category (ie: Linux, Windows)"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              operatingsystems:
                type: "array"
                items:
                  $ref: "#/definitions/OperatingSystems"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Operating Systems"
      summary: "This call will create/update information about operating systems."
      description: "Create/update OS"
      operationId: "postOperatingSystems"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the OS"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "name of the hardware/software manufacturer."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no, Corp:yes specifies that\
          \ the admin groups for this object are Prod_East with view only permission\
          \ and Corp with change permission. Use for initial insert."
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "licensed_count"
        in: "query"
        description: "Number of licensed instances of operating system"
        required: false
        type: "string"
        x-exportParamName: "LicensedCount"
        x-optionalDataType: "String"
      - name: "licensing_model"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LicensingModel"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/operatingsystems/{id}/:
    delete:
      tags:
      - "Operating Systems"
      summary: "Delete Operating System"
      description: "This API is used to delete the operating system with the operating\
        \ system id supplied as the required argument."
      operationId: "deleteOperatingSystems"
      parameters:
      - name: "id"
        in: "path"
        description: "opearting system id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device_os/:
    get:
      tags:
      - "Operating Systems"
      summary: "Get operating systems by devices"
      description: "This call will get information about operating systems and the\
        \ devices they’re discovered on."
      operationId: "getDevice_os"
      parameters:
      - name: "os"
        in: "query"
        description: "filter by OS name (added in v8.3.0)"
        required: false
        type: "string"
        x-exportParamName: "Os"
        x-optionalDataType: "String"
      - name: "os_id"
        in: "query"
        description: "Operating system ID"
        required: false
        type: "string"
        x-exportParamName: "OsId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              device_os:
                type: "array"
                items:
                  $ref: "#/definitions/Device_os"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Operating Systems"
      summary: "This call will create or update operating systems and assign them\
        \ to a device."
      description: "Create/Update operating systems on devices"
      operationId: "postDevice_os"
      parameters:
      - name: "device_os_id"
        in: "formData"
        description: "ID of specific operating system.<br><br>Use this parameter to\
          \ change an existing device OS - or -  use the device_id parameter AND the\
          \ os parameter.<br><br>Do not use this parameter to create a new device\
          \ OS."
        required: false
        type: "string"
        x-exportParamName: "DeviceOsId"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "ID of the device the OS is assigned to.<br><br>Use this parameter\
          \ AND the os parameter to create a new device OS."
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "os"
        in: "formData"
        description: "Operating system name.<br><br>Use this parameter to create or\
          \ change a device OS. See the device parameters above."
        required: false
        type: "string"
        x-exportParamName: "Os"
        x-optionalDataType: "String"
      - name: "osver"
        in: "formData"
        description: "Operating system version name"
        required: false
        type: "string"
        x-exportParamName: "Osver"
        x-optionalDataType: "String"
      - name: "osverno"
        in: "formData"
        description: "Operating system version number"
        required: false
        type: "string"
        x-exportParamName: "Osverno"
        x-optionalDataType: "String"
      - name: "license_key"
        in: "formData"
        description: "OS license key"
        required: false
        type: "string"
        x-exportParamName: "LicenseKey"
        x-optionalDataType: "String"
      - name: "count_in_licensing"
        in: "formData"
        description: "Whether or not to count OS in licensing"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "CountInLicensing"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/device_os/{device_os_id}/:
    delete:
      tags:
      - "Operating Systems"
      summary: "Delete Operating system by OS ID"
      description: "This API is used to delete the operating system with the operating\
        \ system id supplied as the required argument."
      operationId: "deleteDevice_os"
      parameters:
      - name: "device_os_id"
        in: "path"
        description: "ID of specific operating system"
        required: true
        type: "integer"
        x-exportParamName: "DeviceOsId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "9"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/pdu_models/:
    get:
      tags:
      - "PDU"
      summary: "GET method retrieves all PDU Models."
      description: "Get all PDU Models"
      operationId: "getPdu_models"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by model name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "pdu_model_id"
        in: "query"
        description: "filter by pdu model id"
        required: false
        type: "integer"
        x-exportParamName: "PduModelId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              pdu_models:
                type: "array"
                items:
                  $ref: "#/definitions/Pdu_models"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "PDU"
      summary: "Create / Update PDU Models."
      description: "Create / Update PDU Models"
      operationId: "postPdu_models"
      parameters:
      - name: "pdu_model_id"
        in: "formData"
        description: "ID of the PDU model you want to update"
        required: false
        type: "string"
        x-exportParamName: "PduModelId"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "Name of the PDU model you want to create or update"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "name of the hardware/software manufacturer."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "size"
        in: "formData"
        description: "Size of the PDU in U"
        required: false
        type: "string"
        x-exportParamName: "Size"
        x-optionalDataType: "String"
      - name: "sequential_numbering_for_ports"
        in: "formData"
        description: "Could be “yes” or “no”. Yes if ports are numbered starting from\
          \ 1."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "SequentialNumberingForPorts"
        x-optionalDataType: "String"
      - name: "depth"
        in: "formData"
        description: "Half depth by default. full to override. Optional."
        required: false
        type: "string"
        enum:
        - "half"
        - "full"
        x-exportParamName: "Depth"
        x-optionalDataType: "String"
      - name: "imgfile_id"
        in: "formData"
        description: "image file id. You can see these from Tools > Import > Hardware\
          \ Import for now."
        required: false
        type: "string"
        x-exportParamName: "ImgfileId"
        x-optionalDataType: "String"
      - name: "imgfile"
        in: "formData"
        description: "name of the image file (Added in v5.8.2). Use instead of imgfile_id"
        required: false
        type: "string"
        x-exportParamName: "Imgfile"
        x-optionalDataType: "String"
      - name: "back_image_id"
        in: "formData"
        description: "back image file id. You can see these from Tools > Import >\
          \ Hardware Import for now."
        required: false
        type: "string"
        x-exportParamName: "BackImageId"
        x-optionalDataType: "String"
      - name: "back_image"
        in: "formData"
        description: "name of the back image file. Use instead of back_image_id."
        required: false
        type: "string"
        x-exportParamName: "BackImage"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/pdu_models/ports/:
    post:
      tags:
      - "PDU"
      summary: "Create PDU Model Ports."
      description: "Create PDU Model Ports. Required parameters: <ul><li>pdu_model_id\
        \ <b>OR</b> pdu_model_name</li> <li>count</li> <li>type</li></ul>"
      operationId: "postPdu_modelsPorts"
      parameters:
      - name: "pdu_model_id"
        in: "formData"
        description: "ID of the PDU model you want to update"
        required: false
        type: "string"
        x-exportParamName: "PduModelId"
        x-optionalDataType: "String"
      - name: "pdu_model_name"
        in: "formData"
        description: "Name of the PDU model you want to add ports to."
        required: false
        type: "string"
        x-exportParamName: "PduModelName"
        x-optionalDataType: "String"
      - name: "count"
        in: "formData"
        description: "number of ports"
        required: true
        type: "integer"
        x-exportParamName: "Count"
      - name: "type"
        in: "formData"
        description: "Type of the port. If not already existing, a new port type is\
          \ created."
        required: true
        type: "string"
        x-exportParamName: "Type_"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/pdus/:
    get:
      tags:
      - "PDU"
      summary: "GET method retrieves all PDUs."
      description: "Get all PDUs"
      operationId: "getPdus"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "filter by type"
        required: false
        type: "string"
        enum:
        - "pdu"
        - "ups"
        - "ats"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "pdu_model_id"
        in: "query"
        description: "filter by PDU model ID"
        required: false
        type: "integer"
        x-exportParamName: "PduModelId"
        x-optionalDataType: "Int32"
      - name: "pdu_model"
        in: "query"
        description: "filter by PDU model name"
        required: false
        type: "string"
        x-exportParamName: "PduModel"
        x-optionalDataType: "String"
      - name: "building_id"
        in: "query"
        description: "filter by building id"
        required: false
        type: "integer"
        x-exportParamName: "BuildingId"
        x-optionalDataType: "Int32"
      - name: "room_id"
        in: "query"
        description: "filter by room id"
        required: false
        type: "integer"
        x-exportParamName: "RoomId"
        x-optionalDataType: "Int32"
      - name: "rack_id"
        in: "query"
        description: "filter by rack id"
        required: false
        type: "integer"
        x-exportParamName: "RackId"
        x-optionalDataType: "Int32"
      - name: "serial_no"
        in: "query"
        description: "filter by PDU serial_no"
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "query"
        description: "filter by device id"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              pdus:
                type: "array"
                items:
                  $ref: "#/definitions/Pdus"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "PDU"
      summary: "This call will create PDUs."
      description: "Create PDUs"
      operationId: "postPdus"
      parameters:
      - name: "name"
        in: "formData"
        description: "PDU name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "pdu_model_id"
        in: "formData"
        description: "ID of the PDU model you want to update"
        required: false
        type: "string"
        x-exportParamName: "PduModelId"
        x-optionalDataType: "String"
      - name: "pdu_model"
        in: "formData"
        description: "Name of the PDU model. You can use this instead of the ID above.\
          \ (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "PduModel"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "If you want to associate asset information with this PDU, use\
          \ device type 'other'"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no, Corp:yes specifies that\
          \ the admin groups for this object are Prod_East with view only permission\
          \ and Corp with change permission. Use for initial insert."
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "PDU"
      summary: "Update PDUs"
      description: "This call will update existing PDUs. PDU ID or name required."
      operationId: "putPdus"
      parameters:
      - name: "pdu_id"
        in: "formData"
        description: "ID of the PDU to be edited"
        required: false
        type: "string"
        x-exportParamName: "PduId"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "Use instead of PDU ID. Must be unique"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "new_name"
        in: "formData"
        description: "Use to change name of object."
        required: false
        type: "string"
        x-exportParamName: "NewName"
        x-optionalDataType: "String"
      - name: "pdu_model_id"
        in: "formData"
        description: "ID of the PDU model you want to update"
        required: false
        type: "string"
        x-exportParamName: "PduModelId"
        x-optionalDataType: "String"
      - name: "pdu_model"
        in: "formData"
        description: "Name of the PDU model. You can use this instead of the ID above.\
          \ (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "PduModel"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "Type of power unit (pdu, ups, ats)"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "If you want to associate asset information with this PDU, use\
          \ device type 'other'"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "port_number"
        in: "formData"
        description: "port number"
        required: false
        type: "string"
        x-exportParamName: "PortNumber"
        x-optionalDataType: "String"
      - name: "outlet_name"
        in: "formData"
        description: "outlet name"
        required: false
        type: "string"
        x-exportParamName: "OutletName"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "rated_power"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "RatedPower"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "storage_room_id"
        in: "formData"
        description: "ID of storage room to assign power unit to"
        required: false
        type: "string"
        x-exportParamName: "StorageRoomId"
        x-optionalDataType: "String"
      - name: "storage_room"
        in: "formData"
        description: "Name of storage room to apply power unit to"
        required: false
        type: "string"
        x-exportParamName: "StorageRoom"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ category, will have access to the power unit. If this parameter is present\
          \ with no value, all categories are deleted."
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/pdus/{ID}/:
    get:
      tags:
      - "PDU"
      summary: "Get PDU by ID"
      description: "Retrieve detailed information about a specific PDU by PDU ID.\
        \ This also includes end point connections."
      operationId: "getPdusID"
      parameters:
      - name: "ID"
        in: "path"
        description: "The ID of the PDU to retrieve"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Pdu_by_Id"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "PDU"
      summary: "Delete PDU"
      description: "This API is used to delete the pdu with the pdu id supplied as\
        \ the required argument."
      operationId: "deletePdus"
      parameters:
      - name: "ID"
        in: "path"
        description: "PDU id"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/pdus/rack/:
    post:
      tags:
      - "PDU"
      summary: "This call will add / update PDUs in or around a Rack."
      description: "Add / Update PDUs in Racks"
      operationId: "postPdusRack"
      parameters:
      - name: "pdu_id"
        in: "formData"
        description: "ID of the PDU to be edited"
        required: false
        type: "string"
        x-exportParamName: "PduId"
        x-optionalDataType: "String"
      - name: "pdu"
        in: "formData"
        description: "name of the PDU. only works if the name is unique in the system"
        required: false
        type: "string"
        x-exportParamName: "Pdu"
        x-optionalDataType: "String"
      - name: "rack_id"
        in: "formData"
        description: "This is the ID of the rack. It can be obtained from Tools >\
          \ Import > Import Racked Devices or /api/api/1.0/racks/"
        required: false
        type: "string"
        x-exportParamName: "RackId"
        x-optionalDataType: "String"
      - name: "building"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "where"
        in: "formData"
        description: "Location in a rack. Note: If mounted a size must be provided\
          \ or available from the hardware model."
        required: false
        type: "string"
        enum:
        - "above"
        - "below"
        - "left"
        - "right"
        - "mounted"
        x-exportParamName: "Where"
        x-optionalDataType: "String"
      - name: "start_at"
        in: "formData"
        description: "Required if adding to rack. U Start location."
        required: false
        type: "string"
        x-exportParamName: "StartAt"
        x-optionalDataType: "String"
      - name: "orientation"
        in: "formData"
        description: "orientation of the PDU in rack. back for rear facing, otherwise\
          \ front is default."
        required: false
        type: "string"
        x-exportParamName: "Orientation"
        x-optionalDataType: "String"
      - name: "x_pos"
        in: "formData"
        description: "A number between 0 and 2520 representing the position within\
          \ the u slot in increments of 252, which is equal to 1/10th of the width\
          \ of the rack. 0 will place a device flush left, 1260 will place the left\
          \ side of a device in center."
        required: false
        type: "integer"
        maximum: 2520
        minimum: 0
        x-exportParamName: "XPos"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/pdus/rack/{id}/:
    delete:
      tags:
      - "PDU"
      summary: "Delete PDU from a rack"
      description: "This API is used to delete from its rack the device with the device\
        \ id supplied as the required argument. (The device itself is not deleted)."
      operationId: "deletePdusRack"
      parameters:
      - name: "id"
        in: "path"
        description: "device id"
        required: true
        type: "string"
        format: "query"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/pdus/ports/:
    post:
      tags:
      - "PDU"
      summary: "Update PDU Ports w/ no names"
      description: "Assign a name and/or an object (see below) objects to a pdu port.\
        \ It will pick the lowest port id # available (or first available port in\
        \ order created)."
      operationId: "postPdusPorts"
      parameters:
      - name: "parent_pdu_id"
        in: "formData"
        description: "Available from /api/api/1.0/pdus/ or Tools"
        required: false
        type: "string"
        x-exportParamName: "ParentPduId"
        x-optionalDataType: "String"
      - name: "parent_pdu"
        in: "formData"
        description: "name of the parent PDU. Must be unique name. Added in v5.8.2"
        required: false
        type: "string"
        x-exportParamName: "ParentPdu"
        x-optionalDataType: "String"
      - name: "port_type"
        in: "formData"
        description: "Verbose name of the port type. Must exist already."
        required: true
        type: "string"
        x-exportParamName: "PortType"
      - name: "device"
        in: "formData"
        description: "Name of the device the port points to."
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "ID of the device the port points to"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "pdu_id"
        in: "formData"
        description: "ID of the PDU the port points to"
        required: false
        type: "string"
        x-exportParamName: "PduId"
        x-optionalDataType: "String"
      - name: "asset_id"
        in: "formData"
        description: "ID of the asset the port points to"
        required: false
        type: "string"
        x-exportParamName: "AssetId"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "PDU port name, typically the PDU port number when autodiscovered."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "outlet_name"
        in: "formData"
        description: "outlet name"
        required: false
        type: "string"
        x-exportParamName: "OutletName"
        x-optionalDataType: "String"
      - name: "watts"
        in: "formData"
        description: "per power supply"
        required: false
        type: "string"
        x-exportParamName: "Watts"
        x-optionalDataType: "String"
      - name: "psu_label"
        in: "formData"
        description: "typically used when device has multiple power supplies, e.g.:\
          \ power supply 1, power supply 2, etc."
        required: false
        type: "string"
        x-exportParamName: "PsuLabel"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "PDU"
      summary: "Update PDU Ports w/ names"
      description: "This call requires the name of an existing pdu port and enables\
        \ you to add new or edit existing values for that particular PDU port. Requires\
        \ parent_pdu_id or parent_pdu"
      operationId: "putPdusPorts"
      parameters:
      - name: "parent_pdu_id"
        in: "formData"
        description: "Available from /api/api/1.0/pdus/ or Tools"
        required: false
        type: "string"
        x-exportParamName: "ParentPduId"
        x-optionalDataType: "String"
      - name: "parent_pdu"
        in: "formData"
        description: "name of the parent PDU. Must be unique name. Added in v5.8.2"
        required: false
        type: "string"
        x-exportParamName: "ParentPdu"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "name of the existing PDU port"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "outlet_name"
        in: "formData"
        description: "outlet name"
        required: false
        type: "string"
        x-exportParamName: "OutletName"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "Name of the device the port points to."
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "ID of the device the port points to"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "pdu_id"
        in: "formData"
        description: "ID of the PDU the port points to"
        required: false
        type: "string"
        x-exportParamName: "PduId"
        x-optionalDataType: "String"
      - name: "asset_id"
        in: "formData"
        description: "ID of the asset the port points to"
        required: false
        type: "string"
        x-exportParamName: "AssetId"
        x-optionalDataType: "String"
      - name: "watts"
        in: "formData"
        description: "per power supply"
        required: false
        type: "string"
        x-exportParamName: "Watts"
        x-optionalDataType: "String"
      - name: "psu_label"
        in: "formData"
        description: "typically used when device has multiple power supplies, e.g.:\
          \ power supply 1, power supply 2, etc."
        required: false
        type: "string"
        x-exportParamName: "PsuLabel"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/patch_panel/{ID}/:
    get:
      tags:
      - "Patch Panels"
      summary: "Get Patch Panel details by ID"
      description: "Retrieve detailed information about a specific Patch Panel by\
        \ Patch Panel ID. This also includes end point connections."
      operationId: "getPatch_panelID"
      parameters:
      - name: "ID"
        in: "path"
        description: "The ID of the Patch Panel to retrieve"
        required: true
        type: "integer"
        x-exportParamName: "ID"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Patch_panel"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/patch_panel_ports/{patch_panel_id}/:
    get:
      tags:
      - "Patch Panels"
      summary: "Retrieves patch panel ports for specified patch panel."
      description: "Get all Patch Panel Ports"
      operationId: "getPatch_panel_portsPatch_panel_id"
      parameters:
      - name: "patch_panel_id"
        in: "path"
        description: "Patch panel id"
        required: true
        type: "integer"
        x-exportParamName: "PatchPanelId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/patch_panel_ports/:
    post:
      tags:
      - "Patch Panels"
      summary: "Update Patch Panel Ports"
      description: "Update Patch Panel Ports. Requires the following parameters: <ul><li>patch_panel_id\
        \ <b>OR</b> patch_panel</li> <li>number</li>"
      operationId: "postPatch_panel_portsPatch_panel_id"
      parameters:
      - name: "patch_panel_id"
        in: "formData"
        description: "Patch panel id"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelId"
        x-optionalDataType: "String"
      - name: "patch_panel"
        in: "formData"
        description: "Must be a unique asset name for this to work (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "PatchPanel"
        x-optionalDataType: "String"
      - name: "number"
        in: "formData"
        description: "Port number for the patch panel"
        required: true
        type: "string"
        x-exportParamName: "Number"
      - name: "module_slot"
        in: "formData"
        description: "change patch panel port for a certain module slot # (Added in\
          \ v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "ModuleSlot"
        x-optionalDataType: "String"
      - name: "mac_id"
        in: "formData"
        description: "mac_id references port_id value. mac_id available via GET at\
          \ /api/api/1.0/macs/ or Tools > Export > MAC Address * Please see note below"
        required: false
        type: "string"
        x-exportParamName: "MacId"
        x-optionalDataType: "String"
      - name: "mac_address"
        in: "formData"
        description: "mac_address or hwaddress"
        required: false
        type: "string"
        x-exportParamName: "MacAddress"
        x-optionalDataType: "String"
      - name: "switchport_id"
        in: "formData"
        description: "ID for the switch port. Available via GET at /api/api/1.0/switchports/\
          \ or Tools > Export > Switch Port"
        required: false
        type: "string"
        x-exportParamName: "SwitchportId"
        x-optionalDataType: "String"
      - name: "switch"
        in: "formData"
        description: "Must be used with switchport if switchport_id is not used."
        required: false
        type: "string"
        x-exportParamName: "Switch_"
        x-optionalDataType: "String"
      - name: "switchport"
        in: "formData"
        description: "Must be used with switch if switchport_id is not used."
        required: false
        type: "string"
        x-exportParamName: "Switchport"
        x-optionalDataType: "String"
      - name: "patch_panel_port_id"
        in: "formData"
        description: "Or use front_patch_panel and front_port combination"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelPortId"
        x-optionalDataType: "String"
      - name: "front_patch_panel_id"
        in: "formData"
        description: "Name of the front patch panel - if a patch panel port is connected\
          \ in front (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "FrontPatchPanelId"
        x-optionalDataType: "String"
      - name: "front_patch_panel"
        in: "formData"
        description: "Name of the front patch panel - if a patch panel port is connected\
          \ in front (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "FrontPatchPanel"
        x-optionalDataType: "String"
      - name: "front_port"
        in: "formData"
        description: "Number of the port on the front patch panel - if a patch panel\
          \ port is connected in front (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "FrontPort"
        x-optionalDataType: "String"
      - name: "label"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "obj_label1"
        in: "formData"
        description: "object label 1"
        required: false
        type: "string"
        x-exportParamName: "ObjLabel1"
        x-optionalDataType: "String"
      - name: "obj_label2"
        in: "formData"
        description: "object label 2"
        required: false
        type: "string"
        x-exportParamName: "ObjLabel2"
        x-optionalDataType: "String"
      - name: "back_connection_id"
        in: "query"
        description: "ID for the back connection port. Available via GET at /api/api/1.0/patch_panel_ports//\
          \ or Tools > Export > Patch Panel Port"
        required: false
        type: "string"
        x-exportParamName: "BackConnectionId"
        x-optionalDataType: "String"
      - name: "back_switchport_id"
        in: "formData"
        description: "Used if back connection type is switch."
        required: false
        type: "string"
        x-exportParamName: "BackSwitchportId"
        x-optionalDataType: "String"
      - name: "back_switch"
        in: "formData"
        description: "If back connection type is switch, use switch and switchport\
          \ names in combination."
        required: false
        type: "string"
        x-exportParamName: "BackSwitch"
        x-optionalDataType: "String"
      - name: "back_switchport"
        in: "formData"
        description: "Use if back connection type is switch - use in combination with\
          \ back_switch."
        required: false
        type: "string"
        x-exportParamName: "BackSwitchport"
        x-optionalDataType: "String"
      - name: "back_patch_panel_id"
        in: "formData"
        description: "ID of the back patch panel - if a patch panel port is connected\
          \ in back (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "BackPatchPanelId"
        x-optionalDataType: "String"
      - name: "back_patch_panel"
        in: "formData"
        description: "Name of the back patch panel - if a patch panel port is connected\
          \ in back (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "BackPatchPanel"
        x-optionalDataType: "String"
      - name: "back_port"
        in: "formData"
        description: "Number of the port on the back patch panel - if a patch panel\
          \ port is connected in back (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "BackPort"
        x-optionalDataType: "String"
      - name: "clear_front"
        in: "formData"
        description: "“yes” will clear front connection for port"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearFront"
        x-optionalDataType: "String"
      - name: "clear_back"
        in: "formData"
        description: "“yes” will clear back connection on port"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearBack"
        x-optionalDataType: "String"
      - name: "cable_type"
        in: "formData"
        description: "named value of the cable type. Must already exist."
        required: false
        type: "string"
        x-exportParamName: "CableType"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/patch_panel_models/:
    get:
      tags:
      - "Patch Panels"
      summary: "Retrieves all patch panel models."
      description: "Get all Patch Panel Models"
      operationId: "getPatch_panel_models"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_2"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Patch Panels"
      summary: "Create Patch Panel Model."
      description: "Create/Update Patch Panel Model. Required parameters: <ul><li>patch_panel_model_id\
        \ <b>OR</b> name</li>"
      operationId: "postPatch_panel_models"
      parameters:
      - name: "patch_panel_model_id"
        in: "formData"
        description: "Patch Panel Model ID or UI Tools > Export > Patch Panel Model"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModelId"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "Name of the patch panel model you want to edit or create."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "name of the hardware/software manufacturer."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        required: false
        type: "string"
        default: "singluar"
        enum:
        - "singluar"
        - "modular"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "port_type"
        in: "formData"
        description: "name of the port type. created if it doesn't exist already"
        required: false
        type: "string"
        x-exportParamName: "PortType"
        x-optionalDataType: "String"
      - name: "paired_ports"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "PairedPorts"
        x-optionalDataType: "String"
      - name: "imgfile_id"
        in: "formData"
        description: "image file id. You can see these from Tools > Import > Hardware\
          \ Import for now."
        required: false
        type: "string"
        x-exportParamName: "ImgfileId"
        x-optionalDataType: "String"
      - name: "imgfile"
        in: "formData"
        description: "name of the image file (Added in v5.8.2). Use instead of imgfile_id"
        required: false
        type: "string"
        x-exportParamName: "Imgfile"
        x-optionalDataType: "String"
      - name: "number_of_ports"
        in: "formData"
        description: "number of ports. required for creating a new patch panel type\
          \ singular. Ignored for patch panel type modular"
        required: false
        type: "string"
        x-exportParamName: "NumberOfPorts"
        x-optionalDataType: "String"
      - name: "number_of_ports_in_row"
        in: "formData"
        description: "number of ports in a row. required for creating a new patch\
          \ panel type singular. Ignored for patch panel type modular"
        required: false
        type: "string"
        x-exportParamName: "NumberOfPortsInRow"
        x-optionalDataType: "String"
      - name: "module_position"
        in: "formData"
        description: "for Modular Patch Panel Models. Possible values are horizontal\
          \ or vertical (Added in v5.8.2)"
        required: false
        type: "string"
        x-exportParamName: "ModulePosition"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/patch_panel_module_models/:
    get:
      tags:
      - "Patch Panels"
      summary: "Retrieves all patch panel module models."
      description: "Get all Patch Panel Module Models"
      operationId: "getPatch_panel_module_models"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_3"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Patch Panels"
      summary: "Create/Update Patch Panel Module Model."
      description: "Create/Update Patch Panel Module Model. Required parameters: <ul><li>patch_panel_module_model_id\
        \ <b>OR</b> name</li>"
      operationId: "postPatch_panel_module_models"
      parameters:
      - name: "patch_panel_module_model_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelModuleModelId"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "Name of the patch panel module model you want to edit or create."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "port_type"
        in: "formData"
        description: "name of the port type. created if it doesn't exist already"
        required: false
        type: "string"
        x-exportParamName: "PortType"
        x-optionalDataType: "String"
      - name: "paired_ports"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "PairedPorts"
        x-optionalDataType: "String"
      - name: "number_of_ports"
        in: "formData"
        description: "number of ports. required for creating a new patch panel type\
          \ singular. Ignored for patch panel type modular"
        required: false
        type: "string"
        x-exportParamName: "NumberOfPorts"
        x-optionalDataType: "String"
      - name: "number_of_ports_in_row"
        in: "formData"
        description: "number of ports in a row. required for creating a new patch\
          \ panel type singular. Ignored for patch panel type modular"
        required: false
        type: "string"
        x-exportParamName: "NumberOfPortsInRow"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/parts/:
    get:
      tags:
      - "Parts Management"
      summary: "Get all Parts - introduced in version 5.7.2"
      description: "Get all Parts"
      operationId: "getParts"
      parameters:
      - name: "type"
        in: "query"
        description: "type of the partmodel, cpu, mem, hdd for CPU, memory, and Harddisk.\
          \ For others it must match the type name for part model"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "name of the device where part is checked out to"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "query"
        description: "id of the device where part is checked out to"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "device_serial"
        in: "query"
        description: "serial number of the device, where part is checked out to"
        required: false
        type: "string"
        x-exportParamName: "DeviceSerial"
        x-optionalDataType: "String"
      - name: "room"
        in: "query"
        description: "name of the room where part is checked out to"
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "room_id"
        in: "query"
        description: "id of the room where part is checked out to"
        required: false
        type: "string"
        x-exportParamName: "RoomId"
        x-optionalDataType: "String"
      - name: "part_id"
        in: "query"
        description: "id of the part (added in v6.3.3)"
        required: false
        type: "string"
        x-exportParamName: "PartId"
        x-optionalDataType: "String"
      - name: "partmodel_id"
        in: "query"
        description: "id of the part model (added in v6.3.3)"
        required: false
        type: "string"
        x-exportParamName: "PartmodelId"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "query"
        description: "serial number of the part"
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "last_updated_lt"
        in: "query"
        description: "last updated less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedLt"
        x-optionalDataType: "String"
      - name: "last_updated_gt"
        in: "query"
        description: "last updated greater than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedGt"
        x-optionalDataType: "String"
      - name: "rack_id"
        in: "query"
        description: "id of the rack where part is checked out to"
        required: false
        type: "string"
        x-exportParamName: "RackId"
        x-optionalDataType: "String"
      - name: "rack"
        in: "query"
        description: "name of the rack where part is checked out to"
        required: false
        type: "string"
        x-exportParamName: "Rack"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "query"
        description: "filter by asset # (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "custom_fields_and"
        in: "query"
        description: "filter by custom fields, and filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsAnd"
        x-optionalDataType: "String"
      - name: "custom_fields_or"
        in: "query"
        description: "filter by custom fields, or filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsOr"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              parts:
                type: "array"
                items:
                  $ref: "#/definitions/Parts"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Parts Management"
      summary: "Create / Update Parts - introduced in version 5.7.2"
      description: "Create / Update Parts"
      operationId: "postParts"
      parameters:
      - name: "type"
        in: "formData"
        description: "Part type - new or existing. Must be hdd or harddisk to update\
          \ HDD model parameters (hddsize, hddtype, etc)"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "name of part model - new or existing"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "count"
        in: "formData"
        description: "number of parts"
        required: false
        type: "integer"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "part_id"
        in: "formData"
        description: "Use for updating existing part"
        required: false
        type: "string"
        x-exportParamName: "PartId"
        x-optionalDataType: "String"
      - name: "partmodel_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PartmodelId"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "formData"
        description: "Use for updating existing part. Caution: will update first matching\
          \ serial if multiple parts with same serial exist. Use part_id or partmodel_id\
          \ to uniquely identify."
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "firmware"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Firmware"
        x-optionalDataType: "String"
      - name: "assignment"
        in: "formData"
        description: "room, device, rma - required if assigning device"
        required: false
        type: "string"
        x-exportParamName: "Assignment"
        x-optionalDataType: "String"
      - name: "room"
        in: "formData"
        description: "Room name - required if assigned to room"
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "Room name - required if assigned to device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "date_changed"
        in: "formData"
        description: "Update the Date Changed field, using format YYYY-MM-DD HH:MM:SS"
        required: false
        type: "string"
        x-exportParamName: "DateChanged"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "cores"
        in: "formData"
        description: "number of cores"
        required: false
        type: "string"
        x-exportParamName: "Cores"
        x-optionalDataType: "String"
      - name: "cpuspeed"
        in: "formData"
        description: "enter in MHZ, e.g.: 3.5 GHZ use 3500"
        required: false
        type: "string"
        x-exportParamName: "Cpuspeed"
        x-optionalDataType: "String"
      - name: "threads"
        in: "formData"
        description: "number of threads"
        required: false
        type: "string"
        x-exportParamName: "Threads"
        x-optionalDataType: "String"
      - name: "ramsize"
        in: "formData"
        description: "enter in MB, e.g.: 8 GB enter 8192"
        required: false
        type: "string"
        x-exportParamName: "Ramsize"
        x-optionalDataType: "String"
      - name: "ramtype"
        in: "formData"
        description: "e.g.: DDR3"
        required: false
        type: "string"
        x-exportParamName: "Ramtype"
        x-optionalDataType: "String"
      - name: "ramspeed"
        in: "formData"
        description: "e.g.: 1600"
        required: false
        type: "string"
        x-exportParamName: "Ramspeed"
        x-optionalDataType: "String"
      - name: "hddsize"
        in: "formData"
        description: "enter in GB, e.g.: 250 GB enter 250"
        required: false
        type: "string"
        x-exportParamName: "Hddsize"
        x-optionalDataType: "String"
      - name: "hddtype"
        in: "formData"
        description: "new or existing"
        required: false
        type: "string"
        x-exportParamName: "Hddtype"
        x-optionalDataType: "String"
      - name: "hddrpm"
        in: "formData"
        description: "new or existing"
        required: false
        type: "string"
        x-exportParamName: "Hddrpm"
        x-optionalDataType: "String"
      - name: "raid_type"
        in: "formData"
        description: "type of RAID"
        required: false
        type: "string"
        x-exportParamName: "RaidType"
        x-optionalDataType: "String"
      - name: "raid_group"
        in: "formData"
        description: "RAID group name"
        required: false
        type: "string"
        x-exportParamName: "RaidGroup"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/parts/{id}/:
    delete:
      tags:
      - "Parts Management"
      summary: "Delete Part"
      description: "This API is used to delete the part with the part id supplied\
        \ as the required argument."
      operationId: "deleteParts"
      parameters:
      - name: "id"
        in: "path"
        description: "part id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/partmodels/:
    get:
      tags:
      - "Parts Management"
      summary: "Get all Part Models - introduced in version 5.7.2"
      description: "Get all Part Models"
      operationId: "getPartmodels"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Partmodels"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Parts Management"
      summary: "Create / Update Part Models - introduced in version 5.7.2"
      description: "Create / Update Part Models"
      operationId: "postPartmodels"
      parameters:
      - name: "type"
        in: "formData"
        description: "Part type - new or existing. Must be hdd or harddisk to update\
          \ HDD model parameters (hddsize, hddtype, etc)"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "name of part model - new or existing"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "partmodel_id"
        in: "formData"
        description: "use for updating existing part model"
        required: false
        type: "string"
        x-exportParamName: "PartmodelId"
        x-optionalDataType: "String"
      - name: "modelno"
        in: "formData"
        description: "Model # of the part model"
        required: false
        type: "string"
        x-exportParamName: "Modelno"
        x-optionalDataType: "String"
      - name: "partno"
        in: "formData"
        description: "Part # of the part model"
        required: false
        type: "string"
        x-exportParamName: "Partno"
        x-optionalDataType: "String"
      - name: "manufacturer"
        in: "formData"
        description: "name of the hardware/software manufacturer."
        required: false
        type: "string"
        x-exportParamName: "Manufacturer"
        x-optionalDataType: "String"
      - name: "media_type"
        in: "formData"
        description: "Type of media"
        required: false
        type: "string"
        x-exportParamName: "MediaType"
        x-optionalDataType: "String"
      - name: "connector_type"
        in: "formData"
        description: "Type of connector, ie rj45"
        required: false
        type: "string"
        x-exportParamName: "ConnectorType"
        x-optionalDataType: "String"
      - name: "length"
        in: "formData"
        description: "Cable length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "connectivity"
        in: "formData"
        description: "New or existing (not used for CPU, RAM, HDD)"
        required: false
        type: "string"
        x-exportParamName: "Connectivity"
        x-optionalDataType: "String"
      - name: "total_count"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "TotalCount"
        x-optionalDataType: "String"
      - name: "location"
        in: "formData"
        description: "Location/region of instance deployment"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "cores"
        in: "formData"
        description: "number of cores"
        required: false
        type: "string"
        x-exportParamName: "Cores"
        x-optionalDataType: "String"
      - name: "cpuspeed"
        in: "formData"
        description: "enter in MHZ, e.g.: 3.5 GHZ use 3500"
        required: false
        type: "string"
        x-exportParamName: "Cpuspeed"
        x-optionalDataType: "String"
      - name: "threads"
        in: "formData"
        description: "number of threads"
        required: false
        type: "string"
        x-exportParamName: "Threads"
        x-optionalDataType: "String"
      - name: "ramsize"
        in: "formData"
        description: "enter in MB, e.g.: 8 GB enter 8192"
        required: false
        type: "string"
        x-exportParamName: "Ramsize"
        x-optionalDataType: "String"
      - name: "ramtype"
        in: "formData"
        description: "e.g.: DDR3"
        required: false
        type: "string"
        x-exportParamName: "Ramtype"
        x-optionalDataType: "String"
      - name: "ramspeed"
        in: "formData"
        description: "e.g.: 1600"
        required: false
        type: "string"
        x-exportParamName: "Ramspeed"
        x-optionalDataType: "String"
      - name: "hddsize"
        in: "formData"
        description: "enter in GB, e.g.: 250 GB enter 250"
        required: false
        type: "string"
        x-exportParamName: "Hddsize"
        x-optionalDataType: "String"
      - name: "hddtype"
        in: "formData"
        description: "new or existing"
        required: false
        type: "string"
        x-exportParamName: "Hddtype"
        x-optionalDataType: "String"
      - name: "hddrpm"
        in: "formData"
        description: "new or existing"
        required: false
        type: "string"
        x-exportParamName: "Hddrpm"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/partmodels/{id}/:
    delete:
      tags:
      - "Parts Management"
      summary: "Delete Part Model"
      description: "This API is used to delete the part model with the part model\
        \ id supplied as the required argument."
      operationId: "deletePartmodels"
      parameters:
      - name: "id"
        in: "path"
        description: "part model id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/part/:
    put:
      tags:
      - "Parts Management"
      summary: "Create/update existing custom fields for parts."
      description: "Create/updated custom fields for parts."
      operationId: "putCustom_FieldPart"
      parameters:
      - name: "id"
        in: "formData"
        description: "ID of part."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/partmodel/:
    put:
      tags:
      - "Parts Management"
      summary: "Create/update custom fields for Part Models."
      description: "Custom Fields"
      operationId: "putCustom_FieldPartmodel"
      parameters:
      - name: "id"
        in: "query"
        description: "ID of part."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/purchases/:
    get:
      tags:
      - "Purchasing"
      summary: "GET method retrieves all Purchases."
      description: "Get All Purchases"
      operationId: "getPurchases"
      parameters:
      - name: "purchase_id"
        in: "query"
        description: "Device42 Purchase ID"
        required: false
        type: "string"
        x-exportParamName: "PurchaseId"
        x-optionalDataType: "String"
      - name: "order_no"
        in: "query"
        description: "Order number"
        required: false
        type: "string"
        x-exportParamName: "OrderNo"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "query"
        description: "Vendor name"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "cost_center"
        in: "query"
        description: "Cost Center"
        required: false
        type: "string"
        x-exportParamName: "CostCenter"
        x-optionalDataType: "String"
      - name: "building"
        in: "query"
        description: "Associated building"
        required: false
        type: "string"
        x-exportParamName: "Building"
        x-optionalDataType: "String"
      - name: "completed"
        in: "query"
        description: "Line Item is completed"
        required: false
        type: "string"
        x-exportParamName: "Completed"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Purchases"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Purchasing"
      summary: "Create / Update Purchases"
      description: "Create / Update Purchases. Required parameters: <ul><li>order_no\
        \ <b>OR</b> purchase_id</li>"
      operationId: "postPurchases"
      parameters:
      - name: "order_no"
        in: "formData"
        description: "order number / name for the purchase. Can be new or existing."
        required: false
        type: "string"
        x-exportParamName: "OrderNo"
        x-optionalDataType: "String"
      - name: "purchase_id"
        in: "formData"
        description: "Can be used instead of order_no to update existing purchase"
        required: false
        type: "string"
        x-exportParamName: "PurchaseId"
        x-optionalDataType: "String"
      - name: "line_type"
        in: "formData"
        description: "required for any new line being added for both device or contract."
        required: false
        type: "string"
        x-exportParamName: "LineType"
        x-optionalDataType: "String"
      - name: "line_no"
        in: "formData"
        description: "required for existing line items, use existing line # to change\
          \ existing line item."
        required: false
        type: "string"
        x-exportParamName: "LineNo"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "The cloud vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "cost"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Cost"
        x-optionalDataType: "String"
      - name: "po_date"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PoDate"
        x-optionalDataType: "String"
      - name: "cost_center"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "CostCenter"
        x-optionalDataType: "String"
      - name: "completed"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Completed"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "line_name"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LineName"
        x-optionalDataType: "String"
      - name: "line_quantity"
        in: "formData"
        description: "can be calculated automatically from # of objects associated"
        required: false
        type: "string"
        x-exportParamName: "LineQuantity"
        x-optionalDataType: "String"
      - name: "line_cost"
        in: "formData"
        description: "cost for single object / item."
        required: false
        type: "string"
        x-exportParamName: "LineCost"
        x-optionalDataType: "String"
      - name: "line_cost_center"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LineCostCenter"
        x-optionalDataType: "String"
      - name: "line_customer"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LineCustomer"
        x-optionalDataType: "String"
      - name: "line_item_type"
        in: "formData"
        description: "Default is device."
        required: false
        type: "string"
        enum:
        - "device"
        - "asset"
        - "device_os"
        - "rack"
        - "shipping"
        - "tax"
        - "other"
        x-exportParamName: "LineItemType"
        x-optionalDataType: "String"
      - name: "line_asset_ids"
        in: "formData"
        description: "Comma separated asset_id. Only applicable if line_item_type\
          \ is asset."
        required: false
        type: "string"
        x-exportParamName: "LineAssetIds"
        x-optionalDataType: "String"
      - name: "line_start_date"
        in: "formData"
        description: "Date in YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LineStartDate"
        x-optionalDataType: "String"
      - name: "line_end_date"
        in: "formData"
        description: "Date in YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LineEndDate"
        x-optionalDataType: "String"
      - name: "line_frequency"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "one time"
        - "monthly"
        - "quarterly"
        - "bi-annually"
        - "annually"
        x-exportParamName: "LineFrequency"
        x-optionalDataType: "String"
      - name: "line_renew_date"
        in: "formData"
        description: "Date in YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LineRenewDate"
        x-optionalDataType: "String"
      - name: "line_cancel_policy"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LineCancelPolicy"
        x-optionalDataType: "String"
      - name: "line_contract_type"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LineContractType"
        x-optionalDataType: "String"
      - name: "line_service_type"
        in: "formData"
        description: "new service type will be created, if it doesn’t exist (added\
          \ in v9.0.2)"
        required: false
        type: "string"
        x-exportParamName: "LineServiceType"
        x-optionalDataType: "String"
      - name: "line_contract_id"
        in: "formData"
        description: "(added in v9.0.2)"
        required: false
        type: "string"
        x-exportParamName: "LineContractId"
        x-optionalDataType: "String"
      - name: "line_notes"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LineNotes"
        x-optionalDataType: "String"
      - name: "line_completed"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "LineCompleted"
        x-optionalDataType: "String"
      - name: "line_devices"
        in: "formData"
        description: "Comma separated device names. Only applicable if line_item_type\
          \ is device. Will create new devices if device with name specific here does\
          \ not exist."
        required: false
        type: "string"
        x-exportParamName: "LineDevices"
        x-optionalDataType: "String"
      - name: "line_device_serial_nos"
        in: "formData"
        description: "Comma separated serial numbers. Only applicable if line_item_type\
          \ is device. Will only work on existing serial numbers."
        required: false
        type: "string"
        x-exportParamName: "LineDeviceSerialNos"
        x-optionalDataType: "String"
      - name: "line_device_asset_nos"
        in: "formData"
        description: "Comma separated asset numbers. Only applicable if line_item_type\
          \ is device. Will only work on existing asset numbers."
        required: false
        type: "string"
        x-exportParamName: "LineDeviceAssetNos"
        x-optionalDataType: "String"
      - name: "line_circuits"
        in: "formData"
        description: "circuit ID name"
        required: false
        type: "string"
        x-exportParamName: "LineCircuits"
        x-optionalDataType: "String"
      - name: "line_circuit_ids"
        in: "formData"
        description: "D42 ID for the circuit(s)"
        required: false
        type: "string"
        x-exportParamName: "LineCircuitIds"
        x-optionalDataType: "String"
      - name: "line_building_ids"
        in: "formData"
        description: "D42 ID for the building(s)"
        required: false
        type: "string"
        x-exportParamName: "LineBuildingIds"
        x-optionalDataType: "String"
      - name: "line_certificate_ids"
        in: "formData"
        description: "D42 ID for the certificate(s)"
        required: false
        type: "string"
        x-exportParamName: "LineCertificateIds"
        x-optionalDataType: "String"
      - name: "line_software_ids"
        in: "formData"
        description: "D42 ID for the software"
        required: false
        type: "string"
        x-exportParamName: "LineSoftwareIds"
        x-optionalDataType: "String"
      - name: "line_room_ids"
        in: "formData"
        description: "D42 ID for the room(s)"
        required: false
        type: "string"
        x-exportParamName: "LineRoomIds"
        x-optionalDataType: "String"
      - name: "line_rack_ids"
        in: "formData"
        description: "D42 ID for the rack(s)"
        required: false
        type: "string"
        x-exportParamName: "LineRackIds"
        x-optionalDataType: "String"
      - name: "line_part_ids"
        in: "formData"
        description: "D42 ID for the part(s)"
        required: false
        type: "string"
        x-exportParamName: "LinePartIds"
        x-optionalDataType: "String"
      - name: "line_device_os_ids"
        in: "formData"
        description: "D42 ID for the Device OS"
        required: false
        type: "string"
        x-exportParamName: "LineDeviceOsIds"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/purchases/{id}/:
    delete:
      tags:
      - "Purchasing"
      summary: "Delete Purchase"
      description: "This API is used to delete the purchase order with the purchase\
        \ order id supplied as the required argument."
      operationId: "deletePurchases"
      parameters:
      - name: "id"
        in: "path"
        description: "purchase id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/purchases/:
    put:
      tags:
      - "Purchasing"
      summary: "Create/update custom fields for purchases."
      description: "Custom Fields"
      operationId: "putCustom_FieldPurchases"
      parameters:
      - name: "order_no"
        in: "formData"
        description: "order number / name for the purchase. Can be new or existing."
        required: true
        type: "string"
        x-exportParamName: "OrderNo"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/lifecycle_event/:
    get:
      tags:
      - "Asset-Device Life Cycle"
      summary: "Retrieve Life Cycle Events using filters - introduced in version 5.5.7"
      description: "Get Life Cycle Events"
      operationId: "getLifecycle_event"
      parameters:
      - name: "type"
        in: "query"
        description: "filter by existing event type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "filter by device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "asset"
        in: "query"
        description: "filter by asset name"
        required: false
        type: "string"
        x-exportParamName: "Asset"
        x-optionalDataType: "String"
      - name: "enduser"
        in: "query"
        description: "filter by end user name"
        required: false
        type: "string"
        x-exportParamName: "Enduser"
        x-optionalDataType: "String"
      - name: "date_gt"
        in: "query"
        description: "filter by date greater than (YYYY-MM-DD)"
        required: false
        type: "string"
        x-exportParamName: "DateGt"
        x-optionalDataType: "String"
      - name: "date_lt"
        in: "query"
        description: "filter by date less than (YYYY-MM-DD)"
        required: false
        type: "string"
        x-exportParamName: "DateLt"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              lifecycle_events:
                type: "array"
                items:
                  type: "object"
                  properties:
                    date:
                      example: "2013-09-05T04:00:00Z"
                    asset_id:
                      example: "224"
                    asset_name:
                      example: "heart of gold"
                    enduser:
                      example: "H. Dent"
                    notes:
                      example: "R&D Dev Server"
                    type:
                      example: "Purchased"
                    id:
                      example: "4"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Asset-Device Life Cycle"
      summary: "Create LifeCycle Events"
      description: "Use this API to create life cycle events for devices or assets.\
        \ Use device, device_id, asset_no, serial_no, or asset_id to indicate the\
        \ device or asset the event is to be created for."
      operationId: "putLifecycle_event"
      parameters:
      - name: "date"
        in: "formData"
        description: "in YYYY-MM-DD or<br>YYYY-MM-DD HH:MM format."
        required: true
        type: "string"
        x-exportParamName: "Date"
      - name: "type"
        in: "formData"
        description: "must be defined already in device42."
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "device"
        in: "formData"
        description: "Name of the device that the event is for"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "ID of the device that the event is for"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "asset_no"
        in: "formData"
        description: "Asset number of the device that the event is for"
        required: false
        type: "string"
        x-exportParamName: "AssetNo"
        x-optionalDataType: "String"
      - name: "serial_no"
        in: "formData"
        description: "Serial number of the device that the event is for"
        required: false
        type: "string"
        x-exportParamName: "SerialNo"
        x-optionalDataType: "String"
      - name: "asset_id"
        in: "formData"
        description: "ID of the asset that the event is for"
        required: false
        type: "string"
        x-exportParamName: "AssetId"
        x-optionalDataType: "String"
      - name: "user"
        in: "formData"
        description: "enduser name"
        required: false
        type: "string"
        x-exportParamName: "User"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/vrfgroup/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all VRF Groups."
      description: "Get all VRF Groups"
      operationId: "getIPAMvrfgroup"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_4"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create/Update VRF Group."
      description: "Create/Update VRF Group"
      operationId: "postIPAMvrfgroup"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the VRF Group you want to add edit or create"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "buildings"
        in: "formData"
        description: "list of building names for the VRF Group"
        required: false
        type: "string"
        x-exportParamName: "Buildings"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "IPAM"
      summary: "Update VRF Group"
      description: "Update a Specific VRF Group"
      operationId: "putIPAMvrfgroup"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the VRF Group"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "buildings"
        in: "formData"
        description: "list of building names for the VRF Group"
        required: false
        type: "string"
        x-exportParamName: "Buildings"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/vrfgroup/{id}/:
    delete:
      tags:
      - "IPAM"
      summary: "Delete VRF Group"
      description: "This API is used to delete the vrf group with the vrf group id\
        \ supplied as the required argument."
      operationId: "deleteIPAMvrfgroupId"
      parameters:
      - name: "id"
        in: "path"
        description: "VRF group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/vrfgroup/:
    put:
      tags:
      - "IPAM"
      summary: "VRF Group Custom Fields"
      description: "Create/update custom fields for VRF groups. Required parameters:\
        \ <ul><li>name <b>OR</b> ID</li> <li>key</li>"
      operationId: "putIPAMCustomFIvrfgroup"
      parameters:
      - name: "name"
        in: "formData"
        description: "Required if ID not present"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "id"
        in: "formData"
        description: "Required if name not present"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "value"
        in: "formData"
        description: "Value of the custom field"
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "Yes to clear the existing value for that field."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes."
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/subnet/:
    put:
      tags:
      - "IPAM"
      summary: "Create/update custom fields for subnets."
      description: "Subnet Custom Fields"
      operationId: "putIPAMCustomFIsubnet"
      parameters:
      - name: "network"
        in: "formData"
        description: "Network IP"
        required: true
        type: "string"
        x-exportParamName: "Network"
      - name: "mask_bits"
        in: "formData"
        required: true
        type: "string"
        x-exportParamName: "MaskBits"
      - name: "vrf_group"
        in: "formData"
        description: "VRF group name"
        required: true
        type: "string"
        x-exportParamName: "VrfGroup"
      - name: "key"
        in: "query"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Additional options: number,date(text formatted yyyy-mm-dd), related_field(with\
          \ related_field_name), boolean or url"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "The existing field to relate this custom field to. Can be: appcomp\
          \ (for application components), asset, building, certificate, circuit, cusotmer,\
          \ device, endusers, hardware (for device hardware models), ip_address, natip,\
          \ netport (for ports), os, part, partmodel, password, pdu (for power units),\
          \ pdu_model (for power unit models), ports, purchase, purchaselineitem (for\
          \ a line item on a purchase order), rack, room, software, vlan (for subnets),\
          \ switch_vlan (for vlans), vrfgroup"
        required: false
        type: "string"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "Value of the custom field."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "Yes to clear the existing value for that field."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes."
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/ip_address/:
    put:
      tags:
      - "IPAM"
      summary: "Create/update custom fields for subnets."
      description: "Subnet Custom Fields"
      operationId: "putIPAMCustomFIip_address"
      parameters:
      - name: "ip_address"
        in: "formData"
        description: "IP address"
        required: true
        type: "string"
        x-exportParamName: "IpAddress"
      - name: "subnet_id"
        in: "formData"
        description: "Subnet ID"
        required: true
        type: "string"
        x-exportParamName: "SubnetId"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Additional options: number,date(text formatted yyyy-mm-dd), related_field(with\
          \ related_field_name), boolean or url"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "The existing field to relate this custom field to. Can be: appcomp\
          \ (for application components), asset, building, certificate, circuit, cusotmer,\
          \ device, endusers, hardware (for device hardware models), ip_address, natip,\
          \ netport (for ports), os, part, partmodel, password, pdu (for power units),\
          \ pdu_model (for power unit models), ports, purchase, purchaselineitem (for\
          \ a line item on a purchase order), rack, room, software, vlan (for subnets),\
          \ switch_vlan (for vlans), vrfgroup"
        required: false
        type: "string"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "Value of the custom field."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes."
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/switchport/:
    put:
      tags:
      - "IPAM"
      summary: "Create / Update Switch Port Custom Fields"
      description: "Required parameters: <ul><li>id <b>OR</b> port <b>AND</b> device_name</li>\
        \ <li>key</li>"
      operationId: "putIPAMCustomFIswitchport"
      parameters:
      - name: "id"
        in: "formData"
        description: "ID of the switchport"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "port"
        in: "formData"
        description: "required if ID is not used"
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      - name: "device_name"
        in: "formData"
        description: "required if switchport ID not used"
        required: false
        type: "string"
        x-exportParamName: "DeviceName"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/subnet_category/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all Subnet Categories."
      description: "Get all Subnet Categories"
      operationId: "getIPAMsubnetcategory"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_5"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      description: "Create Subnet Category."
      operationId: "postIPAMsubnetcategory"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the Subnet Category you want to add edit or create"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "is_it_default"
        in: "formData"
        description: "Defaults to no. Only one category can be yes. If yes, this is\
          \ the subnet category to use if none specified in an API or auto-discovery\
          \ update."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItDefault"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "IPAM"
      summary: "Create Subnet Category."
      description: "Update a Specific Subnet Category"
      operationId: "putIPAMsubnetcategory"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the Subnet Category"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "is_it_default"
        in: "formData"
        description: "yes or no. Defaults to no. Only one category can be yes. If\
          \ yes, this is the subnet category to use if none specified in an API or\
          \ auto-discovery update."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IsItDefault"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/subnet_category/{id}/:
    delete:
      tags:
      - "IPAM"
      summary: "Delete Subnet Category"
      description: "This API is used to delete the subnet category with the subnet\
        \ category id supplied as the required argument."
      operationId: "deleteIPAMsubnetcategory"
      parameters:
      - name: "id"
        in: "path"
        description: "Subnet category id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/subnets/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all Subnets."
      description: "Get all Subnets - Filter parameters are below."
      operationId: "getIPAMsubnets"
      parameters:
      - name: "name"
        in: "query"
        description: "name of the subnet"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "vrf_group_id"
        in: "query"
        description: "ID of the VRF group"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "vrf_group"
        in: "query"
        description: "VRF group name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroup"
        x-optionalDataType: "String"
      - name: "parent_subnet_id"
        in: "query"
        description: "ID of the parent subnet"
        required: false
        type: "string"
        x-exportParamName: "ParentSubnetId"
        x-optionalDataType: "String"
      - name: "parent_subnet"
        in: "query"
        description: "parent subnet name"
        required: false
        type: "string"
        x-exportParamName: "ParentSubnet"
        x-optionalDataType: "String"
      - name: "customer_id"
        in: "query"
        description: "ID of the customer (Added in v6.3.0)"
        required: false
        type: "string"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "customer"
        in: "query"
        description: "filter by customer name"
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "subnet_id"
        in: "query"
        description: "ID of the subnet (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "SubnetId"
        x-optionalDataType: "String"
      - name: "mask_bits"
        in: "query"
        description: "mask bits"
        required: false
        type: "string"
        x-exportParamName: "MaskBits"
        x-optionalDataType: "String"
      - name: "mask_bits_lt"
        in: "query"
        description: "less than mask bits (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "MaskBitsLt"
        x-optionalDataType: "String"
      - name: "mask_bits_gt"
        in: "query"
        description: "greater than mask bits (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "MaskBitsGt"
        x-optionalDataType: "String"
      - name: "description"
        in: "query"
        description: "matching description (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "range_begin"
        in: "query"
        description: "Range Begin (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "RangeBegin"
        x-optionalDataType: "String"
      - name: "range_end"
        in: "query"
        description: "Range End (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "RangeEnd"
        x-optionalDataType: "String"
      - name: "gateway"
        in: "query"
        description: "Gateway (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "Gateway"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_and"
        in: "query"
        description: "filter by all the tags, separated by comma. (This is an AND\
          \ filter and all tags have to match for filter, this was added in v6.3.1)"
        required: false
        type: "string"
        x-exportParamName: "TagsAnd"
        x-optionalDataType: "String"
      - name: "custom_fields_and"
        in: "query"
        description: "filter by custom fields, and filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsAnd"
        x-optionalDataType: "String"
      - name: "custom_fields_or"
        in: "query"
        description: "filter by custom fields, or filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsOr"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "query"
        description: "filter by service level name"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "name of the category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "category_id"
        in: "query"
        description: "ID of the category"
        required: false
        type: "string"
        x-exportParamName: "CategoryId"
        x-optionalDataType: "String"
      - name: "vlan_id"
        in: "query"
        description: "ID of the vlan"
        required: false
        type: "string"
        x-exportParamName: "VlanId"
        x-optionalDataType: "String"
      - name: "network"
        in: "query"
        description: "Optional"
        required: false
        type: "string"
        x-exportParamName: "Network"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/inline_response_200_6"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create / Update Subnets."
      description: "Create / Update Subnets"
      operationId: "postIPAMsubnets"
      parameters:
      - name: "network"
        in: "formData"
        description: "Required for creation, cannot be modified after subnet creation."
        required: true
        type: "string"
        x-exportParamName: "Network"
      - name: "mask_bits"
        in: "formData"
        description: "Cannot be modified after subnet creation"
        required: true
        type: "string"
        x-exportParamName: "MaskBits"
      - name: "vrf_group_id"
        in: "formData"
        description: "ID of the VRF group"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "vrf_group"
        in: "formData"
        description: "VRF group name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroup"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "gateway"
        in: "formData"
        description: "Gateway (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "Gateway"
        x-optionalDataType: "String"
      - name: "range_begin"
        in: "formData"
        description: "Range Begin (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "RangeBegin"
        x-optionalDataType: "String"
      - name: "range_end"
        in: "formData"
        description: "Range End (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "RangeEnd"
        x-optionalDataType: "String"
      - name: "parent_vlan_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ParentVlanId"
        x-optionalDataType: "String"
      - name: "parent_subnet_id"
        in: "formData"
        description: "Change the parent subnet of the subnet. Note: must be valid\
          \ parent."
        required: false
        type: "string"
        x-exportParamName: "ParentSubnetId"
        x-optionalDataType: "String"
      - name: "customer_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "Must already exist"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "assigned"
        in: "formData"
        description: "‘yes’ if assigned. ‘no’ (default) if unassigned."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Assigned"
        x-optionalDataType: "String"
      - name: "allocated"
        in: "formData"
        description: "‘yes’ if allocated. ‘no’ (default) if unallocated."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Allocated"
        x-optionalDataType: "String"
      - name: "auto_add_ips"
        in: "formData"
        description: "If ‘yes’, addresses within subnet will be automatically added\
          \ to Device42. (Only available in POST)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "AutoAddIps"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no, Corp:yes specifies that\
          \ the admin groups for this object are Prod_East with view only permission\
          \ and Corp with change permission. Use for initial insert."
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "new_category"
        in: "formData"
        description: "Use new_category to update an existing category."
        required: false
        type: "string"
        x-exportParamName: "NewCategory"
        x-optionalDataType: "String"
      - name: "category_id"
        in: "formData"
        description: "ID of the category - use for initial insert."
        required: false
        type: "string"
        x-exportParamName: "CategoryId"
        x-optionalDataType: "String"
      - name: "new_category_id"
        in: "formData"
        description: "Use new_category_id to update an existing category ID."
        required: false
        type: "string"
        x-exportParamName: "NewCategoryId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "IPAM"
      summary: "Create / Update Subnets."
      description: "Update a Specific Subnet"
      operationId: "putIPAMsubnets"
      parameters:
      - name: "network"
        in: "formData"
        description: "Required for creation, cannot be modified after subnet creation."
        required: true
        type: "string"
        x-exportParamName: "Network"
      - name: "mask_bits"
        in: "formData"
        description: "Cannot be modified after subnet creation"
        required: true
        type: "string"
        x-exportParamName: "MaskBits"
      - name: "vrf_group_id"
        in: "formData"
        description: "ID of the VRF group"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "vrf_group"
        in: "formData"
        description: "VRF group name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroup"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "gateway"
        in: "formData"
        description: "Gateway (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "Gateway"
        x-optionalDataType: "String"
      - name: "range_begin"
        in: "formData"
        description: "Range Begin (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "RangeBegin"
        x-optionalDataType: "String"
      - name: "range_end"
        in: "formData"
        description: "Range End (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "RangeEnd"
        x-optionalDataType: "String"
      - name: "parent_vlan_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ParentVlanId"
        x-optionalDataType: "String"
      - name: "parent_subnet_id"
        in: "formData"
        description: "Change the parent subnet of the subnet. Note: must be valid\
          \ parent."
        required: false
        type: "string"
        x-exportParamName: "ParentSubnetId"
        x-optionalDataType: "String"
      - name: "customer_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "Must already exist"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "assigned"
        in: "formData"
        description: "‘yes’ if assigned. ‘no’ (default) if unassigned."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Assigned"
        x-optionalDataType: "String"
      - name: "allocated"
        in: "formData"
        description: "‘yes’ if allocated. ‘no’ (default) if unallocated."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Allocated"
        x-optionalDataType: "String"
      - name: "auto_add_ips"
        in: "formData"
        description: "If ‘yes’, addresses within subnet will be automatically added\
          \ to Device42. (Only available in POST)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "AutoAddIps"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no, Corp:yes specifies that\
          \ the admin groups for this object are Prod_East with view only permission\
          \ and Corp with change permission. Use for initial insert."
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "category_id"
        in: "formData"
        description: "ID of the category - use for initial insert."
        required: false
        type: "string"
        x-exportParamName: "CategoryId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/subnets/{subnet_id}/:
    get:
      tags:
      - "IPAM"
      summary: "Get Subnet by Subnet ID"
      description: "GET method retrieves the subnet with the specified subnet id."
      operationId: "getIPAM_subnet_id"
      parameters:
      - name: "subnet_id"
        in: "path"
        description: "Subnet Id"
        required: true
        type: "integer"
        x-exportParamName: "SubnetId"
      responses:
        "200":
          description: "The above command returns the same output as Get All Subnets\
            \ above"
          schema:
            $ref: "#/definitions/IPAMsubnets"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "IPAM"
      summary: "Delete Subnet"
      description: "This API is used to delete the subnet with the subnet id supplied\
        \ as the required argument."
      operationId: "deleteIPAMsubnets"
      parameters:
      - name: "subnet_id"
        in: "path"
        description: "subnet id"
        required: true
        type: "integer"
        x-exportParamName: "SubnetId"
      responses:
        "200":
          description: "The above command returns JSON structured like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/subnets/customer_id/{customer_id}/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all Subnets by customer ID #."
      description: "Get all Subnets by Customer"
      operationId: "getIPAM_customer_id"
      parameters:
      - name: "customer_id"
        in: "path"
        description: "Customer Id"
        required: true
        type: "integer"
        x-exportParamName: "CustomerId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_7"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/subnets/create_child/:
    post:
      tags:
      - "IPAM"
      summary: "Create child Subnet."
      description: "Create Child Subnet. Required parameters: <ul><li>mask_bits</li>\
        \ <li>parent_subnet_id <b>OR</b> vrf_group <b>OR</b> vrf_group_id</li>"
      operationId: "postIPAM_subnets_create_child"
      parameters:
      - name: "mask_bits"
        in: "formData"
        description: "e.g. 24"
        required: true
        type: "string"
        x-exportParamName: "MaskBits"
      - name: "parent_subnet_id"
        in: "formData"
        description: "ID of the parent subnet. Can be obtained via /api/api/1.0/subnets/\
          \ or Tools > Export > Subnet. Required if vrf_group and vrf_group_id are\
          \ not present."
        required: false
        type: "string"
        x-exportParamName: "ParentSubnetId"
        x-optionalDataType: "String"
      - name: "vrf_group"
        in: "formData"
        description: "Name of the VRF group. Required if parent_subnet_id or vrf_group_id\
          \ are not present."
        required: false
        type: "string"
        x-exportParamName: "VrfGroup"
        x-optionalDataType: "String"
      - name: "vrf_group_id"
        in: "formData"
        description: "ID of the VRF group. Required if parent_subnet_id or vrf_group\
          \ are not present."
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "parent_mask_bits"
        in: "formData"
        description: "only if searching within a VRF and you want to restrict to certain\
          \ parents with particular mask bits (added in v9.0.0)"
        required: false
        type: "string"
        x-exportParamName: "ParentMaskBits"
        x-optionalDataType: "String"
      - name: "ipv6"
        in: "formData"
        description: "Required if creating an ipv6 subnet"
        required: false
        type: "string"
        x-exportParamName: "Ipv6"
        x-optionalDataType: "String"
      - name: "network"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Network"
        x-optionalDataType: "String"
      - name: "subnet_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "SubnetId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/inline_response_200_8"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/vlans/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all VLANs."
      description: "Get all VLANs"
      operationId: "getIPAMvlans"
      parameters:
      - name: "vlan_id"
        in: "query"
        description: "ID of the vlan"
        required: false
        type: "string"
        x-exportParamName: "VlanId"
        x-optionalDataType: "String"
      - name: "number"
        in: "query"
        description: "vlan number"
        required: false
        type: "string"
        x-exportParamName: "Number"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_and"
        in: "query"
        description: "filter by all the tags, separated by comma. (This is an AND\
          \ filter and all tags have to match for filter, this was added in v6.3.1)"
        required: false
        type: "string"
        x-exportParamName: "TagsAnd"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/inline_response_200_9"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create VLANS."
      description: "Create VLANS"
      operationId: "postIPAMvlans"
      parameters:
      - name: "number"
        in: "formData"
        description: "VLAN"
        required: true
        type: "string"
        x-exportParamName: "Number"
      - name: "name"
        in: "formData"
        description: "If left blank, name will be created as VLANxxxx, e.g. VLAN#\
          \ 342 will be named VLAN0342"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "switch_id"
        in: "formData"
        description: "Comma separated values for switch_ids"
        required: false
        type: "string"
        x-exportParamName: "SwitchId"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/vlans/{id}/:
    get:
      tags:
      - "IPAM"
      summary: "Get VLAN by ID"
      description: "GET method retrieves VLAN by specific VLAN ID."
      operationId: "getIPAMvlans_id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/IPAMvlans"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "IPAM"
      summary: "Update VLANS by ID in url."
      description: "Update VLANS"
      operationId: "putIPAMvlans"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "number"
        in: "formData"
        description: "vlan number"
        required: false
        type: "string"
        x-exportParamName: "Number"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "If left blank, name will be created as VLANxxxx, e.g. VLAN#\
          \ 342 will be named VLAN0342"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "switch_id"
        in: "formData"
        description: "Comma separated values for switch_ids"
        required: false
        type: "string"
        x-exportParamName: "SwitchId"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "IPAM"
      summary: "Delete VLAN"
      description: "This API is used to delete the vlan with the vlan id supplied\
        \ as the required argument."
      operationId: "deleteIPAMvlans"
      parameters:
      - name: "id"
        in: "path"
        description: "vlan id (This is Device42 ID of the VLAN)"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/vlans/smart_merge_all/:
    post:
      tags:
      - "IPAM"
      summary: "Update VLANS by ID in url."
      description: "Smart Merge VLANS"
      operationId: "postIPAMvlans_smart_merge_all"
      parameters:
      - name: "number"
        in: "formData"
        description: "vlan number"
        required: false
        type: "string"
        x-exportParamName: "Number"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "switch_id"
        in: "formData"
        description: "Comma separated values for switch_ids"
        required: false
        type: "string"
        x-exportParamName: "SwitchId"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/ips/:
    get:
      tags:
      - "IPAM"
      summary: "Get all IPs"
      description: "GET method retrieves all IPs. (Added in v5.9.3) By default the\
        \ limit is maximum 1000 IPs per call. Use total_count and offset if over 1000\
        \ IPs."
      operationId: "getIPAM_ips"
      parameters:
      - name: "offset"
        in: "query"
        description: "start with this device (e.g. limit=100&offset=50 means start\
          \ with the 50th device and return the next 100 devices)"
        required: false
        type: "string"
        x-exportParamName: "Offset"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "return this number of devices"
        required: false
        type: "string"
        x-exportParamName: "Limit"
        x-optionalDataType: "String"
      - name: "subnet_id"
        in: "query"
        description: "ID of the subnet (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "SubnetId"
        x-optionalDataType: "String"
      - name: "subnet"
        in: "query"
        description: "name of the subnet"
        required: false
        type: "string"
        x-exportParamName: "Subnet"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "mac"
        in: "query"
        description: "mac address"
        required: false
        type: "string"
        x-exportParamName: "Mac"
        x-optionalDataType: "String"
      - name: "available"
        in: "query"
        description: "could be yes or no"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Available"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        required: false
        type: "string"
        enum:
        - "static"
        - "dhcp"
        - "reserved"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "last_updated_lt"
        in: "query"
        description: "last updated less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedLt"
        x-optionalDataType: "String"
      - name: "last_updated_gt"
        in: "query"
        description: "last updated greater than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedGt"
        x-optionalDataType: "String"
      - name: "ip"
        in: "query"
        description: "ip address (added in v6.3.0)"
        required: false
        type: "string"
        x-exportParamName: "Ip"
        x-optionalDataType: "String"
      - name: "first_added_lt"
        in: "query"
        description: "first added less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "FirstAddedLt"
        x-optionalDataType: "String"
      - name: "first_added_gt"
        in: "query"
        description: "first added greater date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "FirstAddedGt"
        x-optionalDataType: "String"
      - name: "ip_id"
        in: "query"
        description: "D42 ID of the IP"
        required: false
        type: "string"
        x-exportParamName: "IpId"
        x-optionalDataType: "String"
      - name: "label"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_and"
        in: "query"
        description: "filter by all the tags, separated by comma. (This is an AND\
          \ filter and all tags have to match for filter, this was added in v6.3.1)"
        required: false
        type: "string"
        x-exportParamName: "TagsAnd"
        x-optionalDataType: "String"
      - name: "custom_fields_and"
        in: "query"
        description: "filter by custom fields, and filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsAnd"
        x-optionalDataType: "String"
      - name: "custom_fields_or"
        in: "query"
        description: "filter by custom fields, or filter, format of key1:value1,key2:value2"
        required: false
        type: "string"
        x-exportParamName: "CustomFieldsOr"
        x-optionalDataType: "String"
      - name: "total_count"
        in: "query"
        description: "Count of IPs returned (use with offset as max results are limited\
          \ to 1000)"
        required: false
        type: "string"
        x-exportParamName: "TotalCount"
        x-optionalDataType: "String"
      - name: "ips"
        in: "query"
        description: "Details for all the IPs"
        required: false
        type: "string"
        x-exportParamName: "Ips"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              ips:
                type: "array"
                items:
                  $ref: "#/definitions/IPAMips"
              limit:
                example: "4"
              offset:
                example: "0"
              total_count:
                example: "1004"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create / Update IP Addresses."
      description: "Create / Update IP Addresses"
      operationId: "postIPAM_ips"
      parameters:
      - name: "ipaddress"
        in: "formData"
        description: "If a matching IP address is found, it will update the first\
          \ matched IP address(unless you specify a vrf_group or vrf_group_id, then\
          \ it matches or adds IP to that VRF group)"
        required: true
        type: "string"
        x-exportParamName: "Ipaddress"
      - name: "label"
        in: "formData"
        description: "label for the interface (tag still works for backward compatibility)"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "subnet"
        in: "formData"
        description: "name of the subnet you want to add the IP to. Must be unique.\
          \ The reason it must be unique is to handle overlapping subnet ranges. The\
          \ unique name enable selection of the correct subnet. Ignored if vrf_group_id\
          \ or vrf_group is present in the arguments. Works only when adding a new\
          \ IP. For existing IPs, use VRF group parameters."
        required: false
        type: "string"
        x-exportParamName: "Subnet"
        x-optionalDataType: "String"
      - name: "macaddress"
        in: "formData"
        description: "MAC address – can be new or existing"
        required: false
        type: "string"
        x-exportParamName: "Macaddress"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "device name, can be new or existing"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "static"
        - "dhcp"
        - "reserved"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "vrf_group_id"
        in: "formData"
        description: "ID of the VRF group"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "vrf_group"
        in: "formData"
        description: "VRF group name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroup"
        x-optionalDataType: "String"
      - name: "available"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Available"
        x-optionalDataType: "String"
      - name: "clear_all"
        in: "formData"
        description: "If yes - then IP is marked as available and device and mac address\
          \ associations are cleared. Also notes and label fields are cleared. Added\
          \ in v5.7.2"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearAll"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "Update IP address tags (note, different than the antiquated\
          \ tag endpoint. See label parameter above)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/ips/{id}/:
    delete:
      tags:
      - "IPAM"
      summary: "Delete IP Address"
      description: "This API is used to delete an IP Address with the IP Address id\
        \ supplied as the required argument."
      operationId: "deleteIPAM_ips"
      parameters:
      - name: "id"
        in: "path"
        description: "IP Address id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/ips/subnet_id/{subnet_id}/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all IPs by Subnet ID."
      description: "Get all IPs in a Subnet"
      operationId: "getIPAM_ips_subnet_id"
      parameters:
      - name: "subnet_id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SubnetId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              ips:
                type: "array"
                items:
                  type: "object"
                  properties:
                    available:
                      example: "No"
                    device:
                      example: "USNHCTVH001"
                    ip:
                      example: "10.1.10.5"
                    label:
                      example: ""
                    type:
                      example: "Reserved"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/search/:
    get:
      tags:
      - "IPAM"
      summary: "Find a specific IP Address."
      description: "Find Specific IP Address"
      operationId: "getIPAM_search"
      parameters:
      - name: "query"
        in: "query"
        description: "enter “ip”"
        required: true
        type: "string"
        x-exportParamName: "Query"
      - name: "string"
        in: "query"
        description: "the IP address to search for"
        required: true
        type: "string"
        x-exportParamName: "String_"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              ips:
                type: "array"
                items:
                  type: "object"
                  properties:
                    available:
                      example: "No"
                    device:
                      example: "openstack-dev2"
                    ip:
                      example: "10.0.0.3"
                    label:
                      example: "br100"
                    mac_address:
                      example: "00:30:48:63:41:b6"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/suggest_subnet/{id}/:
    get:
      tags:
      - "IPAM"
      summary: "Suggest next available subnet."
      description: "Suggest next available Subnet"
      operationId: "getIPAM_suggest_subnet_Id"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the parent subnet"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "mask_bits"
        in: "query"
        description: "mask bits (added in v7.2.0)"
        required: true
        type: "string"
        x-exportParamName: "MaskBits"
      - name: "subnet"
        in: "query"
        description: "name of the subnet"
        required: false
        type: "string"
        x-exportParamName: "Subnet"
        x-optionalDataType: "String"
      - name: "subnet_id"
        in: "query"
        description: "ID of the subnet (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "SubnetId"
        x-optionalDataType: "String"
      - name: "vrf_group_id"
        in: "query"
        description: "ID of the VRF group"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "vrf_group"
        in: "query"
        description: "VRF group name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroup"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "if_parent_assigned"
        in: "query"
        description: "yes or no"
        required: false
        type: "string"
        x-exportParamName: "IfParentAssigned"
        x-optionalDataType: "String"
      - name: "if_parent_allocated"
        in: "query"
        description: "yes or no"
        required: false
        type: "string"
        x-exportParamName: "IfParentAllocated"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              ip:
                example: "10.16.0.0"
              mask:
                example: "24"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/suggest_ip/:
    get:
      tags:
      - "IPAM"
      summary: "Suggest next available IP Address. Can be IPv4 or IPv6."
      description: "Suggest next available IP Address"
      operationId: "getIPAM_suggest_ip"
      parameters:
      - name: "subnet_id"
        in: "query"
        description: "ID of the subnet (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "SubnetId"
        x-optionalDataType: "String"
      - name: "subnet"
        in: "query"
        description: "name of the subnet"
        required: false
        type: "string"
        x-exportParamName: "Subnet"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "vrf_group_id"
        in: "query"
        description: "ID of the VRF group"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "vrf_group"
        in: "query"
        description: "VRF group name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroup"
        x-optionalDataType: "String"
      - name: "reserve_ip"
        in: "query"
        description: "If value of yes is passed, the suggested IP is reserved. Return\
          \ value also adds reserved as yes or no. (added in v7.2.0)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ReserveIp"
        x-optionalDataType: "String"
      - name: "number"
        in: "query"
        description: "vlan number"
        required: false
        type: "string"
        x-exportParamName: "Number"
        x-optionalDataType: "String"
      - name: "mask_bits"
        in: "query"
        description: "mask bits (added in v7.2.0)"
        required: true
        type: "string"
        x-exportParamName: "MaskBits"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              ip:
                example: "192.168.1.4"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/macs/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all MAC Addresses."
      description: "Get all MAC Addresses"
      operationId: "getIPAM_macs"
      parameters:
      - name: "mac"
        in: "query"
        description: "mac address"
        required: false
        type: "string"
        x-exportParamName: "Mac"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "query"
        description: "Device ID"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "last_updated_lt"
        in: "query"
        description: "last updated less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedLt"
        x-optionalDataType: "String"
      - name: "last_updated_gt"
        in: "query"
        description: "last updated greater than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedGt"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              limit:
                example: "3"
              macaddresses:
                type: "array"
                items:
                  $ref: "#/definitions/IPAMmacs"
              offset:
                example: "0"
              total_count:
                example: "159"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create / Update MAC Addresses."
      description: "Create / Update MAC Addresses. Deprecated since v12.0. Please\
        \ use /switchports/ for more detailed information."
      operationId: "postIPAM_macs"
      parameters:
      - name: "macaddress"
        in: "formData"
        description: "MAC address – can be new or existing"
        required: false
        type: "string"
        x-exportParamName: "Macaddress"
        x-optionalDataType: "String"
      - name: "port_name"
        in: "formData"
        description: "Interface name. (Please note: This is NOT the switchport name.)"
        required: false
        type: "string"
        x-exportParamName: "PortName"
        x-optionalDataType: "String"
      - name: "override"
        in: "formData"
        description: "smart – will detect if the port_name passed exist or not, if\
          \ not – it is added to the current port name. Helpful, if you want to track\
          \ all the port names for that mac address (e.g. eth0 & bond0).<br>yes –\
          \ change the port name. This is default behavior even if you don’t pass\
          \ this parameter<br>no – will not change the port name"
        required: false
        type: "string"
        enum:
        - "smart"
        - "yes"
        - "no"
        x-exportParamName: "Override"
        x-optionalDataType: "String"
      - name: "vlan_id"
        in: "formData"
        description: "ID of the vlan"
        required: false
        type: "string"
        x-exportParamName: "VlanId"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "name of the device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "port_id"
        in: "formData"
        description: "Use this parameter or a combination of port and switch to specify\
          \ the port."
        required: false
        type: "string"
        x-exportParamName: "PortId"
        x-optionalDataType: "String"
      - name: "port"
        in: "formData"
        description: "Refers to the switchport name (not the interface name) - Use\
          \ with parameter switch"
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      - name: "switch"
        in: "formData"
        description: "Refers to the device name of the switch"
        required: false
        type: "string"
        x-exportParamName: "Switch_"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/macs/{id}/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves MAC address by specific MAC ID."
      description: "Get MAC Address with ID"
      operationId: "getIPAM_macs_id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              device:
                type: "object"
                properties:
                  asset_no:
                    example: ""
                  device_id:
                    example: "365"
                  device_url:
                    example: "/api/api/1.0/devices/id/365/"
                  name:
                    example: "nh-win2k3r2-vm-"
                  serial_no:
                    example: "6417-7755-9741-3863-0032-1151-91"
                  type:
                    example: "virtual"
                  uuid:
                    example: "8ED6DBA8-2FC0-DF4B-B35B-12999E9AA851"
              macaddress:
                example: "00:15:5d:0b:9e:02"
              macaddress_id:
                example: "61"
              port:
                $ref: "#/definitions/IPAMmacs_port"
              port_name:
                example: "Microsoft Virtual Machine Bus N"
              vlan_id:
                example: "14"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "IPAM"
      summary: "Delete Mac Address"
      description: "This API is used to delete the mac address with the mac address\
        \ id supplied as the required argument."
      operationId: "deleteIPAM_macs_id"
      parameters:
      - name: "id"
        in: "path"
        description: "Mac address id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/switchports:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all Switch Ports."
      description: "Get all Switch Ports"
      operationId: "getIPAM_switchports"
      parameters:
      - name: "switch_id"
        in: "query"
        description: "ID of the network device port is on"
        required: false
        type: "string"
        x-exportParamName: "SwitchId"
        x-optionalDataType: "String"
      - name: "switch2_id"
        in: "query"
        description: "ID of the 2nd network device port is on"
        required: false
        type: "string"
        x-exportParamName: "Switch2Id"
        x-optionalDataType: "String"
      - name: "last_updated_lt"
        in: "query"
        description: "last updated less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedLt"
        x-optionalDataType: "String"
      - name: "last_updated_gt"
        in: "query"
        description: "last updated greater than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "LastUpdatedGt"
        x-optionalDataType: "String"
      - name: "first_added_lt"
        in: "query"
        description: "first added less than date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "FirstAddedLt"
        x-optionalDataType: "String"
      - name: "first_added_gt"
        in: "query"
        description: "first added greater date YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "FirstAddedGt"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_and"
        in: "query"
        description: "filter by all the tags, separated by comma. (This is an AND\
          \ filter and all tags have to match for filter, this was added in v6.3.1)"
        required: false
        type: "string"
        x-exportParamName: "TagsAnd"
        x-optionalDataType: "String"
      - name: "include_cols"
        in: "query"
        description: "do not return all columns just the ones specified. For example,\
          \ ?include_cols=name, device_id, rack will only result in name, device_id,\
          \ and rack included in the output. The following column names can be part\
          \ of include_cols: name, device_id, rack, name, device_id, serial_no, asset_no,\
          \ uuid, notes, in_service, service_level, type, id, last_updated, tags,\
          \ customer_id, customer, hw_model, hw_size, manufacturer, hw_depth, rack,\
          \ start_at, rack_id, orientation, row, room, building, blade_host_name,\
          \ blade_host_id, slot_number, virtual_host_name, location, device_sub_type,\
          \ os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
          \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore,\
          \ cpuspeed, ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details,\
          \ pdu_mapping_url,modules, vms, devices, aliases, xpos, ucs_manager"
        required: false
        type: "string"
        x-exportParamName: "IncludeCols"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              limit:
                example: "3"
              offset:
                example: "0"
              switchports:
                type: "array"
                items:
                  $ref: "#/definitions/IPAMmacs_port"
              total_count:
                example: "349"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create / Update Switch Port by Port."
      description: "Create / Update Switch Ports. <b>port</b> or <b>hwaddress</b>\
        \ are required."
      operationId: "postIPAM_switchports"
      parameters:
      - name: "port"
        in: "formData"
        description: "child is optional assuming you have a parent created. Required\
          \ if no hwaddress<br>Note: Do not use a port alias for the port name."
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      - name: "hwaddress"
        in: "formData"
        description: "mac or wwn. Required if no port."
        required: false
        type: "string"
        x-exportParamName: "Hwaddress"
        x-optionalDataType: "String"
      - name: "new_port"
        in: "formData"
        description: "rename exisiting port"
        required: false
        type: "string"
        x-exportParamName: "NewPort"
        x-optionalDataType: "String"
      - name: "switch"
        in: "formData"
        description: "d42 will look for existing port and switch combination and if\
          \ it exists, will update that port."
        required: false
        type: "string"
        x-exportParamName: "Switch_"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "Must exist in device42 (add via UI)"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "vlan_id"
        in: "formData"
        description: "ID of the vlan"
        required: false
        type: "string"
        x-exportParamName: "VlanId"
        x-optionalDataType: "String"
      - name: "up"
        in: "formData"
        description: "= yes for up. = no for down."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Up"
        x-optionalDataType: "String"
      - name: "up_admin"
        in: "formData"
        description: "Whether port is administratively up or down. = yes for up. =\
          \ no for down."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "UpAdmin"
        x-optionalDataType: "String"
      - name: "count"
        in: "formData"
        description: "Whether to include the port in total count or not."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Count"
        x-optionalDataType: "String"
      - name: "remote_port_id"
        in: "formData"
        description: "ID of the remote connected switch port."
        required: false
        type: "string"
        x-exportParamName: "RemotePortId"
        x-optionalDataType: "String"
      - name: "remote_device"
        in: "formData"
        description: "Name of the switch for remote connected switch port."
        required: false
        type: "string"
        x-exportParamName: "RemoteDevice"
        x-optionalDataType: "String"
      - name: "remote_port"
        in: "formData"
        description: "Name of the port for remote connected switch port."
        required: false
        type: "string"
        x-exportParamName: "RemotePort"
        x-optionalDataType: "String"
      - name: "module"
        in: "formData"
        description: "name of the blade that port belongs to. Blade device must be\
          \ part of the switch. (added in v5.8.1)"
        required: false
        type: "string"
        x-exportParamName: "Module"
        x-optionalDataType: "String"
      - name: "device2"
        in: "formData"
        description: "name of the device2 that port belongs to. (added in v5.8.1)"
        required: false
        type: "string"
        x-exportParamName: "Device2"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "name of the direcly connected device (Added in v5.8.2) (used\
          \ to connect remote port for legacy support)"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "label"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "add or update tags to a switchport"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "remove tags from a switchport"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "mtu"
        in: "formData"
        description: "add value for mtu"
        required: false
        type: "string"
        x-exportParamName: "Mtu"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "add name of port"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "speed"
        in: "formData"
        description: "update port speed"
        required: false
        type: "string"
        x-exportParamName: "Speed"
        x-optionalDataType: "String"
      - name: "remote_port_clear"
        in: "formData"
        description: "if set to yes, will clear the remote port"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "RemotePortClear"
        x-optionalDataType: "String"
      - name: "parent_port"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ParentPort"
        x-optionalDataType: "String"
      - name: "parent_port_device"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ParentPortDevice"
        x-optionalDataType: "String"
      - name: "slave_ports"
        in: "formData"
        description: "comma separated port names"
        required: false
        type: "string"
        x-exportParamName: "SlavePorts"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/switchports/{id}/:
    delete:
      tags:
      - "IPAM"
      summary: "Delete Switchport"
      description: "This API is used to delete the switch port with the switch port\
        \ id supplied as the required argument."
      operationId: "deleteIPAM_switchports"
      parameters:
      - name: "id"
        in: "path"
        description: "Switch port id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/switch_templates/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all Switch Templates."
      description: "Get all Switch Templates"
      operationId: "getIPAM_switch_templates"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_10"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/switches/:
    post:
      tags:
      - "IPAM"
      summary: "Add Switch/Switch Ports w/ Templates."
      description: "Create or update using Switch Templates. Required parameters:\
        \ <ul><li>device <b>OR</b> device_id</li> <li>switch_template_id</li>"
      operationId: "postIPAM_switches"
      parameters:
      - name: "device"
        in: "formData"
        description: "Name of new or existing device. Existing device must be a network\
          \ switch. If stacked switches, must be of type 'cluster'"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "ID of existing device. Existing device must be a network switch.\
          \ IF stacked switches, must be of type 'cluster'"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "switch_template_id"
        in: "formData"
        description: "GET all Switch Templates"
        required: true
        type: "string"
        x-exportParamName: "SwitchTemplateId"
      - name: "devices"
        in: "formData"
        description: "comma separated names of new devices."
        required: false
        type: "string"
        x-exportParamName: "Devices"
        x-optionalDataType: "String"
      - name: "device_ids"
        in: "formData"
        description: "comma separated values of existing devices."
        required: false
        type: "string"
        x-exportParamName: "DeviceIds"
        x-optionalDataType: "String"
      - name: "assets"
        in: "formData"
        description: "comma separated names of new assets."
        required: false
        type: "string"
        x-exportParamName: "Assets"
        x-optionalDataType: "String"
      - name: "asset_ids"
        in: "formData"
        description: "comma separated values of existing assets."
        required: false
        type: "string"
        x-exportParamName: "AssetIds"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/tap_ports/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all TAP Ports."
      description: "Get Tap Ports"
      operationId: "getIPAM_tap_ports"
      parameters:
      - name: "id"
        in: "query"
        description: "id of the tap port"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              tap_ports:
                type: "array"
                items:
                  $ref: "#/definitions/IPMtap_ports"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create / Update TAP Ports"
      description: "Create / Update TAP Ports. Required parameters: <ul><li>id <b>OR</b>\
        \ name</li>"
      operationId: "postIPAM_tap_ports"
      parameters:
      - name: "id"
        in: "formData"
        description: "Tap Port ID"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "label"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "monitor_direction"
        in: "formData"
        description: "Direction - to, both (optional, only for PortCap: Monitor)"
        required: false
        type: "string"
        x-exportParamName: "MonitorDirection"
        x-optionalDataType: "String"
      - name: "monitor_port_1_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "MonitorPort1Id"
        x-optionalDataType: "String"
      - name: "monitor_port_2_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "MonitorPort2Id"
        x-optionalDataType: "String"
      - name: "morror_port"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "MorrorPort"
        x-optionalDataType: "String"
      - name: "netport_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "NetportId"
        x-optionalDataType: "String"
      - name: "patch_panel_port_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PatchPanelPortId"
        x-optionalDataType: "String"
      - name: "port_capability"
        in: "formData"
        description: "Port Capability - Device, Monitor"
        required: false
        type: "string"
        x-exportParamName: "PortCapability"
        x-optionalDataType: "String"
      - name: "port_to_from_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PortToFromId"
        x-optionalDataType: "String"
      - name: "port_type"
        in: "formData"
        description: "Port Type name - RJ45, RJ11, Fiber SC, Fiber FC"
        required: false
        type: "string"
        x-exportParamName: "PortType"
        x-optionalDataType: "String"
      - name: "port_type_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PortTypeId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/dns/records/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all DNS Records. (Added in v6.5.0)"
      description: "Get DNS Records"
      operationId: "getIPAM_dns_records"
      parameters:
      - name: "domain"
        in: "query"
        description: "name of the domain"
        required: false
        type: "string"
        x-exportParamName: "Domain"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "type of the record. e.g. AAAA"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "nameserver"
        in: "query"
        description: "Nameserver"
        required: false
        type: "string"
        x-exportParamName: "Nameserver"
        x-optionalDataType: "String"
      - name: "content"
        in: "query"
        description: "Content (e.g. IP address for type A)"
        required: false
        type: "string"
        x-exportParamName: "Content"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_and"
        in: "query"
        description: "filter by all the tags, separated by comma. (This is an AND\
          \ filter and all tags have to match for filter, this was added in v6.3.1)"
        required: false
        type: "string"
        x-exportParamName: "TagsAnd"
        x-optionalDataType: "String"
      - name: "dns_zone"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DnsZone"
        x-optionalDataType: "String"
      - name: "ttl"
        in: "query"
        description: "TTL value."
        required: false
        type: "string"
        x-exportParamName: "Ttl"
        x-optionalDataType: "String"
      - name: "change_date"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ChangeDate"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "39"
              records:
                type: "array"
                items:
                  $ref: "#/definitions/IPMdns_records"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create DNS Records."
      description: "Create / Update DNS Records"
      operationId: "postIPAM_dns_records"
      parameters:
      - name: "domain"
        in: "formData"
        description: "name of the domain"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "type"
        in: "formData"
        description: "Type of record"
        required: true
        type: "string"
        enum:
        - "SOA"
        - "NS"
        - "MX"
        - "A"
        - "AAAA"
        - "CNAME"
        - "PTR"
        - "TXT"
        - "SPF"
        - "SRV"
        - "CERT"
        - "DNSKEY"
        - "DS"
        - "KEY"
        - "NSEC"
        - "RRSIG"
        - "HINFO"
        - "LOC"
        - "NAPTR"
        - "RP"
        - "AFSDB"
        - "SSHFP"
        x-exportParamName: "Type_"
      - name: "nameserver"
        in: "formData"
        description: "If you have overlapping domain names, this is required to differentiate\
          \ between the two"
        required: false
        type: "string"
        x-exportParamName: "Nameserver"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "Record value (e.g. www) use @ for blank."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "content"
        in: "formData"
        description: "Content (e.g. IP address for type A)"
        required: false
        type: "string"
        x-exportParamName: "Content"
        x-optionalDataType: "String"
      - name: "prio"
        in: "formData"
        description: "Priority for MX record."
        required: false
        type: "string"
        x-exportParamName: "Prio"
        x-optionalDataType: "String"
      - name: "ttl"
        in: "formData"
        description: "TTL Value"
        required: false
        type: "string"
        x-exportParamName: "Ttl"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "set tags for record"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "remove tags for record"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/dns/records/{id}/:
    delete:
      tags:
      - "IPAM"
      summary: "Delete DNS Records"
      description: "This API is used to delete the DNS record with the DNS Record\
        \ id supplied as the required argument."
      operationId: "deleteIPAM_dns_records"
      parameters:
      - name: "id"
        in: "path"
        description: "DNS Record id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/dns/zones/:
    post:
      tags:
      - "IPAM"
      summary: "Create DNS Zones."
      description: "Create / Update DNS Zones"
      operationId: "postIPAM_dns_zones"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of DNS zone"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "nameserver"
        in: "formData"
        description: "IP Address/hostname of name server"
        required: true
        type: "string"
        x-exportParamName: "Nameserver"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "vrf_group"
        in: "formData"
        description: "VRF group name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroup"
        x-optionalDataType: "String"
      - name: "vrf_group_id"
        in: "formData"
        description: "ID of the VRF group"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "Tags for grouping zone entries"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "remove tags from grouping zone entries"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/dns/zones/{id}/:
    delete:
      tags:
      - "IPAM"
      summary: "Delete DNS Zones"
      description: "This API is used to delete the DNS zone with the DNS zone id supplied\
        \ as the required argument."
      operationId: "deleteIPAM_dns_zones"
      parameters:
      - name: "id"
        in: "path"
        description: "DNS zone id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/ipnat/:
    get:
      tags:
      - "IPAM"
      summary: "GET method retrieves all Switch Templates."
      description: "Get all IP NAT Records"
      operationId: "getIPAM_ipnat"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              ipnats:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      example: "1"
                    ip_address_from:
                      example: "10.1.2.1"
                    ip_address_to:
                      example: "42.42.42.42"
                    name:
                      example: "test"
                    notes:
                      example: ""
                    two_way_relation:
                      example: "False"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "IPAM"
      summary: "Create IP NAT."
      description: "Create IP NAT"
      operationId: "postIPAM_ipnat"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the NAT IP entry"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip_address_from"
        in: "formData"
        description: "The external IP address"
        required: true
        type: "string"
        x-exportParamName: "IpAddressFrom"
      - name: "ip_address_from_end"
        in: "formData"
        description: "used for mapping a range of addresses rather than a single IP"
        required: false
        type: "string"
        x-exportParamName: "IpAddressFromEnd"
        x-optionalDataType: "String"
      - name: "source_port_start"
        in: "formData"
        description: "Starting port for source IP range"
        required: false
        type: "string"
        x-exportParamName: "SourcePortStart"
        x-optionalDataType: "String"
      - name: "source_port_end"
        in: "formData"
        description: "used for mapping a range of ports rather than a single port"
        required: false
        type: "string"
        x-exportParamName: "SourcePortEnd"
        x-optionalDataType: "String"
      - name: "ip_address_to"
        in: "formData"
        description: "The internal IP address"
        required: true
        type: "string"
        x-exportParamName: "IpAddressTo"
      - name: "ip_address_to_end"
        in: "formData"
        description: "used for mapping a range of addresses rather than a single IP"
        required: false
        type: "string"
        x-exportParamName: "IpAddressToEnd"
        x-optionalDataType: "String"
      - name: "target_port_start"
        in: "formData"
        description: "Starting port for target IP range"
        required: false
        type: "string"
        x-exportParamName: "TargetPortStart"
        x-optionalDataType: "String"
      - name: "target_port_end"
        in: "formData"
        description: "used for mapping a range of ports rather than a single port"
        required: false
        type: "string"
        x-exportParamName: "TargetPortEnd"
        x-optionalDataType: "String"
      - name: "two_way_relation"
        in: "formData"
        description: "true if the internal IP addressed is masked with the external\
          \ IP address for outbound traffic in addition to inbound traffic. Default\
          \ is false."
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "TwoWayRelation"
        x-optionalDataType: "String"
      - name: "protocol"
        in: "formData"
        description: "the transport protocol, ie TCP"
        required: false
        type: "string"
        x-exportParamName: "Protocol"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "vrf_group_from"
        in: "formData"
        description: "Originating VRF Group Name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupFrom"
        x-optionalDataType: "String"
      - name: "vrf_group_id_from"
        in: "formData"
        description: "Originating VRF Group ID"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupIdFrom"
        x-optionalDataType: "String"
      - name: "vrf_group_to"
        in: "formData"
        description: "Destination VRF Group Name"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupTo"
        x-optionalDataType: "String"
      - name: "vrf_group_id_to"
        in: "formData"
        description: "Destination VRF Group ID"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupIdTo"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "IPAM"
      summary: "Update IP NAT (Added in v7.0.0)"
      description: "Update IP NAT"
      operationId: "putIPAM_ipnat"
      parameters:
      - name: "id"
        in: "formData"
        description: "ID of the NAT entry - Required if not in the URL"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "formData"
        description: "Name of the NAT IP entry"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "ip_address_from"
        in: "formData"
        description: "The external IP address"
        required: false
        type: "string"
        x-exportParamName: "IpAddressFrom"
        x-optionalDataType: "String"
      - name: "ip_address_to"
        in: "formData"
        description: "The internal IP address"
        required: false
        type: "string"
        x-exportParamName: "IpAddressTo"
        x-optionalDataType: "String"
      - name: "two_way_relation"
        in: "formData"
        description: "true if the internal IP addressed is masked with the external\
          \ IP address for outbound traffic in addition to inbound traffic. Default\
          \ is false."
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "TwoWayRelation"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/ipnat/{id}:
    delete:
      tags:
      - "IPAM"
      summary: "This API is used to delete the IP NAT."
      description: "Delete IP NAT"
      operationId: "deleteIPAM_ipnat"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of Id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/appcomps/:
    get:
      tags:
      - "Application Components"
      description: "Get Application Components"
      operationId: "getAppcomps"
      parameters:
      - name: "device_id"
        in: "query"
        description: "filter by id of device"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              appcomps:
                type: "array"
                items:
                  type: "object"
                  properties:
                    appcomp_id:
                      example: "33"
                    appcomp_url:
                      example: "/api/api/1.0/appcomps/33/"
                    name:
                      example: "Device42 Production"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Application Components"
      description: "Create / Update Application Components"
      operationId: "postAppcomps"
      parameters:
      - name: "name"
        in: "formData"
        description: "unique name for component"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "device"
        in: "formData"
        description: "device (name) that this component is dependent on"
        required: true
        type: "string"
        x-exportParamName: "Device"
      - name: "group_owner"
        in: "formData"
        description: "Name of group that is responsible for this component - must\
          \ match group name exactly."
        required: false
        type: "string"
        x-exportParamName: "GroupOwner"
        x-optionalDataType: "String"
      - name: "what"
        in: "formData"
        description: "Description of business impact due to loss of component."
        required: false
        type: "string"
        x-exportParamName: "What"
        x-optionalDataType: "String"
      - name: "depends_on"
        in: "formData"
        description: "Names of app components this component depends on, separated\
          \ by commas - must match component names exactly."
        required: false
        type: "string"
        x-exportParamName: "DependsOn"
        x-optionalDataType: "String"
      - name: "dependents"
        in: "formData"
        description: "Names of app components that depend on this component separated\
          \ by commas - must match component names exactly."
        required: false
        type: "string"
        x-exportParamName: "Dependents"
        x-optionalDataType: "String"
      - name: "groups_affected"
        in: "formData"
        description: "Names of affected groups separated by commas - must match group\
          \ names exactly."
        required: false
        type: "string"
        x-exportParamName: "GroupsAffected"
        x-optionalDataType: "String"
      - name: "device_reason"
        in: "formData"
        description: "string for the device reason on this appcomp (added in v6.6.0)"
        required: false
        type: "string"
        x-exportParamName: "DeviceReason"
        x-optionalDataType: "String"
      - name: "depends_on_reasons"
        in: "formData"
        description: "list of string pairs for dependent appcomps on this appcomp\
          \ e.g. => depend_appcomp_name1:reason1, depend_appcomp_name2:reason2, depend_appcomp_nameN:reason3\
          \ (added in v6.6.0)"
        required: false
        type: "string"
        x-exportParamName: "DependsOnReasons"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/appcomps/{appcomp_id}/:
    get:
      tags:
      - "Application Components"
      description: "Get Application Components by ID"
      operationId: "getAppcompsAppcomp_id"
      parameters:
      - name: "appcomp_id"
        in: "path"
        description: "Appcomp id"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "AppcompId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              appcomp_id:
                example: "15"
              custom_fields:
                type: "array"
                items:
                  $ref: "#/definitions/Appcomps_Custom_fields"
              dependent:
                example: "mobileapp.com - prodserver-001, retailsite.com - prodserver-031"
              depends_on:
                example: "Apache Tomcat Server"
              device:
                example: "USNHCTVMWPROD"
              group_owner:
                example: "US Infrastructure Operations"
              groups_affected:
                example: ""
              name:
                example: "VMWare Farm"
              notes:
                example: ""
              what:
                example: ""
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "Application Components"
      summary: "Delete Application Component"
      description: "This API is used to delete the application component with the\
        \ application component id supplied as the required argument."
      operationId: "deleteAppcomps"
      parameters:
      - name: "appcomp_id"
        in: "path"
        description: "IP Address id"
        required: true
        type: "integer"
        x-exportParamName: "AppcompId"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/appcomp/:
    put:
      tags:
      - "Application Components"
      summary: "API to create/update custom fields for application components."
      description: "Required parameters: <ul><li>id <b>OR</b> name</li> <li>key</li>"
      operationId: "putCustom_FieldAppcomp"
      parameters:
      - name: "id"
        in: "formData"
        description: "ID of application component"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "name of application component"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "show_on_chart"
        in: "formData"
        description: "Show the field on impact charts"
        required: false
        type: "string"
        x-exportParamName: "ShowOnChart"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/services/:
    get:
      tags:
      - "Services"
      description: "Get Services"
      operationId: "getServices"
      parameters:
      - name: "service_id"
        in: "query"
        description: "D42 ID of the service"
        required: true
        type: "string"
        x-exportParamName: "ServiceId"
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "name of the category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "query"
        description: "The cloud vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              services:
                type: "array"
                items:
                  $ref: "#/definitions/Services"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
    post:
      tags:
      - "Services"
      description: "Create / Update Services"
      operationId: "postServices"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "display_name"
        in: "query"
        description: "if not provided, the name is used as display name"
        required: true
        type: "string"
        x-exportParamName: "DisplayName"
      - name: "category"
        in: "query"
        description: "name of the category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "service_type"
        in: "query"
        description: "could be ignored or tracked. Default is tracked."
        required: false
        type: "string"
        x-exportParamName: "ServiceType"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "The cloud vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "notes"
        in: "query"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/services/{id}/:
    delete:
      tags:
      - "Services"
      summary: "This API is used to delete the service with the service id supplied\
        \ as the required argument. Note: You will only be able to delete the service\
        \ if the supplied username has the correct permissions."
      description: "Delete Service"
      operationId: "deleteServices"
      parameters:
      - name: "id"
        in: "path"
        description: "service id"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/service_details/:
    get:
      tags:
      - "Services"
      description: "Get Service details"
      operationId: "getService_details"
      parameters:
      - name: "device_id"
        in: "query"
        description: "Device ID"
        required: true
        type: "string"
        x-exportParamName: "DeviceId"
      - name: "device"
        in: "query"
        description: "Device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "service_id"
        in: "query"
        description: "filter by id of the service"
        required: false
        type: "string"
        x-exportParamName: "ServiceId"
        x-optionalDataType: "String"
      - name: "service_detail_id"
        in: "query"
        description: "filter by id of the service in use"
        required: false
        type: "string"
        x-exportParamName: "ServiceDetailId"
        x-optionalDataType: "String"
      - name: "user_id"
        in: "query"
        description: "filter by id of the user"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "543"
              service_details:
                type: "array"
                items:
                  $ref: "#/definitions/Service_details"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
    post:
      tags:
      - "Services"
      description: "Create / Update service details"
      operationId: "postService_details"
      parameters:
      - name: "service_name"
        in: "query"
        description: "The executable name of the service"
        required: true
        type: "string"
        x-exportParamName: "ServiceName"
      - name: "service_display_name"
        in: "query"
        description: "The user freindly display name of the service"
        required: true
        type: "string"
        x-exportParamName: "ServiceDisplayName"
      - name: "vendor"
        in: "formData"
        description: "The cloud vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "service_type"
        in: "query"
        description: "could be ignored or tracked. Default is tracked."
        required: false
        type: "string"
        x-exportParamName: "ServiceType"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "name of the category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "startmode"
        in: "query"
        description: "The start mode of this service - valid values are ‘Automatic’\
          , ‘Manual’, ‘Disabled’ and ‘Unknown’"
        required: false
        type: "string"
        x-exportParamName: "Startmode"
        x-optionalDataType: "String"
      - name: "state"
        in: "query"
        description: "The current running state of this service. Valid values are\
          \ ‘Running’, ‘Started’, ‘Paused’, ‘Stopped’ and ‘Unknown’"
        required: false
        type: "string"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "user"
        in: "formData"
        description: "enduser name"
        required: false
        type: "string"
        x-exportParamName: "User"
        x-optionalDataType: "String"
      - name: "appcomp"
        in: "query"
        description: "The application component that depends on this service"
        required: false
        type: "string"
        x-exportParamName: "Appcomp"
        x-optionalDataType: "String"
      - name: "install_date"
        in: "formData"
        description: "The date that the software was installed"
        required: false
        type: "string"
        x-exportParamName: "InstallDate"
        x-optionalDataType: "String"
      - name: "status"
        in: "formData"
        description: "Instance status (ie, running, stopped)"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "at_logon"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "AtLogon"
        x-optionalDataType: "String"
      - name: "at_startup"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "AtStartup"
        x-optionalDataType: "String"
      - name: "event_based"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "EventBased"
        x-optionalDataType: "String"
      - name: "idle_time"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "IdleTime"
        x-optionalDataType: "String"
      - name: "other_trigger"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "OtherTrigger"
        x-optionalDataType: "String"
      - name: "other_type"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "OtherType"
        x-optionalDataType: "String"
      - name: "minutes"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "Minutes"
        x-optionalDataType: "String"
      - name: "hours"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "Hours"
        x-optionalDataType: "String"
      - name: "days"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "Days"
        x-optionalDataType: "String"
      - name: "weeks"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "Weeks"
        x-optionalDataType: "String"
      - name: "day_of_month"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "DayOfMonth"
        x-optionalDataType: "String"
      - name: "month_of_year"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "MonthOfYear"
        x-optionalDataType: "String"
      - name: "day_of_week"
        in: "query"
        description: "only for schedule based services where startmode = ‘Scheduled’"
        required: false
        type: "string"
        x-exportParamName: "DayOfWeek"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/service_detail/{id}/:
    delete:
      tags:
      - "Services"
      summary: "This API is used to delete the service detail with the service detail\
        \ id supplied as the required argument. Note: You will only be able to delete\
        \ the service if the supplied username has the correct permissions."
      description: "Delete Service detail"
      operationId: "deleteService_details"
      parameters:
      - name: "id"
        in: "path"
        description: "service detail id"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/service_ports/:
    get:
      tags:
      - "Services"
      description: "Get Service ports"
      operationId: "getService_ports"
      parameters:
      - name: "id"
        in: "query"
        description: "filter by id of the service port"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "565"
              service_ports:
                type: "array"
                items:
                  $ref: "#/definitions/Service_ports"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
    post:
      tags:
      - "Services"
      description: "Create / Update service ports"
      operationId: "postService_ports"
      parameters:
      - name: "port"
        in: "query"
        description: "child is optional assuming you have a parent created (see examples)"
        required: true
        type: "string"
        x-exportParamName: "Port"
      - name: "device_name"
        in: "formData"
        description: "required if switchport ID not used"
        required: false
        type: "string"
        x-exportParamName: "DeviceName"
        x-optionalDataType: "String"
      - name: "listening_ip"
        in: "formData"
        description: "the name of the device"
        required: false
        type: "string"
        x-exportParamName: "ListeningIp"
        x-optionalDataType: "String"
      - name: "description"
        in: "query"
        description: "matching description (added in v7.2.0)"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "discovered_service"
        in: "query"
        description: "the name of the discovered service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredService"
        x-optionalDataType: "String"
      - name: "discovered_process"
        in: "formData"
        description: "the process name that has a handle to the port"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredProcess"
        x-optionalDataType: "String"
      - name: "mapped_service"
        in: "query"
        description: "the name of the mapped service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "MappedService"
        x-optionalDataType: "String"
      - name: "remote_ips"
        in: "formData"
        description: "the comma separated list of remote IPs that are connected to\
          \ this listening IP/port"
        required: false
        type: "string"
        x-exportParamName: "RemoteIps"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/service_ports/{id}/:
    delete:
      tags:
      - "Services"
      summary: "This API is used to delete the service port with the service port\
        \ id supplied as the required argument. Note: You will only be able to delete\
        \ the service port if the supplied username has the correct permissions."
      description: "Delete Service port"
      operationId: "deleteService_ports"
      parameters:
      - name: "id"
        in: "path"
        description: "service port id"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/listener_connection_stats/:
    get:
      tags:
      - "Services"
      description: "Get Listener Connection Statistics"
      operationId: "getListener_connection_stats"
      parameters:
      - name: "listener_device_name"
        in: "query"
        description: "Name of device with listening services"
        required: false
        type: "string"
        x-exportParamName: "ListenerDeviceName"
        x-optionalDataType: "String"
      - name: "port"
        in: "query"
        description: "child is optional assuming you have a parent created (see examples)"
        required: true
        type: "string"
        x-exportParamName: "Port"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              client_ips:
                example: "76.127.207.96"
              client_stats:
                type: "array"
                items:
                  $ref: "#/definitions/Client_stats"
              description:
                example: ""
              id:
                example: "2207"
              listener_device_id:
                example: "2440"
              listener_device_name:
                example: "prod-retail-webfrontend"
              listener_service:
                example: "sshd"
              listening_ip:
                example: "0.0.0.0"
              port:
                example: "22"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/network_shares/:
    get:
      tags:
      - "Services"
      description: "Get Network Shares"
      operationId: "getNetwork_shares"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              networkshare_details:
                type: "array"
                items:
                  $ref: "#/definitions/Networkshare_details"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/listener_connection_stats/:
    get:
      tags:
      - "Services"
      summary: "Retrieve all listener connection statistics"
      description: "Get Listener Connection Statistics"
      operationId: "getListenerConnectionStats"
      parameters:
      - name: "port"
        in: "query"
        description: "child is optional assuming you have a parent created (see examples)"
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      - name: "device_name"
        in: "query"
        description: "the name of the device"
        required: false
        type: "string"
        x-exportParamName: "DeviceName"
        x-optionalDataType: "String"
      - name: "listener_device_name"
        in: "query"
        description: "Name of device with listening services"
        required: false
        type: "string"
        x-exportParamName: "ListenerDeviceName"
        x-optionalDataType: "String"
      - name: "discovered_service"
        in: "query"
        description: "the name of the discovered service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredService"
        x-optionalDataType: "String"
      - name: "mapped_service"
        in: "query"
        description: "the name of the mapped service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "MappedService"
        x-optionalDataType: "String"
      - name: "service_instance_id"
        in: "query"
        description: "filter by id of the service instance in use"
        required: false
        type: "integer"
        x-exportParamName: "ServiceInstanceId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Listener_connection_stats"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/listener_connection_stats/{id}:
    get:
      tags:
      - "Services"
      summary: "Retrieve listener connection statistics by service port ID"
      description: "Get Listener Connection Statistics By ID"
      operationId: "getListenerConnectionStatsByID"
      parameters:
      - name: "id"
        in: "path"
        description: "service port id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Listener_connection_stats_id"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/scheduled_tasks/:
    get:
      tags:
      - "Services"
      summary: "Retreive information about all Scheduled Tasks"
      description: "Get Scheduled Tasks"
      operationId: "getScheduledTasks"
      parameters:
      - name: "id"
        in: "query"
        description: "filter results by Service schedule ID"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "device_id"
        in: "query"
        description: "device id"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "device"
        in: "query"
        description: "device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "user_id"
        in: "query"
        description: "user id"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "2"
              service_schedules:
                $ref: "#/definitions/Service_schedules"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Services"
      summary: "Create / Update Scheduled Tasks"
      description: "Post Scheduled Tasks. 3 parameters are required: <ul><li>schedule_name\
        \ <b>OR</b> service_name <b>OR</b> name</li> <li>device_id <b>OR</b> device</li>\
        \ <li>caption</li>"
      operationId: "postScheduledTasks"
      parameters:
      - name: "schedule_id"
        in: "formData"
        description: "schedule id"
        required: false
        type: "integer"
        x-exportParamName: "ScheduleId"
        x-optionalDataType: "Int32"
      - name: "service_detail_id"
        in: "formData"
        description: "filter by id of the service in use"
        required: false
        type: "integer"
        x-exportParamName: "ServiceDetailId"
        x-optionalDataType: "Int32"
      - name: "schedule_name"
        in: "formData"
        description: "schedule name"
        required: false
        type: "string"
        x-exportParamName: "ScheduleName"
        x-optionalDataType: "String"
      - name: "service_name"
        in: "formData"
        description: "The executable name of the service"
        required: false
        type: "string"
        x-exportParamName: "ServiceName"
        x-optionalDataType: "String"
      - name: "name"
        in: "formData"
        description: "name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "device"
        in: "formData"
        description: "The device that this service runs on"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "The ID of the device that this service runs on"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "caption"
        in: "formData"
        description: "caption"
        required: true
        type: "string"
        x-exportParamName: "Caption"
      - name: "user_id"
        in: "formData"
        description: "end user id"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      - name: "sched_description"
        in: "formData"
        description: "schedule description"
        required: false
        type: "string"
        x-exportParamName: "SchedDescription"
        x-optionalDataType: "String"
      - name: "arguments"
        in: "formData"
        description: "arguments"
        required: false
        type: "string"
        x-exportParamName: "Arguments"
        x-optionalDataType: "String"
      - name: "status"
        in: "formData"
        description: "status"
        required: false
        type: "string"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "install_Date"
        in: "formData"
        description: "(note capital D for schedules) only for schedule based services\
          \ where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "InstallDate"
        x-optionalDataType: "String"
      - name: "at_logon"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "AtLogon"
        x-optionalDataType: "String"
      - name: "at_startup"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "AtStartup"
        x-optionalDataType: "String"
      - name: "event_based"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "EventBased"
        x-optionalDataType: "String"
      - name: "idle_time"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "IdleTime"
        x-optionalDataType: "String"
      - name: "other_trigger"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "OtherTrigger"
        x-optionalDataType: "String"
      - name: "other_type"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "OtherType"
        x-optionalDataType: "String"
      - name: "minutes"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "Minutes"
        x-optionalDataType: "String"
      - name: "hours"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "Hours"
        x-optionalDataType: "String"
      - name: "days"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "Days"
        x-optionalDataType: "String"
      - name: "weeks"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "Weeks"
        x-optionalDataType: "String"
      - name: "day_of_month"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "DayOfMonth"
        x-optionalDataType: "String"
      - name: "month_of_year"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "MonthOfYear"
        x-optionalDataType: "String"
      - name: "day_of_week"
        in: "formData"
        description: "only for schedule based services where startmode = 'Scheduled'"
        required: false
        type: "string"
        x-exportParamName: "DayOfWeek"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/scheduled_tasks/{id}:
    get:
      tags:
      - "Services"
      summary: "Retrieve Scheduled Task by Service Schedule ID"
      description: "Get scheduled task By ID"
      operationId: "getScheduledTasksByID"
      parameters:
      - name: "id"
        in: "path"
        description: "service schedule id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Service_schedule"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "Services"
      summary: "Delete Scheduled Task by ID"
      description: "Used to delete the scheduled task with the service schedule ID\
        \ as the required argument. Note: You will only be able to delete the scheduled\
        \ task if the supplied username has the correct permissions."
      operationId: "deleteScheduledTasksByID"
      parameters:
      - name: "id"
        in: "path"
        description: "service schedule id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "2"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/services/:
    get:
      tags:
      - "Services"
      summary: "Get list of all Services"
      description: "You can filter services by following parameters in the query string"
      operationId: "getServices2"
      parameters:
      - name: "id"
        in: "query"
        description: "D42 ID of the service"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "displayname"
        in: "query"
        description: "name of the service"
        required: false
        type: "string"
        x-exportParamName: "Displayname"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "name of the category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "query"
        description: "vendor name"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              services:
                $ref: "#/definitions/Services"
              total_count:
                example: "2"
              limit:
                example: "1000"
              offset:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Services"
      summary: "Create / Update Services"
      description: "Post a Service. Required parameters: <ul> <li>name <b>OR</b> display_name</li>"
      operationId: "postServices2"
      parameters:
      - name: "name"
        in: "formData"
        description: "name for service"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "display_name"
        in: "formData"
        description: "if not provided, the name is used as display name"
        required: false
        type: "string"
        x-exportParamName: "DisplayName"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "Names of vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        description: "description of service"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "Name of category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/services/{id}:
    delete:
      tags:
      - "Services"
      summary: "Delete Services By ID"
      description: "This API is used to delete the service with the service id supplied\
        \ as the required argument. Note: You will only be able to delete the service\
        \ if the supplied username has the correct permissions. (Added in v6.3.4)"
      operationId: "deleteServicesByID"
      parameters:
      - name: "id"
        in: "path"
        description: "service id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "99"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/service_instances/:
    get:
      tags:
      - "Services"
      summary: "Get Service Instances"
      description: "You can filter service details by following parameters in the\
        \ query string"
      operationId: "getServiceInstances"
      parameters:
      - name: "device_id"
        in: "query"
        description: "filter by id of the device"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "device"
        in: "query"
        description: "filter by name of the device"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "service_id"
        in: "query"
        description: "filter by id of the service"
        required: false
        type: "integer"
        x-exportParamName: "ServiceId"
        x-optionalDataType: "Int32"
      - name: "service_detail_id"
        in: "query"
        description: "filter by id of the service in use"
        required: false
        type: "integer"
        x-exportParamName: "ServiceDetailId"
        x-optionalDataType: "Int32"
      - name: "user_id"
        in: "query"
        description: "filter by id of the user"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              service_details:
                $ref: "#/definitions/Service_instances"
              offset:
                example: "0"
              limit:
                example: "1000"
              total_count:
                example: "2"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Services"
      summary: "Create / Update service instances"
      description: "Post Service Instances. Required parameters are either: <ul><li>service_name\
        \ <b>OR</b> service_display_name <b>OR</b> service_id</li> <li> device <b>OR</b>\
        \ device_id</li><p>------ OR ------<li>service_detail_id</li></ul>"
      operationId: "postServiceInstances"
      parameters:
      - name: "service_detail_id"
        in: "formData"
        description: "service detail id"
        required: false
        type: "integer"
        x-exportParamName: "ServiceDetailId"
        x-optionalDataType: "Int32"
      - name: "device"
        in: "formData"
        description: "The device that this service runs on"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "id of the device"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "listening_ip"
        in: "formData"
        description: "the local IP address that listening on this port"
        required: false
        type: "string"
        x-exportParamName: "ListeningIp"
        x-optionalDataType: "String"
      - name: "port"
        in: "formData"
        description: "the listening port on this device"
        required: false
        type: "integer"
        x-exportParamName: "Port"
        x-optionalDataType: "Int32"
      - name: "loadbalancer"
        in: "formData"
        description: "loadbalancer"
        required: false
        type: "string"
        x-exportParamName: "Loadbalancer"
        x-optionalDataType: "String"
      - name: "service_name"
        in: "formData"
        description: "The executable name of the service"
        required: false
        type: "string"
        x-exportParamName: "ServiceName"
        x-optionalDataType: "String"
      - name: "service_display_name"
        in: "formData"
        description: "The user freindly display name of the service"
        required: false
        type: "string"
        x-exportParamName: "ServiceDisplayName"
        x-optionalDataType: "String"
      - name: "service_id"
        in: "formData"
        description: "service id"
        required: false
        type: "integer"
        x-exportParamName: "ServiceId"
        x-optionalDataType: "Int32"
      - name: "user_id"
        in: "formData"
        description: "id of the user"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      - name: "remove_appcomp_ids"
        in: "formData"
        description: "comma separated list of application components IDs to remove"
        required: false
        type: "integer"
        x-exportParamName: "RemoveAppcompIds"
        x-optionalDataType: "Int32"
      - name: "clear_appcomps"
        in: "formData"
        description: "Set to 'yes' to clear associated application components"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearAppcomps"
        x-optionalDataType: "String"
      - name: "appcomps"
        in: "formData"
        description: "comma separated list of application components to associated\
          \ with service instance"
        required: false
        type: "string"
        x-exportParamName: "Appcomps"
        x-optionalDataType: "String"
      - name: "service_path"
        in: "formData"
        description: "service path"
        required: false
        type: "string"
        x-exportParamName: "ServicePath"
        x-optionalDataType: "String"
      - name: "install_date"
        in: "formData"
        description: "install date"
        required: false
        type: "string"
        x-exportParamName: "InstallDate"
        x-optionalDataType: "String"
      - name: "state"
        in: "formData"
        description: "The current running state of this service. Valid values are\
          \ 'Running', 'Started', 'Paused', 'Stopped' and 'Unknown'"
        required: false
        type: "string"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "ignore_client_connections"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IgnoreClientConnections"
        x-optionalDataType: "String"
      - name: "startmode"
        in: "formData"
        description: "The start mode of this service - valid values are 'Automatic',\
          \ 'Manual', 'Disabled' and 'Unknown'"
        required: false
        type: "string"
        x-exportParamName: "Startmode"
        x-optionalDataType: "String"
      - name: "pinned"
        in: "formData"
        description: "pinned"
        required: false
        type: "string"
        x-exportParamName: "Pinned"
        x-optionalDataType: "String"
      - name: "topology_status"
        in: "formData"
        description: "topology status"
        required: false
        type: "string"
        x-exportParamName: "TopologyStatus"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/service_instances/{id}:
    get:
      tags:
      - "Services"
      summary: "Retrieve Service Instance information by Service Instance ID"
      description: "Get Service Instances By ID"
      operationId: "getServiceInstancesByID"
      parameters:
      - name: "id"
        in: "path"
        description: "service instance id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Service_instance"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    delete:
      tags:
      - "Services"
      summary: "Delete Service Instances By ID"
      description: "This API is used to delete the service detail with the service\
        \ detail id supplied as the required argument. Note - You will only be able\
        \ to delete the service if the supplied username has the correct permissions."
      operationId: "deleteServiceInstancesByID"
      parameters:
      - name: "id"
        in: "path"
        description: "service id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/service_listener_ports/:
    get:
      tags:
      - "Services"
      summary: "Get Service Listener Ports"
      description: "You can filter service ports by following parameters in the query\
        \ string"
      operationId: "getServiceListenerPorts"
      parameters:
      - name: "port"
        in: "query"
        description: "port"
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      - name: "device_name"
        in: "query"
        description: "the name of the device"
        required: false
        type: "string"
        x-exportParamName: "DeviceName"
        x-optionalDataType: "String"
      - name: "listener_device_name"
        in: "query"
        description: "Name of device with listening services"
        required: false
        type: "string"
        x-exportParamName: "ListenerDeviceName"
        x-optionalDataType: "String"
      - name: "discovered_service"
        in: "query"
        description: "the name of the discovered service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredService"
        x-optionalDataType: "String"
      - name: "mapped_service"
        in: "query"
        description: "the name of the mapped service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "MappedService"
        x-optionalDataType: "String"
      - name: "service_instance_id"
        in: "query"
        description: "filter by id of the service instance in use"
        required: false
        type: "integer"
        x-exportParamName: "ServiceInstanceId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Service_listener_ports"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Services"
      summary: "Create / Update service ports"
      description: "Post Service Listener Ports. Required parameters: <ul> <li>id</li></ul>\
        \ <b>---------- OR ----------</b> <ul> <li>port</li> <li>device_name <b>OR</b>\
        \ device_id</li> <li>listening_ip <b>OR</b> remote_ips</li> </ul>"
      operationId: "postServiceListenerPorts"
      parameters:
      - name: "id"
        in: "formData"
        description: "service port id"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "port"
        in: "formData"
        description: "the listening port on this device"
        required: false
        type: "integer"
        x-exportParamName: "Port"
        x-optionalDataType: "Int32"
      - name: "device_name"
        in: "formData"
        description: "the name of the device"
        required: false
        type: "string"
        x-exportParamName: "DeviceName"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "device id"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "listening_ip"
        in: "formData"
        description: "the name of the device"
        required: false
        type: "string"
        x-exportParamName: "ListeningIp"
        x-optionalDataType: "String"
      - name: "remote_ips"
        in: "formData"
        description: "the comma separated list of remote IPs that are connected to\
          \ this listening IP/port"
        required: false
        type: "string"
        x-exportParamName: "RemoteIps"
        x-optionalDataType: "String"
      - name: "discovered_service_id"
        in: "formData"
        description: "device service id"
        required: false
        type: "integer"
        x-exportParamName: "DiscoveredServiceId"
        x-optionalDataType: "Int32"
      - name: "discovered_service"
        in: "formData"
        description: "the name of the discovered service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredService"
        x-optionalDataType: "String"
      - name: "discovered_service_display_name"
        in: "formData"
        description: "discovered service display name"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredServiceDisplayName"
        x-optionalDataType: "String"
      - name: "discovered_process"
        in: "formData"
        description: "the process name that has a handle to the port"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredProcess"
        x-optionalDataType: "String"
      - name: "discovered_process_display_name"
        in: "formData"
        description: "discovered process display name"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredProcessDisplayName"
        x-optionalDataType: "String"
      - name: "mapped_service"
        in: "formData"
        description: "the name of the mapped service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "MappedService"
        x-optionalDataType: "String"
      - name: "mapped_service_display_name"
        in: "formData"
        description: "mapped service display name"
        required: false
        type: "string"
        x-exportParamName: "MappedServiceDisplayName"
        x-optionalDataType: "String"
      - name: "protocol"
        in: "formData"
        description: "the transport protocol, ie TCP"
        required: false
        type: "string"
        x-exportParamName: "Protocol"
        x-optionalDataType: "String"
      - name: "remote_port_time"
        in: "formData"
        description: "remote port time"
        required: false
        type: "string"
        x-exportParamName: "RemotePortTime"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/service_listener_ports/{id}/:
    get:
      tags:
      - "Services"
      summary: "Retrieve Service Listener port information by Service Port ID"
      description: "Get Service Listener Ports By ID"
      operationId: "getServiceListenerPortsByID"
      parameters:
      - name: "id"
        in: "path"
        description: "service port id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Service_listener_port"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Services"
      summary: "Create / Update service ports"
      description: "Currently, in order to update a service port, id (path), device_name/device_id,\
        \ and listening_ip/remote_ips are needed even if they are staying the same\
        \ - we use those fields to identify the port."
      operationId: "putServiceListenerPorts"
      parameters:
      - name: "id"
        in: "path"
        description: "service port id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "port"
        in: "formData"
        description: "the listening port on this device"
        required: false
        type: "integer"
        x-exportParamName: "Port"
        x-optionalDataType: "Int32"
      - name: "device_name"
        in: "formData"
        description: "the name of the device"
        required: false
        type: "string"
        x-exportParamName: "DeviceName"
        x-optionalDataType: "String"
      - name: "device_id"
        in: "formData"
        description: "device id"
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "listening_ip"
        in: "formData"
        description: "the name of the device"
        required: false
        type: "string"
        x-exportParamName: "ListeningIp"
        x-optionalDataType: "String"
      - name: "remote_ips"
        in: "formData"
        description: "the comma separated list of remote IPs that are connected to\
          \ this listening IP/port"
        required: false
        type: "string"
        x-exportParamName: "RemoteIps"
        x-optionalDataType: "String"
      - name: "discovered_service_id"
        in: "formData"
        description: "device service id"
        required: false
        type: "integer"
        x-exportParamName: "DiscoveredServiceId"
        x-optionalDataType: "Int32"
      - name: "discovered_service"
        in: "formData"
        description: "the name of the discovered service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredService"
        x-optionalDataType: "String"
      - name: "discovered_service_display_name"
        in: "formData"
        description: "discovered service display name"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredServiceDisplayName"
        x-optionalDataType: "String"
      - name: "discovered_process"
        in: "formData"
        description: "the process name that has a handle to the port"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredProcess"
        x-optionalDataType: "String"
      - name: "discovered_process_display_name"
        in: "formData"
        description: "discovered process display name"
        required: false
        type: "string"
        x-exportParamName: "DiscoveredProcessDisplayName"
        x-optionalDataType: "String"
      - name: "mapped_service"
        in: "formData"
        description: "the name of the mapped service listening on this IP/port"
        required: false
        type: "string"
        x-exportParamName: "MappedService"
        x-optionalDataType: "String"
      - name: "mapped_service_display_name"
        in: "formData"
        description: "mapped service display name"
        required: false
        type: "string"
        x-exportParamName: "MappedServiceDisplayName"
        x-optionalDataType: "String"
      - name: "protocol"
        in: "formData"
        description: "the transport protocol, ie TCP"
        required: false
        type: "string"
        x-exportParamName: "Protocol"
        x-optionalDataType: "String"
      - name: "remote_port_time"
        in: "formData"
        description: "remote port time"
        required: false
        type: "string"
        x-exportParamName: "RemotePortTime"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/service_client_connections/{id}:
    get:
      tags:
      - "Services"
      summary: "Get Service Client Connection information by Service Detail ID"
      description: "Get Service Client Connections"
      operationId: "getServiceClientConnections"
      parameters:
      - name: "id"
        in: "path"
        description: "service id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Service_client_connections"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/ignored_service/:
    get:
      tags:
      - "Services"
      summary: "Get Ignored Service"
      description: "Retrieve list of Ignored Services; filter ignored service details\
        \ by following parameters in query string"
      operationId: "getIgnoredService"
      parameters:
      - name: "ignored_id"
        in: "query"
        description: "service id"
        required: false
        type: "integer"
        x-exportParamName: "IgnoredId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "4"
              offset:
                example: "0"
              limit:
                example: "1000"
              ignored_services:
                type: "array"
                items:
                  type: "object"
                  example:
                  - ignored_level: 1
                    active: true
                    ignored_text: "AeLookupSvc"
                    id: 1
                  - ignored_level: 2
                    active: true
                    ignored_text: "AeLookupSvc"
                    id: 2
                  - ignored_level: 1
                    active: true
                    ignored_text: "AJRouter"
                    id: 3
                  - ignored_level: 2
                    active: true
                    ignored_text: "AJRouter"
                    id: 4
                  properties:
                    ignored_level:
                      type: "integer"
                    active:
                      type: "boolean"
                    ignored_text:
                      type: "string"
                    id:
                      type: "integer"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Services"
      summary: "Create / Update Ignored Service"
      description: "Post Ignored Service"
      operationId: "postIgnoredService"
      parameters:
      - name: "ignored_level"
        in: "formData"
        description: "ignored level - 1 for Service Name, 2 for Service Instance Args"
        required: true
        type: "integer"
        x-exportParamName: "IgnoredLevel"
      - name: "ignored_text"
        in: "formData"
        description: "ignored text"
        required: true
        type: "string"
        x-exportParamName: "IgnoredText"
      - name: "active"
        in: "formData"
        description: "active flag"
        required: true
        type: "boolean"
        x-exportParamName: "Active"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/2.0/ignored_service/{id}/:
    delete:
      tags:
      - "Services"
      summary: "Delete Ignored Service By ID"
      description: "This API is used to delete the ignored service with the ignored\
        \ service id supplied as the required argument. Note: You will only be able\
        \ to delete the service if the supplied username has the correct permissions."
      operationId: "deleteIgnoredServiceByID"
      parameters:
      - name: "id"
        in: "path"
        description: "service id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/software_details/:
    get:
      tags:
      - "Software"
      description: "Get Software details"
      operationId: "getSoftware_details"
      parameters:
      - name: "device_id"
        in: "query"
        description: "filter by id of device"
        required: false
        type: "string"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "software_id"
        in: "query"
        description: "filter by id of the software"
        required: false
        type: "string"
        x-exportParamName: "SoftwareId"
        x-optionalDataType: "String"
      - name: "software_detail_id"
        in: "query"
        description: "filter by id of the software"
        required: false
        type: "string"
        x-exportParamName: "SoftwareDetailId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              limit:
                example: "3"
              offset:
                example: "0"
              software_details:
                type: "array"
                items:
                  $ref: "#/definitions/Get_Software_details"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Software"
      description: "Create / Update software details"
      operationId: "postUpdateService_ports"
      parameters:
      - name: "software"
        in: "formData"
        description: "the name of the software"
        required: true
        type: "string"
        x-exportParamName: "Software"
      - name: "device"
        in: "formData"
        description: "The name of the device where this software is installed"
        required: true
        type: "string"
        x-exportParamName: "Device"
      - name: "version"
        in: "formData"
        description: "The version number of the software"
        required: false
        type: "string"
        x-exportParamName: "Version"
        x-optionalDataType: "String"
      - name: "user"
        in: "formData"
        description: "The user assigned to this software"
        required: false
        type: "string"
        x-exportParamName: "User"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "The vendor that created the server, linked to Organization"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "install_date"
        in: "formData"
        description: "The date that the software was installed"
        required: false
        type: "string"
        x-exportParamName: "InstallDate"
        x-optionalDataType: "String"
      - name: "count_in_licensing"
        in: "formData"
        description: "Whether or not to count OS in licensing"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "CountInLicensing"
        x-optionalDataType: "String"
      - name: "license_key"
        in: "formData"
        description: "OS license key"
        required: false
        type: "string"
        x-exportParamName: "LicenseKey"
        x-optionalDataType: "String"
      - name: "license_key_count"
        in: "formData"
        description: "The number of licenses this software key supports"
        required: false
        type: "string"
        x-exportParamName: "LicenseKeyCount"
        x-optionalDataType: "String"
      - name: "license_use_count"
        in: "formData"
        description: "the number of licenses that are in use for this software instance"
        required: false
        type: "string"
        x-exportParamName: "LicenseUseCount"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/software_details/{id}/:
    delete:
      tags:
      - "Software"
      summary: "Delete Software detail"
      description: "This API is used to delete the software detail with the software\
        \ detail id supplied as the required argument. Note: You will only be able\
        \ to delete the software if the supplied username has the correct permissions."
      operationId: "deleteSoftware_detail"
      parameters:
      - name: "id"
        in: "path"
        description: "software detail id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/software/:
    get:
      tags:
      - "Software"
      summary: "Get Software Component details"
      description: "You can filter software details by following parameters in the\
        \ query string"
      operationId: "getSoftware_Component_details"
      parameters:
      - name: "name"
        in: "query"
        description: "filter by name (Added in v6.0.0)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "name of the category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "query"
        description: "Software vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "licensing_model"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LicensingModel"
        x-optionalDataType: "String"
      - name: "software_type"
        in: "query"
        description: "Filter by software type (managed, unmanaged, prohibited or ignored)"
        required: false
        type: "string"
        x-exportParamName: "SoftwareType"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "filter by tags. comma separated for multiple tags (This is an\
          \ OR filter, gets all the devices for all comma separated tags)"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_and"
        in: "query"
        description: "filter by all the tags, separated by comma. (This is an AND\
          \ filter and all tags have to match for filter, this was added in v6.3.1)"
        required: false
        type: "string"
        x-exportParamName: "TagsAnd"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "2016"
              software:
                type: "array"
                items:
                  $ref: "#/definitions/Get_Software_Component_details"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Software"
      summary: "Create or update software component."
      description: "Create / Update Software Components. Required parameters: <ul><li>name\
        \ <b>OR</b> id</li> <li>licensing_model</li> <li>software_type</li>"
      operationId: "postUpdateSoftware_Components"
      parameters:
      - name: "name"
        in: "formData"
        description: "The name of the software (new or existing)"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "id"
        in: "formData"
        description: "The ID of the software, required if not using NAME"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "Filter by user-defined software categories (new or existing)"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "Software Vendor (new or existing)"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "licensing_model"
        in: "formData"
        description: "Custom models can be made via UI. Existing values include: Free,\
          \ Trial, Individual - User/Perpetual, Individual - User/Subscription, Named\
          \ User / Perpetual, Volume - User/Perpetual, Concurrent - User/Perpetual,\
          \ Individual - Device/Perpetual, Individual - Device/Subscription, Node\
          \ Locked / Perpetual, Volume - Device/Perpetual, OEM, CAL / Per Seat Device,\
          \ CAL / Per Seat User, CAL / Per Server, CAL / Per Processor, CAL / Per\
          \ Mailbox"
        required: true
        type: "string"
        default: "Individual - Device/Perpetual"
        x-exportParamName: "LicensingModel"
      - name: "software_type"
        in: "formData"
        description: "Default software type is Managed."
        required: true
        type: "string"
        default: "Managed"
        enum:
        - "Managed"
        - "Unmanaged"
        - "Prohibited"
        - "Ignored"
        x-exportParamName: "SoftwareType"
      - name: "tags"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "remove tags from component"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "track_licensed_count_by_keys"
        in: "formData"
        description: "whether or not to track software by discovered count"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "TrackLicensedCountByKeys"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "aliases"
        in: "formData"
        description: "any software aliases"
        required: false
        type: "string"
        x-exportParamName: "Aliases"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/software/{id}/:
    delete:
      tags:
      - "Software"
      summary: "Delete Software Component"
      description: "This API is used to delete the software detail with the software\
        \ detail id supplied as the required argument. Note: You will only be able\
        \ to delete the software if the supplied username has the correct permissions."
      operationId: "deleteSoftware_Component"
      parameters:
      - name: "id"
        in: "path"
        description: "software detail id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/software/license_keys/:
    get:
      tags:
      - "Software"
      summary: "Get Software License Keys"
      description: "You can filter software license keys by following parameters in\
        \ the query string"
      operationId: "getSoftware_License_Keys"
      parameters:
      - name: "software_id"
        in: "query"
        description: "filter by id of the software"
        required: false
        type: "string"
        x-exportParamName: "SoftwareId"
        x-optionalDataType: "String"
      - name: "software_name"
        in: "query"
        description: "filter by name of the software component"
        required: false
        type: "string"
        x-exportParamName: "SoftwareName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              software_license_keys:
                type: "array"
                items:
                  $ref: "#/definitions/Get_Software_License_Keys"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Software"
      description: "Create / Update Software Licenses. Required parameters: <ul><li>id\
        \ <b>OR</b> software_id <b>OR</b> software_name</li>"
      operationId: "postUpdateSoftware_Licenses"
      parameters:
      - name: "id"
        in: "formData"
        description: "The ID of the software_license_key object (use if updating)"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "software_id"
        in: "formData"
        description: "The id of the software component"
        required: false
        type: "string"
        x-exportParamName: "SoftwareId"
        x-optionalDataType: "String"
      - name: "software_name"
        in: "formData"
        description: "software component name"
        required: false
        type: "string"
        x-exportParamName: "SoftwareName"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "software license key"
        required: false
        type: "string"
        x-exportParamName: "Key"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/software/license_keys/{id}/:
    delete:
      tags:
      - "Software"
      summary: "Delete Software License Keys"
      description: "This API is used to delete the software license key with the software\
        \ license key id supplied as the required argument. Note: You will only be\
        \ able to delete the software key if the supplied username has the correct\
        \ permissions."
      operationId: "deleteSoftware_License_Keys"
      parameters:
      - name: "id"
        in: "path"
        description: "software detail id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/certificates/:
    get:
      tags:
      - "Certificates"
      summary: "Get certificates"
      description: "This API is used to return the certificates you have added or\
        \ discovered in Device42."
      operationId: "get_certificates"
      parameters:
      - name: "certificate_id"
        in: "query"
        description: "ID of the certificate"
        required: false
        type: "string"
        x-exportParamName: "CertificateId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              total_count:
                example: "1"
              certificate_details:
                type: "array"
                items:
                  $ref: "#/definitions/Get_certificates"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Certificates"
      summary: "Create/Update certificates"
      description: "This API is used to update or add new certificates in bulk. Note:\
        \ If you enter the DNS for the certificate, that is the only required field.\
        \ Otherwise issued_to, valid_from, valid_to, and subject are required."
      operationId: "postUpdate_certificates"
      parameters:
      - name: "dns"
        in: "formData"
        description: "dns address of the site certificate is issued for. If entered,\
          \ is the only required field"
        required: false
        type: "string"
        x-exportParamName: "Dns"
        x-optionalDataType: "String"
      - name: "issued_to"
        in: "formData"
        description: "Entity certificate is issued to, required if no dns value"
        required: false
        type: "string"
        x-exportParamName: "IssuedTo"
        x-optionalDataType: "String"
      - name: "issued_by"
        in: "formData"
        description: "The entity issuing the certificate"
        required: false
        type: "string"
        x-exportParamName: "IssuedBy"
        x-optionalDataType: "String"
      - name: "valid_from"
        in: "formData"
        description: "The start date of the certificate, required if no dns value.\
          \ YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "ValidFrom"
        x-optionalDataType: "String"
      - name: "valid_to"
        in: "formData"
        description: "The expiration date of the certificate, required if no dns value.\
          \ YYYY-MM-DD format"
        required: false
        type: "string"
        x-exportParamName: "ValidTo"
        x-optionalDataType: "String"
      - name: "subject"
        in: "formData"
        description: "The person, or entity identified. Required if no dns value"
        required: false
        type: "string"
        x-exportParamName: "Subject"
        x-optionalDataType: "String"
      - name: "version"
        in: "formData"
        description: "The version of the encoded certificate"
        required: false
        type: "string"
        x-exportParamName: "Version"
        x-optionalDataType: "String"
      - name: "serial_number"
        in: "formData"
        description: "Used to uniquely identify the certificate"
        required: false
        type: "string"
        x-exportParamName: "SerialNumber"
        x-optionalDataType: "String"
      - name: "signature_algorithm"
        in: "formData"
        description: "The algorithm used to create the signature."
        required: false
        type: "string"
        x-exportParamName: "SignatureAlgorithm"
        x-optionalDataType: "String"
      - name: "signature_hash"
        in: "formData"
        description: "The actual signature to verify that it came from the issuer"
        required: false
        type: "string"
        x-exportParamName: "SignatureHash"
        x-optionalDataType: "String"
      - name: "digital_signature_usage"
        in: "formData"
        description: "True when the subject public key is used for verifying digital\
          \ signatures"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DigitalSignatureUsage"
        x-optionalDataType: "String"
      - name: "content_commitment_usage"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ContentCommitmentUsage"
        x-optionalDataType: "String"
      - name: "key_encipherment_usage"
        in: "formData"
        description: "True when the subject public key is used for enciphering private\
          \ or secret keys"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "KeyEnciphermentUsage"
        x-optionalDataType: "String"
      - name: "data_encipherment_usage"
        in: "formData"
        description: "True when the subject public key is used for directly enciphering\
          \ raw user data without the use of an intermediate symmetric cipher."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DataEnciphermentUsage"
        x-optionalDataType: "String"
      - name: "key_agreement_usage"
        in: "formData"
        description: "True when the subject public key is used for key agreement."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "KeyAgreementUsage"
        x-optionalDataType: "String"
      - name: "key_cert_sign_usage"
        in: "formData"
        description: "True when the subject public key is used for verifying signatures\
          \ on public key certificates."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "KeyCertSignUsage"
        x-optionalDataType: "String"
      - name: "crl_sign_usage"
        in: "formData"
        description: "True when the subject public key is used for verifying signatures\
          \ on certificate revocation lists."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "CrlSignUsage"
        x-optionalDataType: "String"
      - name: "encipher_only_usage"
        in: "formData"
        description: "When the encipherOnly bit is asserted and the keyAgreement bit\
          \ is also set, the subject public key may be used only for enciphering data\
          \ while performing key agreement."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "EncipherOnlyUsage"
        x-optionalDataType: "String"
      - name: "decipher_only_usage"
        in: "formData"
        description: "When the decipherOnly bit is asserted and the keyAgreement bit\
          \ is also set, the subject public key may be used only for deciphering data\
          \ while performing key agreement."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DecipherOnlyUsage"
        x-optionalDataType: "String"
      - name: "extended_key_usage"
        in: "formData"
        description: "Indicates the purpose of the public key contained in the certificate.\
          \ It contains a list of OIDs, each of which indicates an allowed use."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ExtendedKeyUsage"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "The name of the vendor that provided this certificate"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "end_point_type"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "EndPointType"
        x-optionalDataType: "String"
      - name: "end_point_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "EndPointId"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "Use only if Multitenancy is on. List of groups separated by\
          \ commas. Each group has name followed by colon followed by yes or no for\
          \ change_permission, eg. CorpUS:yes, CorpNY:no."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/passwords/:
    get:
      tags:
      - "Passwords"
      summary: "Retrieve accounts (usernames) and passwords."
      description: "Get Usernames and Passwords"
      operationId: "getPassword"
      parameters:
      - name: "category"
        in: "query"
        description: "name of the category"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "label"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "username"
        in: "query"
        description: "Retrieve all the passwords for a specified username. ?username="
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "device"
        in: "query"
        description: "Device name"
        required: false
        type: "string"
        x-exportParamName: "Device"
        x-optionalDataType: "String"
      - name: "appcomp"
        in: "query"
        description: "The application component that depends on this service"
        required: false
        type: "string"
        x-exportParamName: "Appcomp"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        description: "The ID of the software, required if not using NAME"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "plain_text"
        in: "query"
        description: "Decrypt the password and return the plain text version. ?plain_text=yes\
          \ will decrypt and display the password."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "PlainText"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              Passwords:
                type: "array"
                items:
                  type: "object"
                  properties:
                    username:
                      example: "sharepointadmin"
                    last_pw_change:
                      example: "2013-11-05T19:29:35Z"
                    notes:
                      example: ""
                    label:
                      example: "sharepoint admin account"
                    first_added:
                      example: "2013-11-05T19:07:05.534Z"
                    password:
                      example: "L8tirgcd&Loh"
                    id:
                      example: "5"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Passwords"
      description: "Create / Update Passwords. Use id if updating existing password\
        \ - else, username and password are required."
      operationId: "post_Update_Passwords"
      parameters:
      - name: "id"
        in: "formData"
        description: "Required to modify existing password"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "username"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "password"
        in: "formData"
        description: "The password."
        required: false
        type: "string"
        x-exportParamName: "Password"
        x-optionalDataType: "String"
      - name: "label"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "A password category. If it doesn't exist a new one will be created."
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "devices"
        in: "formData"
        description: "A comma separated list of device names."
        required: false
        type: "string"
        x-exportParamName: "Devices"
        x-optionalDataType: "String"
      - name: "appcomps"
        in: "formData"
        description: "A comma separated list of application component names."
        required: false
        type: "string"
        x-exportParamName: "Appcomps"
        x-optionalDataType: "String"
      - name: "days_before_expiry"
        in: "formData"
        description: "number of days before password is set as expired"
        required: false
        type: "string"
        x-exportParamName: "DaysBeforeExpiry"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "view_users"
        in: "formData"
        description: "A comma separated list of users that have permission to view\
          \ this password."
        required: false
        type: "string"
        x-exportParamName: "ViewUsers"
        x-optionalDataType: "String"
      - name: "view_groups"
        in: "formData"
        description: "A comma separated list of user groups that have permission to\
          \ view this password."
        required: false
        type: "string"
        x-exportParamName: "ViewGroups"
        x-optionalDataType: "String"
      - name: "view_edit_users"
        in: "formData"
        description: "A comma separated list of users that have permission to view\
          \ and edit this password."
        required: false
        type: "string"
        x-exportParamName: "ViewEditUsers"
        x-optionalDataType: "String"
      - name: "view_users_remove"
        in: "formData"
        description: "A comma separated list of users to remove view permissions."
        required: false
        type: "string"
        x-exportParamName: "ViewUsersRemove"
        x-optionalDataType: "String"
      - name: "use_only_users_remove"
        in: "formData"
        description: "A comma separated list of users to remove use only permissions."
        required: false
        type: "string"
        x-exportParamName: "UseOnlyUsersRemove"
        x-optionalDataType: "String"
      - name: "view_edit_users_remove"
        in: "formData"
        description: "A comma separated list of users to remove view and edit permissions."
        required: false
        type: "string"
        x-exportParamName: "ViewEditUsersRemove"
        x-optionalDataType: "String"
      - name: "view_groups_remove"
        in: "formData"
        description: "A comma separated list of user groups to remove use permissions."
        required: false
        type: "string"
        x-exportParamName: "ViewGroupsRemove"
        x-optionalDataType: "String"
      - name: "use_only_groups_remove"
        in: "formData"
        description: "A comma separated list of user groups to remove use permissions."
        required: false
        type: "string"
        x-exportParamName: "UseOnlyGroupsRemove"
        x-optionalDataType: "String"
      - name: "view_edit_groups_remove"
        in: "formData"
        description: "A comma separated list of user groups to remove view and edit\
          \ permissions."
        required: false
        type: "string"
        x-exportParamName: "ViewEditGroupsRemove"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Password added with username adminmh (and label alabel)"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/passwords/{id}/:
    delete:
      tags:
      - "Passwords"
      summary: "Delete Password"
      description: "This API is used to delete the password with the password id supplied\
        \ as the required argument. Note: You will only be able to delete the password\
        \ if the supplied username has the correct permissions."
      operationId: "delete_Password"
      parameters:
      - name: "id"
        in: "path"
        description: "password id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/password/:
    post:
      tags:
      - "Passwords"
      description: "Custom Fields"
      operationId: "post_Custom_Fields"
      parameters:
      - name: "username"
        in: "formData"
        description: "Name of the password"
        required: true
        type: "string"
        x-exportParamName: "Username"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/customers/:
    get:
      tags:
      - "Customers"
      summary: "Get all Customers"
      description: "Get all Customers"
      operationId: "getCustomers"
      parameters:
      - name: "include_cols"
        in: "query"
        description: "do not return all columns just the ones specified. For example,\
          \ ?include_cols=name, device_id, rack will only result in name, device_id,\
          \ and rack included in the output. The following column names can be part\
          \ of include_cols: name, device_id, rack, name, device_id, serial_no, asset_no,\
          \ uuid, notes, in_service, service_level, type, id, last_updated, tags,\
          \ customer_id, customer, hw_model, hw_size, manufacturer, hw_depth, rack,\
          \ start_at, rack_id, orientation, row, room, building, blade_host_name,\
          \ blade_host_id, slot_number, virtual_host_name, location, device_sub_type,\
          \ os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
          \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore,\
          \ cpuspeed, ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details,\
          \ pdu_mapping_url,modules, vms, devices, aliases, xpos, ucs_manager"
        required: false
        type: "string"
        x-exportParamName: "IncludeCols"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              Customers:
                type: "array"
                items:
                  $ref: "#/definitions/Customers"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Customers"
      description: "Create / Update Customers."
      operationId: "postCustomers"
      parameters:
      - name: "name"
        in: "formData"
        description: "Customer name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "contact_info"
        in: "formData"
        description: "Text field for contact information"
        required: false
        type: "string"
        x-exportParamName: "ContactInfo"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "customer"
        - "department"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "new_name"
        in: "formData"
        description: "New name for an existing customer 'name'.<br>If the customer\
          \ 'name' does not exist, this creates a new customer."
        required: false
        type: "string"
        x-exportParamName: "NewName"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/customers/{id}/:
    delete:
      tags:
      - "Customers"
      summary: "Delete Customer"
      description: "This API is used to delete the customer with the customer id supplied\
        \ as the required argument."
      operationId: "deleteCustomers"
      parameters:
      - name: "id"
        in: "path"
        description: "IP Address id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/customers/contacts/:
    post:
      tags:
      - "Customers"
      description: "Create / Update Customer Contacts"
      operationId: "post_Update_Customer_Contacts"
      parameters:
      - name: "name"
        in: "formData"
        description: "Customer contact name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "type"
        in: "formData"
        description: "Contact type, must already exist"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "customer"
        in: "formData"
        description: "Customer name"
        required: true
        type: "string"
        x-exportParamName: "Customer"
      - name: "email"
        in: "formData"
        description: "Text field."
        required: false
        type: "string"
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "phone"
        in: "formData"
        description: "Text field."
        required: false
        type: "string"
        x-exportParamName: "Phone"
        x-optionalDataType: "String"
      - name: "address"
        in: "formData"
        description: "Text field"
        required: false
        type: "string"
        x-exportParamName: "Address"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/customer/:
    put:
      tags:
      - "Customers"
      description: "Custom Fields"
      operationId: "put_Custom Fields"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the customer"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/vendors/:
    get:
      tags:
      - "Vendors"
      summary: "Get all Vendors"
      description: "Get all Vendors"
      operationId: "getVendors"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              vendors:
                type: "array"
                items:
                  $ref: "#/definitions/Get_all_Vendors"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Vendors"
      description: "Create / Update Vendors"
      operationId: "postVendors"
      parameters:
      - name: "name"
        in: "formData"
        description: "Vendor name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "account_no"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "AccountNo"
        x-optionalDataType: "String"
      - name: "home_page"
        in: "formData"
        description: "Text field."
        required: false
        type: "string"
        x-exportParamName: "HomePage"
        x-optionalDataType: "String"
      - name: "contact_info"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ContactInfo"
        x-optionalDataType: "String"
      - name: "escalation_1"
        in: "formData"
        description: "Text field."
        required: false
        type: "string"
        x-exportParamName: "Escalation1"
        x-optionalDataType: "String"
      - name: "escalation_2"
        in: "formData"
        description: "Text field."
        required: false
        type: "string"
        x-exportParamName: "Escalation2"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/vendors/{id}/:
    delete:
      tags:
      - "Vendors"
      summary: "Delete Vendor"
      description: "This API is used to delete the vendor with the vendor id supplied\
        \ as the required argument."
      operationId: "deleteVendors"
      parameters:
      - name: "id"
        in: "path"
        description: "IP Address id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/circuits/:
    get:
      tags:
      - "Telco Circuits"
      summary: "Get all Circuits"
      description: "Get all Circuits"
      operationId: "getCircuits"
      parameters:
      - name: "ID"
        in: "query"
        description: "ID for the cricuit (D42 ID)"
        required: false
        type: "string"
        x-exportParamName: "ID"
        x-optionalDataType: "String"
      - name: "circuit_id"
        in: "query"
        description: "circuit id"
        required: false
        type: "string"
        x-exportParamName: "CircuitId"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "order_date"
        in: "query"
        description: "Order number"
        required: false
        type: "string"
        x-exportParamName: "OrderDate"
        x-optionalDataType: "String"
      - name: "provision_date"
        in: "query"
        description: "Text field."
        required: false
        type: "string"
        x-exportParamName: "ProvisionDate"
        x-optionalDataType: "String"
      - name: "turn_on_date"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TurnOnDate"
        x-optionalDataType: "String"
      - name: "notes"
        in: "query"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "bandwidth"
        in: "query"
        description: "bandwidth in kbps (mutiply factor of 1024)"
        required: false
        type: "string"
        x-exportParamName: "Bandwidth"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "query"
        description: "The cloud vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "customer"
        in: "query"
        description: "filter by customer name"
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "dramc_id"
        in: "query"
        description: "ID of the DMARC"
        required: false
        type: "string"
        x-exportParamName: "DramcId"
        x-optionalDataType: "String"
      - name: "dmarc"
        in: "query"
        description: "DMARC name"
        required: false
        type: "string"
        x-exportParamName: "Dmarc"
        x-optionalDataType: "String"
      - name: "origin_type"
        in: "query"
        description: "Type of origin point."
        required: false
        type: "string"
        enum:
        - "device"
        - "circuit"
        - "switchport"
        - "vendor"
        - "patch_panel_port"
        x-exportParamName: "OriginType"
        x-optionalDataType: "String"
      - name: "origin_id"
        in: "query"
        description: "ID of the origin point"
        required: false
        type: "string"
        x-exportParamName: "OriginId"
        x-optionalDataType: "String"
      - name: "origin_device"
        in: "query"
        description: "if origin type is device, this is name of the device. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginDevice"
        x-optionalDataType: "String"
      - name: "origin_circuit_id"
        in: "query"
        description: "if origin type is circuit, this is circuit_id of the circuit.\
          \ Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginCircuitId"
        x-optionalDataType: "String"
      - name: "origin_switchport"
        in: "query"
        description: "if origin type is switchport, this is name of the switch port.\
          \ Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginSwitchport"
        x-optionalDataType: "String"
      - name: "origin_switch"
        in: "query"
        description: "if origin type is switchport, this is name of the switch. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginSwitch"
        x-optionalDataType: "String"
      - name: "origin_patch_panel_port"
        in: "query"
        description: "if origin type is patch_panel_port, this is name of the patch\
          \ panel port. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginPatchPanelPort"
        x-optionalDataType: "String"
      - name: "origin_patch_panel"
        in: "query"
        description: "if origin type is patch_panel_port, this is name of the patch\
          \ panel. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginPatchPanel"
        x-optionalDataType: "String"
      - name: "origin_patch_panel_id"
        in: "query"
        description: "if origin type is patch_panel_port, this is ID of the patch\
          \ panel. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginPatchPanelId"
        x-optionalDataType: "String"
      - name: "origin_vendor"
        in: "query"
        description: "if origin type is vendor, this is name of the vendor. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginVendor"
        x-optionalDataType: "String"
      - name: "end_point_type"
        in: "query"
        description: "Type of end point."
        required: false
        type: "string"
        enum:
        - "device"
        - "circuit"
        - "switchport"
        - "vendor"
        - "patch_panel_port"
        x-exportParamName: "EndPointType"
        x-optionalDataType: "String"
      - name: "end_point_id"
        in: "query"
        description: "ID of the end point"
        required: false
        type: "string"
        x-exportParamName: "EndPointId"
        x-optionalDataType: "String"
      - name: "end_point_device"
        in: "query"
        description: "if end_point type is device, this is name of the device. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointDevice"
        x-optionalDataType: "String"
      - name: "end_point_circuit_id"
        in: "query"
        description: "if end_point type is circuit, this is circuit_id of the circuit.\
          \ Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointCircuitId"
        x-optionalDataType: "String"
      - name: "end_point_switchport"
        in: "query"
        description: "if end_point type is switchport, this is name of the switch\
          \ port. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointSwitchport"
        x-optionalDataType: "String"
      - name: "end_point_switch"
        in: "query"
        description: "if end_point type is switchport, this is name of the switch.\
          \ Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointSwitch"
        x-optionalDataType: "String"
      - name: "end_point_patch_panel_port"
        in: "query"
        description: "if end_point type is patch_panel_port, this is name of the patch\
          \ panel port. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointPatchPanelPort"
        x-optionalDataType: "String"
      - name: "end_point_patch_panel"
        in: "query"
        description: "if end_point type is patch_panel_port, this is name of the patch\
          \ panel. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointPatchPanel"
        x-optionalDataType: "String"
      - name: "end_point_patch_panel_id"
        in: "query"
        description: "if end_point type is patch_panel_port, this is ID of the patch\
          \ panel. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointPatchPanelId"
        x-optionalDataType: "String"
      - name: "end_point_vendor"
        in: "query"
        description: "if end_point type is vendor, this is name of the vendor. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointVendor"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              circuits:
                type: "array"
                items:
                  $ref: "#/definitions/Get_all_Circuits"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Telco Circuits"
      summary: "Create / Update Circuits"
      description: "Create / Update Circuits"
      operationId: "post_Update_Circuits"
      parameters:
      - name: "ID"
        in: "formData"
        description: "ID for the specific circuit (D42 ID)"
        required: false
        type: "string"
        x-exportParamName: "ID"
        x-optionalDataType: "String"
      - name: "circuit_id"
        in: "formData"
        description: "general circuit ID"
        required: false
        type: "string"
        x-exportParamName: "CircuitId"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "Required for new circuits"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "order_date"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "OrderDate"
        x-optionalDataType: "String"
      - name: "provision_date"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ProvisionDate"
        x-optionalDataType: "String"
      - name: "turn_on_date"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "TurnOnDate"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "bandwidth"
        in: "formData"
        description: "bandwidth in kbps (multiply factor of 1024)"
        required: false
        type: "string"
        x-exportParamName: "Bandwidth"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "The cloud vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "customer"
        in: "formData"
        description: "customer name"
        required: false
        type: "string"
        x-exportParamName: "Customer"
        x-optionalDataType: "String"
      - name: "dmarc_id"
        in: "formData"
        description: "ID of the DMARC"
        required: false
        type: "string"
        x-exportParamName: "DmarcId"
        x-optionalDataType: "String"
      - name: "dmarc"
        in: "formData"
        description: "name of the DMARC"
        required: false
        type: "string"
        x-exportParamName: "Dmarc"
        x-optionalDataType: "String"
      - name: "origin_type"
        in: "formData"
        description: "Type of origin point."
        required: false
        type: "string"
        enum:
        - "cable"
        - "circuit"
        - "switchport"
        - "tap_port"
        - "patch_panel_port"
        x-exportParamName: "OriginType"
        x-optionalDataType: "String"
      - name: "origin_id"
        in: "formData"
        description: "ID of the origin point"
        required: false
        type: "string"
        x-exportParamName: "OriginId"
        x-optionalDataType: "String"
      - name: "origin_device"
        in: "formData"
        description: "if origin type is device, this is name of the device. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginDevice"
        x-optionalDataType: "String"
      - name: "origin_circuit_id"
        in: "formData"
        description: "if origin type is circuit, this is circuit_id of the circuit.\
          \ Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginCircuitId"
        x-optionalDataType: "String"
      - name: "origin_switchport"
        in: "formData"
        description: "if origin type is switchport, this is name of the switch port.\
          \ Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginSwitchport"
        x-optionalDataType: "String"
      - name: "origin_switch"
        in: "formData"
        description: "if origin type is switchport, this is name of the switch. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginSwitch"
        x-optionalDataType: "String"
      - name: "origin_patch_panel_port"
        in: "formData"
        description: "if origin type is patch_panel_port, this is name of the patch\
          \ panel port. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginPatchPanelPort"
        x-optionalDataType: "String"
      - name: "origin_patch_panel"
        in: "formData"
        description: "if origin type is patch_panel_port, this is name of the patch\
          \ panel. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginPatchPanel"
        x-optionalDataType: "String"
      - name: "origin_patch_panel_id"
        in: "formData"
        description: "if origin type is patch_panel_port, this is ID of the patch\
          \ panel. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginPatchPanelId"
        x-optionalDataType: "String"
      - name: "origin_vendor"
        in: "formData"
        description: "if origin type is vendor, this is name of the vendor. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "OriginVendor"
        x-optionalDataType: "String"
      - name: "end_point_type"
        in: "formData"
        description: "Type of end point."
        required: false
        type: "string"
        enum:
        - "cable"
        - "circuit"
        - "switchport"
        - "tap_port"
        - "patch_panel_port"
        - "vendor"
        x-exportParamName: "EndPointType"
        x-optionalDataType: "String"
      - name: "end_point_id"
        in: "formData"
        description: "ID of the end point"
        required: false
        type: "string"
        x-exportParamName: "EndPointId"
        x-optionalDataType: "String"
      - name: "end_point_device"
        in: "formData"
        description: "if end_point type is device, this is name of the device. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointDevice"
        x-optionalDataType: "String"
      - name: "end_point_circuit_id"
        in: "formData"
        description: "if end_point type is circuit, this is circuit_id of the circuit.\
          \ Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointCircuitId"
        x-optionalDataType: "String"
      - name: "end_point_switchport"
        in: "formData"
        description: "if end_point type is switchport, this is name of the switch\
          \ port. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointSwitchport"
        x-optionalDataType: "String"
      - name: "end_point_switch"
        in: "formData"
        description: "if end_point type is switchport, this is name of the switch.\
          \ Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointSwitch"
        x-optionalDataType: "String"
      - name: "end_point_patch_panel_port"
        in: "formData"
        description: "if end_point type is patch_panel_port, this is name of the patch\
          \ panel port. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointPatchPanelPort"
        x-optionalDataType: "String"
      - name: "end_point_patch_panel"
        in: "formData"
        description: "if end_point type is patch_panel_port, this is name of the patch\
          \ panel. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointPatchPanel"
        x-optionalDataType: "String"
      - name: "end_point_patch_panel_id"
        in: "formData"
        description: "if end_point type is patch_panel_port, this is ID of the patch\
          \ panel. Absent otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointPatchPanelId"
        x-optionalDataType: "String"
      - name: "end_point_vendor"
        in: "formData"
        description: "if end_point type is vendor, this is name of the vendor. Absent\
          \ otherwise"
        required: false
        type: "string"
        x-exportParamName: "EndPointVendor"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/circuits/{id}/:
    delete:
      tags:
      - "Telco Circuits"
      summary: "Delete Circuit"
      description: "This API is used to delete the circuit with the circuit id supplied\
        \ as the required argument."
      operationId: "deleteCircuit"
      parameters:
      - name: "id"
        in: "path"
        description: "circuit id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/custom_fields/circuit/:
    put:
      tags:
      - "Telco Circuits"
      summary: "Create/update custom fields for circuits. (Added in v5.9.3)"
      description: "Custom Fields for circuits. Either ID or circuit_id is required."
      operationId: "put_Custom_Fields"
      parameters:
      - name: "ID"
        in: "formData"
        description: "ID for the cricuit (D42 ID)"
        required: false
        type: "string"
        x-exportParamName: "ID"
        x-optionalDataType: "String"
      - name: "circuit_id"
        in: "formData"
        description: "circuit_id for the circuit"
        required: false
        type: "string"
        x-exportParamName: "CircuitId"
        x-optionalDataType: "String"
      - name: "key"
        in: "formData"
        description: "Can be new or existing. This is the custom field name."
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "type"
        in: "formData"
        description: "this is the custom field type. If left blank, default is text.\
          \ Date should be formatted as YYYY-MM-DD"
        required: false
        type: "string"
        enum:
        - "text"
        - "number"
        - "date"
        - "related_field"
        - "boolean"
        - "url"
        - "json"
        - "markup"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "related_field_name"
        in: "formData"
        description: "Required if type = related field."
        required: false
        type: "string"
        enum:
        - "appcomp"
        - "building"
        - "certificate"
        - "circuit"
        - "costcenter"
        - "customer"
        - "device"
        - "dns_zone"
        - "endusers"
        - "hardware"
        - "ip_address"
        - "mactable"
        - "os"
        - "room"
        - "servicecategory"
        - "software_category"
        - "software"
        - "vlan"
        - "netport"
        x-exportParamName: "RelatedFieldName"
        x-optionalDataType: "String"
      - name: "add_to_picklist"
        in: "formData"
        description: "Comma separated values to add to picklist. If type is picklist\
          \ and custom field is new, this is a required field. Duplicates will be\
          \ ignored."
        required: false
        type: "string"
        x-exportParamName: "AddToPicklist"
        x-optionalDataType: "String"
      - name: "value"
        in: "formData"
        description: "This will set the value of the custom field for the specific\
          \ object."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "clear_value"
        in: "formData"
        description: "yes to clear existing value for that field"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearValue"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "clear_notes"
        in: "formData"
        description: "Yes to clear any existing notes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearNotes"
        x-optionalDataType: "String"
      - name: "bulk_fields"
        in: "formData"
        description: "comma separated key value pairs, with key and value separated\
          \ by colon. e.g.key1:value1, key2:value2"
        required: false
        type: "string"
        x-exportParamName: "BulkFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/powercircuits/:
    get:
      tags:
      - "Power Circuits"
      summary: "Get All Power Circuits"
      description: "Get All Power Circuits"
      operationId: "get_All_Power_Circuits"
      parameters:
      - name: "breakerpanel_id"
        in: "query"
        description: "Breaker panel ID"
        required: false
        type: "string"
        x-exportParamName: "BreakerpanelId"
        x-optionalDataType: "String"
      - name: "bcpm_id"
        in: "query"
        description: "Branch Circuit Power Meter ID"
        required: false
        type: "string"
        x-exportParamName: "BcpmId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              power_circuits:
                type: "array"
                items:
                  $ref: "#/definitions/Get_all_Power_Circuits"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Power Circuits"
      summary: "Create/Update Power Circuit"
      description: "Create/Update Power Circuit"
      operationId: "post_Update_PowerCircuits"
      parameters:
      - name: "breakerpanel_id"
        in: "formData"
        description: "Breaker panel ID"
        required: true
        type: "string"
        x-exportParamName: "BreakerpanelId"
      - name: "number"
        in: "formData"
        description: "Number of the circuit on the breaker panel"
        required: true
        type: "string"
        x-exportParamName: "Number"
      - name: "label"
        in: "formData"
        description: "Label of the circuit on the breaker panel"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "connection"
        in: "formData"
        description: "Description of the connection for the circuit"
        required: false
        type: "string"
        x-exportParamName: "Connection"
        x-optionalDataType: "String"
      - name: "voltage"
        in: "formData"
        description: "The rated voltage on this circuit"
        required: false
        type: "string"
        x-exportParamName: "Voltage"
        x-optionalDataType: "String"
      - name: "amps"
        in: "formData"
        description: "The rated amps on this circuit"
        required: false
        type: "string"
        x-exportParamName: "Amps"
        x-optionalDataType: "String"
      - name: "powerunit_connection_ids"
        in: "formData"
        description: "A comma-separated list of PU IDs connected to this circuit"
        required: false
        type: "string"
        x-exportParamName: "PowerunitConnectionIds"
        x-optionalDataType: "String"
      - name: "device_connection_ids"
        in: "formData"
        description: "A comma-separated list of device IDs connected to this circuit"
        required: false
        type: "string"
        x-exportParamName: "DeviceConnectionIds"
        x-optionalDataType: "String"
      - name: "device_connection_names"
        in: "formData"
        description: "A comma-separated list of device names connected to this circuit"
        required: false
        type: "string"
        x-exportParamName: "DeviceConnectionNames"
        x-optionalDataType: "String"
      - name: "asset_connection_ids"
        in: "formData"
        description: "A comma-separated list of asset IDs connected to this circuit"
        required: false
        type: "string"
        x-exportParamName: "AssetConnectionIds"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/powercircuits/{id}/:
    delete:
      tags:
      - "Power Circuits"
      summary: "Power Circuit"
      description: "This API is used to delete the power circuit with the ID supplied\
        \ as the required argument."
      operationId: "deletePowerCircuit"
      parameters:
      - name: "id"
        in: "path"
        description: "Power circuit ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "89"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/cables/:
    get:
      tags:
      - "Cables"
      summary: "Retrieve information about all cables."
      description: "Get All Cables"
      operationId: "getCables"
      parameters:
      - name: "cable_id"
        in: "query"
        description: "filter by cable_id"
        required: false
        type: "integer"
        x-exportParamName: "CableId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              cable:
                type: "array"
                items:
                  $ref: "#/definitions/Cable"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Cables"
      summary: "Create or update Cables"
      description: "Create/Update Cable"
      operationId: "postCables"
      parameters:
      - name: "ID"
        in: "formData"
        description: "Device42 ID of cable"
        required: false
        type: "string"
        x-exportParamName: "ID"
        x-optionalDataType: "String"
      - name: "cable_id"
        in: "formData"
        description: "Cable ID/Name"
        required: true
        type: "string"
        x-exportParamName: "CableId"
      - name: "vendor"
        in: "formData"
        description: "Cable vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "If multitenancy is on, admin groups that have access to this\
          \ object are specified here, e.g. Prod_East:no,Corp:yes specifies that the\
          \ admin groups for this object are Prod_East with view only permission and\
          \ Corp with change permission. If this parameter is present with no value,\
          \ all groups are deleted."
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "room_id"
        in: "formData"
        description: "Room ID"
        required: false
        type: "string"
        x-exportParamName: "RoomId"
        x-optionalDataType: "String"
      - name: "room"
        in: "formData"
        description: "Room name"
        required: false
        type: "string"
        x-exportParamName: "Room"
        x-optionalDataType: "String"
      - name: "origin_type"
        in: "formData"
        description: "Type of origin point."
        required: false
        type: "string"
        enum:
        - "cable"
        - "circuit"
        - "switchport"
        - "tap_port"
        - "patch_panel_port"
        x-exportParamName: "OriginType"
        x-optionalDataType: "String"
      - name: "origin_id"
        in: "formData"
        description: "ID of the origin point"
        required: false
        type: "string"
        x-exportParamName: "OriginId"
        x-optionalDataType: "String"
      - name: "origin_connector_type"
        in: "formData"
        description: "Connector Type (User Definable)"
        required: false
        type: "string"
        x-exportParamName: "OriginConnectorType"
        x-optionalDataType: "String"
      - name: "origin_cable_type"
        in: "formData"
        description: "Cable Type (User definable)"
        required: false
        type: "string"
        x-exportParamName: "OriginCableType"
        x-optionalDataType: "String"
      - name: "origin_cable_color"
        in: "formData"
        description: "Origin Cable Color"
        required: false
        type: "string"
        x-exportParamName: "OriginCableColor"
        x-optionalDataType: "String"
      - name: "origin_optic_type"
        in: "formData"
        description: "Optic Type (Definable, ie multimode)"
        required: false
        type: "string"
        x-exportParamName: "OriginOpticType"
        x-optionalDataType: "String"
      - name: "origin_back_patch_panel"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "OriginBackPatchPanel"
        x-optionalDataType: "String"
      - name: "end_point_type"
        in: "formData"
        description: "Type of end point."
        required: false
        type: "string"
        enum:
        - "cable"
        - "circuit"
        - "switchport"
        - "tap_port"
        - "patch_panel_port"
        - "vendor"
        x-exportParamName: "EndPointType"
        x-optionalDataType: "String"
      - name: "end_point_id"
        in: "formData"
        description: "ID of the end point"
        required: false
        type: "string"
        x-exportParamName: "EndPointId"
        x-optionalDataType: "String"
      - name: "end_connector_type"
        in: "formData"
        description: "Connector Type (User Definable)"
        required: false
        type: "string"
        x-exportParamName: "EndConnectorType"
        x-optionalDataType: "String"
      - name: "end_cable_type"
        in: "formData"
        description: "Endpoint Cable Type (User Definable)"
        required: false
        type: "string"
        x-exportParamName: "EndCableType"
        x-optionalDataType: "String"
      - name: "end_point_cable_color"
        in: "formData"
        description: "Endpoint Cable Color"
        required: false
        type: "string"
        x-exportParamName: "EndPointCableColor"
        x-optionalDataType: "String"
      - name: "end_point_optic_type"
        in: "formData"
        description: "Optic Type (Definable, ie multimode)"
        required: false
        type: "string"
        x-exportParamName: "EndPointOpticType"
        x-optionalDataType: "String"
      - name: "end_point_back_pach_panel"
        in: "formData"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "EndPointBackPachPanel"
        x-optionalDataType: "String"
      - name: "end_point_multiple"
        in: "formData"
        description: "yes to allow multiple endpoints"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "EndPointMultiple"
        x-optionalDataType: "String"
      - name: "cable_length"
        in: "formData"
        description: "Length of Cable"
        required: false
        type: "string"
        x-exportParamName: "CableLength"
        x-optionalDataType: "String"
      - name: "cable_length_units"
        in: "formData"
        description: "Units for Cable Length (“m” or “ft”)"
        required: false
        type: "string"
        x-exportParamName: "CableLengthUnits"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/cables/{id}/:
    delete:
      tags:
      - "Cables"
      summary: "Delete Cable"
      description: "This API is used to delete the cable with the ID supplied as the\
        \ required argument."
      operationId: "deleteCable"
      parameters:
      - name: "id"
        in: "path"
        description: "Cable ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "89"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/service_level/:
    get:
      tags:
      - "Service Levels"
      summary: "Get all Service Levels (devices)"
      description: "Get all Service Levels"
      operationId: "getService_level"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_11"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Service Levels"
      summary: "Create Service Level."
      description: "Create Service Level"
      operationId: "postService_level"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the Service Level"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/admingroups/:
    get:
      tags:
      - "Admin Users-Groups"
      summary: "Get all Admin Groups"
      description: "Get all Admin Groups"
      operationId: "getAdmingroups"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              adminusers:
                type: "array"
                items:
                  type: "object"
                  properties:
                    groups:
                      example: ""
                    id:
                      example: "1"
                    username:
                      example: "admin"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/adminusers/:
    get:
      tags:
      - "Admin Users-Groups"
      summary: "Get all Admin Users"
      description: "Get Admin Users"
      operationId: "getAdminusers"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              admingroups:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      example: "6"
                    members:
                      example: ""
                    name:
                      example: "Cert Group"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "Bad Request"
              detail: "A validation exception has occurred."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Admin Users-Groups"
      summary: "Create/Update Admin Users"
      description: "Create/Edit Admin Users"
      operationId: "postAdminUsers"
      parameters:
      - name: "username"
        in: "formData"
        description: "admin user name"
        required: true
        type: "string"
        x-exportParamName: "Username"
      - name: "password"
        in: "formData"
        description: "new user password"
        required: true
        type: "string"
        x-exportParamName: "Password"
      - name: "groups"
        in: "formData"
        description: "Admin groups to assign user to. Note: groups with commas need\
          \ to be wrapped in quotes. ie: “System Generated Read, Add, Edit and Delete”"
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/endusers/:
    get:
      tags:
      - "End Users"
      summary: "Get all End Users"
      description: "Get End Users"
      operationId: "getEndusers"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              values:
                type: "array"
                items:
                  type: "object"
                  properties:
                    domain:
                      example: "internal.dev"
                    name:
                      example: "Thom Yorke"
                    notes:
                      example: "OK Computer"
                    email:
                      example: "tyorke@somedomain.net"
                    contact:
                      example: "phone: 203-555-5555"
                    location:
                      example: "Not Here"
                    adusername:
                      example: "None"
                    id:
                      example: "132"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "End Users"
      summary: "Create / Update End Users"
      description: "Create / Update End Users"
      operationId: "postEndUsers"
      parameters:
      - name: "name"
        in: "formData"
        description: "enduser name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "email"
        in: "formData"
        description: "Text field."
        required: false
        type: "string"
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "contact"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Contact"
        x-optionalDataType: "String"
      - name: "location"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/endusers/{id}/:
    delete:
      tags:
      - "End Users"
      summary: "Delete End User"
      description: "This API is used to delete the end user with the end user id supplied\
        \ as the required argument."
      operationId: "deleteEndUsers"
      parameters:
      - name: "id"
        in: "path"
        description: "end user id"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              deleted:
                example: "true"
              id:
                example: "114"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/reports/{id}/:
    get:
      tags:
      - "Reports"
      description: "Run a report and retrieve results"
      operationId: "getReports"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "csv_format"
        in: "query"
        description: "If this parameter is ‘xls’ or is not present, an Excel file(.xlsx)\
          \ will be produced. If this parameter is ‘tab’, a tab-delimited file(.txt)\
          \ will be created."
        required: false
        type: "string"
        x-exportParamName: "CsvFormat"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              file_url:
                example: "/var/www/graphics/images/temp/report-201523February0521AM528423.txt"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/history/:
    get:
      tags:
      - "History"
      summary: "Retrieves all history for the past one week. (Note, as of 10.3.0 Device42\
        \ now has a more robust audit log available at /api/api/1.0/auditlogs/"
      description: "Get History"
      operationId: "getHistory"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/getHistory"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/history/<number_of_weeks>/:
    get:
      tags:
      - "History"
      summary: "Retrieves history for specified number of weeks in the past."
      description: "Get History by # of Weeks"
      operationId: "getHistoryNumber_of_weeks"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/getHistory"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
      deprecated: true
  /api/1.0/auditlogs/:
    get:
      tags:
      - "Audit Log"
      summary: "Retrieves the audit history for all changes made in Device42."
      description: "Get Audit Logs"
      operationId: "getAuditlogs"
      parameters:
      - name: "object_id"
        in: "query"
        description: "Filters by object ID (ie, device ID, asset ID)"
        required: false
        type: "string"
        x-exportParamName: "ObjectId"
        x-optionalDataType: "String"
      - name: "content_type"
        in: "query"
        description: "Returns changes done to a particular content type"
        required: false
        type: "string"
        x-exportParamName: "ContentType"
        x-optionalDataType: "String"
      - name: "action_time_gt"
        in: "query"
        description: "Filters actions that have happened past the time entered (ie,\
          \ greater than 2 weeks) in YYYY-MM-DDTHH:MM:ss.uuuuuu (ie 2016-10-27T13:52:01.213416)"
        required: false
        type: "string"
        x-exportParamName: "ActionTimeGt"
        x-optionalDataType: "String"
      - name: "action_time_lt"
        in: "query"
        description: "Returns actions within the last X amount of days in YYYY-MM-DDTHH:MM:ss.uuuuuu\
          \ (ie 2016-10-27T13:52:01.213416)"
        required: false
        type: "string"
        x-exportParamName: "ActionTimeLt"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/getAuditLogs"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/networks/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all auto-discovery jobs for networking devices."
      description: "Get Network Jobs"
      operationId: "getAuto_discoveryNetworks"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    end_ip:
                      example: ""
                    job_id:
                      example: "54"
                    name:
                      example: "job54"
                    start_ip:
                      example: "192.168.11.21"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      description: "Add or update network job"
      operationId: "postAuto_discoveryNetworks"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ipaddress"
        in: "formData"
        description: "IP address. Required if new"
        required: false
        type: "string"
        x-exportParamName: "Ipaddress"
        x-optionalDataType: "String"
      - name: "end_ip_address"
        in: "formData"
        description: "End IP address"
        required: false
        type: "string"
        x-exportParamName: "EndIpAddress"
        x-optionalDataType: "String"
      - name: "snmp_string"
        in: "formData"
        description: "required, if new"
        required: false
        type: "string"
        x-exportParamName: "SnmpString"
        x-optionalDataType: "String"
      - name: "snmp_strings"
        in: "formData"
        description: "Can be comma separated list of community strings to use multiple\
          \ community strings"
        required: false
        type: "string"
        x-exportParamName: "SnmpStrings"
        x-optionalDataType: "String"
      - name: "snmp_string_ids"
        in: "formData"
        description: "Can be comma separated list of community string IDs to use multiple\
          \ community strings"
        required: false
        type: "string"
        x-exportParamName: "SnmpStringIds"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      - name: "strip_domain_name"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "StripDomainName"
        x-optionalDataType: "String"
      - name: "autodiscover_cdp_devices"
        in: "formData"
        description: "yes to enable CDP/LLDP (added in v8.3.2)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "AutodiscoverCdpDevices"
        x-optionalDataType: "String"
      - name: "use_name_alias_port_descr"
        in: "formData"
        description: "yes to use alias for port description during discovery (added\
          \ in v8.3.2)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "UseNameAliasPortDescr"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "name of one or more groups separated by commas"
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "mask_bits"
        in: "formData"
        description: "mask bits (integer only)"
        required: false
        type: "integer"
        x-exportParamName: "MaskBits"
        x-optionalDataType: "Int32"
      - name: "snmp_port"
        in: "formData"
        description: "snmp port (integer only) (added in v10.4.0)"
        required: false
        type: "integer"
        x-exportParamName: "SnmpPort"
        x-optionalDataType: "Int32"
      - name: "snmp_version"
        in: "formData"
        required: false
        type: "string"
        default: "v2c"
        enum:
        - "v1"
        - "v2c"
        - "v3"
        x-exportParamName: "SnmpVersion"
        x-optionalDataType: "String"
      - name: "snmp_string_id"
        in: "formData"
        description: "The id of the password for the community string"
        required: false
        type: "string"
        x-exportParamName: "SnmpStringId"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_password_id"
        in: "formData"
        description: "The id of the password for the auth password"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3AuthPasswordId"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol_password_id"
        in: "formData"
        description: "The id of the password for the privacy protocol password"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3PrivacyProtocolPasswordId"
        x-optionalDataType: "String"
      - name: "snmpv3_user"
        in: "formData"
        description: "name of snmp v3 user (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3User"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_mode"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "noAuthoNoPriv"
        - "authNoPriv"
        - "authPriv"
        x-exportParamName: "Snmpv3AuthMode"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_protocol"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "MD5"
        - "SHA"
        x-exportParamName: "Snmpv3AuthProtocol"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_password"
        in: "formData"
        description: "password (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3AuthPassword"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "DES"
        - "3DES"
        - "AES"
        - "AES128"
        - "AES196"
        - "AES256"
        x-exportParamName: "Snmpv3PrivacyProtocol"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol_password"
        in: "formData"
        description: "password (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3PrivacyProtocolPassword"
        x-optionalDataType: "String"
      - name: "snmpv3_context"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3Context"
        x-optionalDataType: "String"
      - name: "get_all_switch_ports"
        in: "formData"
        description: "yes or no to get all switch ports (added in v10.4.0)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "GetAllSwitchPorts"
        x-optionalDataType: "String"
      - name: "delete_older_mac_association_after"
        in: "formData"
        description: "number of days (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "DeleteOlderMacAssociationAfter"
        x-optionalDataType: "String"
      - name: "delete_switch_port_not_found"
        in: "formData"
        description: "yes or no to delete switch ports not found (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "DeleteSwitchPortNotFound"
        x-optionalDataType: "String"
      - name: "vlans_to_ignore"
        in: "formData"
        description: "list of vlan ids to ignore separated by commas (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "VlansToIgnore"
        x-optionalDataType: "String"
      - name: "port_name_prefix_to_ignore_macs"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "PortNamePrefixToIgnoreMacs"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "No Debug"
        - "Normal Debug"
        - "Extended Debug"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      - name: "hostname_precedence"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "HostnamePrecedence"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "Must already exist"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "skip_vlan_indexing"
        in: "formData"
        description: "yes or no (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "SkipVlanIndexing"
        x-optionalDataType: "String"
      - name: "vrfgroup"
        in: "formData"
        description: "name of vrf group for discovered subnets (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Vrfgroup"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "name of subnet category for discovered subnets"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "discover_services"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DiscoverServices"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "network auto-discovery job added"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute network job"
      description: "Execute network job. Required parameters: name or job_id"
      operationId: "putAuto_discoveryNetworks"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job - required if no name"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/nmap/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all auto-discovery Nmap jobs."
      description: "Get Nmap Jobs"
      operationId: "getAuto_discoverynmap"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    job_id:
                      example: "1"
                    schedule_time:
                      example: ""
                    schedule_day:
                      example: ""
                    end_ip:
                      example: "10.42.0.4"
                    start_ip:
                      example: "10.42.0.1"
                    name:
                      example: "Nmap-job-1"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add Nmap auto-discovery job"
      description: "Add Nmap auto-discovery job"
      operationId: "postAuto_discoverynmap"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip_start"
        in: "formData"
        description: "starting IP address"
        required: true
        type: "string"
        x-exportParamName: "IpStart"
      - name: "ip_end"
        in: "formData"
        description: "ending IP address, use same as start for single address"
        required: true
        type: "string"
        x-exportParamName: "IpEnd"
      - name: "remote_collector_id"
        in: "formData"
        description: "D42 ID of the remote collector to use for this job."
        required: true
        type: "string"
        x-exportParamName: "RemoteCollectorId"
      - name: "nameserver"
        in: "formData"
        description: "IP/FQDA of name server"
        required: false
        type: "string"
        x-exportParamName: "Nameserver"
        x-optionalDataType: "String"
      - name: "os_detection"
        in: "formData"
        description: "Select yes to detect operating system."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "OsDetection"
        x-optionalDataType: "String"
      - name: "services_detection"
        in: "formData"
        description: "Select yes to detect services."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ServicesDetection"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "Name of subnet category for discovered subnets"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "new_object_category"
        in: "formData"
        description: "Update an existing object category."
        required: false
        type: "string"
        x-exportParamName: "NewObjectCategory"
        x-optionalDataType: "String"
      - name: "overwrite_device_categories"
        in: "formData"
        description: "Overwrite the object categories for existing discovered devices.<br><br>Note\
          \ - this is equivalent to the 'Overwrite existing object categories' parameter\
          \ shown in the D42 Nmap UI."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "OverwriteDeviceCategories"
        x-optionalDataType: "String"
      - name: "vrfgroup"
        in: "formData"
        description: "Name of vrf group for discovered subnets"
        required: false
        type: "string"
        x-exportParamName: "Vrfgroup"
        x-optionalDataType: "String"
      - name: "vrfgroup_id"
        in: "formData"
        description: "D42 ID of group for discovered subnets"
        required: false
        type: "string"
        x-exportParamName: "VrfgroupId"
        x-optionalDataType: "String"
      - name: "tags"
        in: "formData"
        description: "Comma separated list of tags"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "Comma separated list of tags to remove"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "nmap auto-discovery job added"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute Nmap job"
      description: "Execute nmap job. Required parameters: name or job_id"
      operationId: "putAuto_discoverynmap"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id supplied"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID of the job - required if no name supplied"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/pingsweep/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all auto-discovery pingsweep jobs."
      description: "Get Pingsweep Jobs"
      operationId: "getAuto_discoveryPingsweep"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    strip_domain_suffix:
                      example: "no"
                    create_new_subnet:
                      example: "yes"
                    name:
                      example: "job54"
                    overwrite_subnet_category:
                      example: "yes"
                    schedule_time:
                      example: ""
                    schedule_days:
                      example: ""
                    job_id:
                      example: "2"
                    vrfgroup:
                      example: ""
                    debug_level:
                      example: "Debug Off"
                    reverse_dns:
                      example: "no"
                    type:
                      example: ""
                    networks:
                      example: "8.8.8.0/28"
                    subnet_category:
                      example: ""
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      description: "Add or update pingsweep job"
      operationId: "postAuto_discoveryPingsweep"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "networks"
        in: "formData"
        description: "Networks to search. Required if new"
        required: false
        type: "string"
        x-exportParamName: "Networks"
        x-optionalDataType: "String"
      - name: "type"
        in: "formData"
        description: "Choose if you want to automatically assign type to discovered\
          \ IPs."
        required: false
        type: "string"
        enum:
        - "Static"
        - "DHCP"
        - "Reserved"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "strip_domain_suffix"
        in: "formData"
        description: "Strip everything after the first dot"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "StripDomainSuffix"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "Debug Off"
        - "Debug On"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      - name: "reverse_dns"
        in: "formData"
        description: "Add devices by reverse DNS of discovered IP. (Recommended to\
          \ leave unchecked and use other discovery methods for devices)"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ReverseDns"
        x-optionalDataType: "String"
      - name: "create_new_subnet"
        in: "formData"
        description: "Create new subnet for networks not found"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "CreateNewSubnet"
        x-optionalDataType: "String"
      - name: "vrfgroup"
        in: "formData"
        description: "name of vrf group for discovered subnets"
        required: false
        type: "string"
        x-exportParamName: "Vrfgroup"
        x-optionalDataType: "String"
      - name: "subnet_category"
        in: "formData"
        description: "name of subnet category for discovered subnets"
        required: false
        type: "string"
        x-exportParamName: "SubnetCategory"
        x-optionalDataType: "String"
      - name: "overwrite_subnet_categories"
        in: "formData"
        description: "If a subnet is discovered that exists and already has a subnet\
          \ category, the category will be overwritten and all child subnets of the\
          \ discovered subnet will also get the new category."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "OverwriteSubnetCategories"
        x-optionalDataType: "String"
      - name: "remote_collector_id"
        in: "formData"
        description: "ID of the remote collector to use for this job"
        required: false
        type: "integer"
        x-exportParamName: "RemoteCollectorId"
        x-optionalDataType: "Int32"
      - name: "tags"
        in: "formData"
        description: "comma separated list of tags"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "tags_remove"
        in: "formData"
        description: "comma separated list of tags to remove"
        required: false
        type: "string"
        x-exportParamName: "TagsRemove"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute pingsweep job"
      description: "Execute pingsweep job. Required parameters: name or job_id"
      operationId: "putAuto_discoveryPingsweep"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job - required if no name"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/blade_disc/:
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add or update blade autodiscovery job"
      description: "Add or update blade autodiscovery job"
      operationId: "postAuto_discoveryBlade_disc"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ipaddress"
        in: "formData"
        description: "IP address. Required if new"
        required: false
        type: "string"
        x-exportParamName: "Ipaddress"
        x-optionalDataType: "String"
      - name: "end_ip_address"
        in: "formData"
        description: "End IP address"
        required: false
        type: "string"
        x-exportParamName: "EndIpAddress"
        x-optionalDataType: "String"
      - name: "snmp_string"
        in: "formData"
        description: "required, if new"
        required: false
        type: "string"
        x-exportParamName: "SnmpString"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      - name: "strip_domain_name"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "StripDomainName"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "name of one or more groups separated by commas"
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "snmp_port"
        in: "formData"
        description: "snmp port (integer only) (added in v10.4.0)"
        required: false
        type: "integer"
        x-exportParamName: "SnmpPort"
        x-optionalDataType: "Int32"
      - name: "snmp_version"
        in: "formData"
        required: false
        type: "string"
        default: "v2c"
        enum:
        - "v1"
        - "v2c"
        - "v3"
        x-exportParamName: "SnmpVersion"
        x-optionalDataType: "String"
      - name: "snmpv3_user"
        in: "formData"
        description: "name of snmp v3 user (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3User"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_mode"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "noAuthoNoPriv"
        - "authNoPriv"
        - "authPriv"
        x-exportParamName: "Snmpv3AuthMode"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_protocol"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "MD5"
        - "SHA"
        x-exportParamName: "Snmpv3AuthProtocol"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_password"
        in: "formData"
        description: "password (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3AuthPassword"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "DES"
        - "3DES"
        - "AES"
        - "AES128"
        - "AES196"
        - "AES256"
        x-exportParamName: "Snmpv3PrivacyProtocol"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol_password"
        in: "formData"
        description: "password (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3PrivacyProtocolPassword"
        x-optionalDataType: "String"
      - name: "snmpv3_context"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3Context"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "No Debug"
        - "Normal Debug"
        - "Extended Debug"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      - name: "hostname_precedence"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "HostnamePrecedence"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "Must already exist"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "name_to_use_for_newly_discovered_module"
        in: "formData"
        description: "name to use"
        required: false
        type: "string"
        x-exportParamName: "NameToUseForNewlyDiscoveredModule"
        x-optionalDataType: "String"
      - name: "toggle_in_service_on_module_power_state"
        in: "formData"
        description: "yes or no"
        required: false
        type: "string"
        x-exportParamName: "ToggleInServiceOnModulePowerState"
        x-optionalDataType: "String"
      - name: "module_not_found"
        in: "formData"
        description: "action to take on module not found. One of: Remove Host Association,\
          \ Change Service Level, Delete Module (default is no action)"
        required: false
        type: "string"
        x-exportParamName: "ModuleNotFound"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "network auto-discovery job added"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute blade autodiscovery job"
      description: "Execute blade autodiscovery job. Required parameters: name or\
        \ job_id"
      operationId: "putAuto_discoveryBlade_disc"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job - required if no name"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/power_disc/:
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add or update power autodiscovery job"
      description: "Add or update power autodiscovery job"
      operationId: "postAuto_discoveryPower_disc"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "appliance"
        in: "formData"
        description: "name of the monitoring appliance"
        required: true
        type: "string"
        x-exportParamName: "Appliance"
      - name: "ipaddress"
        in: "formData"
        description: "IP address. Required if new"
        required: false
        type: "string"
        x-exportParamName: "Ipaddress"
        x-optionalDataType: "String"
      - name: "end_ip_address"
        in: "formData"
        description: "End IP address"
        required: false
        type: "string"
        x-exportParamName: "EndIpAddress"
        x-optionalDataType: "String"
      - name: "snmp_string"
        in: "formData"
        description: "required, if new"
        required: false
        type: "string"
        x-exportParamName: "SnmpString"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      - name: "strip_domain_name"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "StripDomainName"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "vrfgroup"
        in: "formData"
        description: "name of vrf group for discovered subnets (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Vrfgroup"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "name of subnet category for discovered subnets"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "category"
        in: "formData"
        description: "subnet category to assign to addresses of discovered units"
        required: false
        type: "string"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "name of one or more groups separated by commas"
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "snmp_port"
        in: "formData"
        description: "snmp port (integer only) (added in v10.4.0)"
        required: false
        type: "integer"
        x-exportParamName: "SnmpPort"
        x-optionalDataType: "Int32"
      - name: "snmp_version"
        in: "formData"
        required: false
        type: "string"
        default: "v2c"
        enum:
        - "v1"
        - "v2c"
        - "v3"
        x-exportParamName: "SnmpVersion"
        x-optionalDataType: "String"
      - name: "snmp_string_id"
        in: "formData"
        description: "The id of the password for the community string"
        required: false
        type: "string"
        x-exportParamName: "SnmpStringId"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_password_id"
        in: "formData"
        description: "The id of the password for the auth password"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3AuthPasswordId"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol_password_id"
        in: "formData"
        description: "The id of the password for the privacy protocol password"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3PrivacyProtocolPasswordId"
        x-optionalDataType: "String"
      - name: "snmpv3_user"
        in: "formData"
        description: "name of snmp v3 user (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3User"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_mode"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "noAuthoNoPriv"
        - "authNoPriv"
        - "authPriv"
        x-exportParamName: "Snmpv3AuthMode"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_protocol"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "MD5"
        - "SHA"
        x-exportParamName: "Snmpv3AuthProtocol"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_password"
        in: "formData"
        description: "password (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3AuthPassword"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "DES"
        - "3DES"
        - "AES"
        - "AES128"
        - "AES196"
        - "AES256"
        x-exportParamName: "Snmpv3PrivacyProtocol"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol_password"
        in: "formData"
        description: "password (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3PrivacyProtocolPassword"
        x-optionalDataType: "String"
      - name: "snmpv3_context"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3Context"
        x-optionalDataType: "String"
      - name: "hostname_precedence"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "HostnamePrecedence"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "Must already exist"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "name_to_use_for_newly_discovered_module"
        in: "formData"
        description: "name to use"
        required: false
        type: "string"
        x-exportParamName: "NameToUseForNewlyDiscoveredModule"
        x-optionalDataType: "String"
      - name: "toggle_in_service_on_module_power_state"
        in: "formData"
        description: "yes or no"
        required: false
        type: "string"
        x-exportParamName: "ToggleInServiceOnModulePowerState"
        x-optionalDataType: "String"
      - name: "module_not_found"
        in: "formData"
        description: "action to take on module not found. One of: Remove Host Association,\
          \ Change Service Level, Delete Module (default is no action)"
        required: false
        type: "string"
        x-exportParamName: "ModuleNotFound"
        x-optionalDataType: "String"
      - name: "name_to_use_for_newly_discovered_pdu"
        in: "formData"
        description: "one of: Name discovered by SNMP, Name plus serial number, Name\
          \ plus serial number plus IP"
        required: false
        type: "string"
        x-exportParamName: "NameToUseForNewlyDiscoveredPdu"
        x-optionalDataType: "String"
      - name: "polling_interval"
        in: "formData"
        description: "polling interval in minutes (integer)"
        required: false
        type: "string"
        x-exportParamName: "PollingInterval"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Power auto-discovery job added"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute power autodiscovery job"
      description: "Execute power autodiscovery job"
      operationId: "putAuto_discoveryPower_disc"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job - required if no name"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/vserver/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all vServer auto-discovery jobs."
      description: "Get all vServer Jobs"
      operationId: "getAuto_discoveryvServer"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    url_prefix:
                      example: "https"
                    job_id:
                      example: "54"
                    name:
                      example: "vserverjob54"
                    port:
                      example: "443"
                    target:
                      example: "192.168.11.21"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add or update vServer autodiscovery job"
      description: "Add or update vServer autodiscovery job"
      operationId: "postAuto_discoveryVserver"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "server"
        in: "formData"
        description: "IP or FQDN of target server"
        required: false
        type: "string"
        x-exportParamName: "Server"
        x-optionalDataType: "String"
      - name: "platform"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "windows"
        - "winrm"
        - "docker api"
        - "docker"
        - "nutanix"
        - "linux"
        - "vmware"
        - "unix"
        - "aix hmc"
        - "openvz"
        - "oracle vm"
        - "lxc"
        - "kvm"
        - "libvirt"
        - "ovirt"
        - "redhat"
        - "citrix xen"
        x-exportParamName: "Platform"
        x-optionalDataType: "String"
      - name: "end_ip_address"
        in: "formData"
        description: "End IP address"
        required: false
        type: "string"
        x-exportParamName: "EndIpAddress"
        x-optionalDataType: "String"
      - name: "use_ftp"
        in: "formData"
        description: "Use FTP instead of Telnet for discovery."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "UseFtp"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      - name: "password_ids"
        in: "formData"
        description: "One or more D42 password ID numbers separated by commas"
        required: false
        type: "string"
        x-exportParamName: "PasswordIds"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "name of one or more groups separated by commas"
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "category of discovered vservers and vms"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "No Debug"
        - "Normal Debug"
        - "Extended Debug"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "Must already exist"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      - name: "url_prefix"
        in: "formData"
        description: "http or https"
        required: false
        type: "string"
        x-exportParamName: "UrlPrefix"
        x-optionalDataType: "String"
      - name: "port"
        in: "formData"
        description: "specify port"
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      - name: "url_suffix"
        in: "formData"
        description: "append suffix to discovery url"
        required: false
        type: "string"
        x-exportParamName: "UrlSuffix"
        x-optionalDataType: "String"
      - name: "username"
        in: "formData"
        description: "username to use in discovery"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "password"
        in: "formData"
        description: "password to use in discovery"
        required: false
        type: "string"
        x-exportParamName: "Password"
        x-optionalDataType: "String"
      - name: "strip_domain_suffix"
        in: "formData"
        description: "Strip domain suffix if discovered on VMs or hypervisor"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "StripDomainSuffix"
        x-optionalDataType: "String"
      - name: "prepend_vmhostname"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "PrependVmhostname"
        x-optionalDataType: "String"
      - name: "ignore_powered_off"
        in: "formData"
        description: "Ignore powered off vms"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IgnorePoweredOff"
        x-optionalDataType: "String"
      - name: "discover_vms"
        in: "formData"
        description: "discover VMs or strictly hypervisors"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DiscoverVms"
        x-optionalDataType: "String"
      - name: "vm_name_to_use"
        in: "formData"
        description: "“found from vm tools” or “as named on vserver”"
        required: false
        type: "string"
        x-exportParamName: "VmNameToUse"
        x-optionalDataType: "String"
      - name: "add_multiple_vm_names_as_alias"
        in: "formData"
        description: "add any additional names found as device alias"
        required: false
        type: "string"
        x-exportParamName: "AddMultipleVmNamesAsAlias"
        x-optionalDataType: "String"
      - name: "toggle_service_level_on_vm_power_state"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ToggleServiceLevelOnVmPowerState"
        x-optionalDataType: "String"
      - name: "get_guest_os_info"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "GetGuestOsInfo"
        x-optionalDataType: "String"
      - name: "ignore_guest_uuid"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IgnoreGuestUuid"
        x-optionalDataType: "String"
      - name: "vm_not_found"
        in: "formData"
        description: "Choose how to handle VM not found in discovery"
        required: false
        type: "string"
        enum:
        - "Remove Host Association"
        - "Change Service Level"
        - "Delete VM"
        x-exportParamName: "VmNotFound"
        x-optionalDataType: "String"
      - name: "track_vm_name_change"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "TrackVmNameChange"
        x-optionalDataType: "String"
      - name: "hostname_precedence"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "HostnamePrecedence"
        x-optionalDataType: "String"
      - name: "hostidlist"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Hostidlist"
        x-optionalDataType: "String"
      - name: "vm_add_disk"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "VmAddDisk"
        x-optionalDataType: "String"
      - name: "host_allow_duplicate_serials"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "HostAllowDuplicateSerials"
        x-optionalDataType: "String"
      - name: "ignore_host_serial"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IgnoreHostSerial"
        x-optionalDataType: "String"
      - name: "ignore_host_uuid"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IgnoreHostUuid"
        x-optionalDataType: "String"
      - name: "overwrite_object_categories"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "OverwriteObjectCategories"
        x-optionalDataType: "String"
      - name: "remote_collector_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "RemoteCollectorId"
        x-optionalDataType: "String"
      - name: "use_service_account"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "UseServiceAccount"
        x-optionalDataType: "String"
      - name: "ignore_ipv6"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IgnoreIpv6"
        x-optionalDataType: "String"
      - name: "ignore_virt_subtype"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "IgnoreVirtSubtype"
        x-optionalDataType: "String"
      - name: "device_name_format"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "hostname"
        - "hostname_plus_domain"
        - "hostname_add_domain_alias"
        - "hostname_plus_domain_add_hostname_alias"
        x-exportParamName: "DeviceNameFormat"
        x-optionalDataType: "String"
      - name: "discover_parts"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DiscoverParts"
        x-optionalDataType: "String"
      - name: "capture_hosts_file"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "CaptureHostsFile"
        x-optionalDataType: "String"
      - name: "discover_software"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DiscoverSoftware"
        x-optionalDataType: "String"
      - name: "initial_software_type"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "managed"
        - "unmanaged"
        - "prohibited"
        - "ignored"
        x-exportParamName: "InitialSoftwareType"
        x-optionalDataType: "String"
      - name: "discover_lines_of_code"
        in: "formData"
        description: "If enabled, please set the max timeout for the discovery to\
          \ greater than 5 minutes."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DiscoverLinesOfCode"
        x-optionalDataType: "String"
      - name: "discover_services"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DiscoverServices"
        x-optionalDataType: "String"
      - name: "discover_applications"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DiscoverApplications"
        x-optionalDataType: "String"
      - name: "store_config_files"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "StoreConfigFiles"
        x-optionalDataType: "String"
      - name: "discover_cloudid"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DiscoverCloudid"
        x-optionalDataType: "String"
      - name: "customer_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "vrf_group_id"
        in: "formData"
        description: "ID of the VRF group"
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "service_level_device_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevelDeviceId"
        x-optionalDataType: "String"
      - name: "sudo_retry"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "SudoRetry"
        x-optionalDataType: "String"
      - name: "alternate_sudo"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "AlternateSudo"
        x-optionalDataType: "String"
      - name: "use_domain_server"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "UseDomainServer"
        x-optionalDataType: "String"
      - name: "ldap_server"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LdapServer"
        x-optionalDataType: "String"
      - name: "use_fqdn"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "UseFqdn"
        x-optionalDataType: "String"
      - name: "ldap_filter_type"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "all"
        - "servers"
        - "custom"
        - "custom_ldap_filter"
        x-exportParamName: "LdapFilterType"
        x-optionalDataType: "String"
      - name: "ldap_unpwd_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "LdapUnpwdId"
        x-optionalDataType: "String"
      - name: "alternate_sudo_password_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "AlternateSudoPasswordId"
        x-optionalDataType: "String"
      - name: "polling_interval"
        in: "formData"
        description: "polling interval in minutes (integer)"
        required: false
        type: "string"
        x-exportParamName: "PollingInterval"
        x-optionalDataType: "String"
      - name: "enable_resources_monitoring"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "EnableResourcesMonitoring"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute vserver job"
      description: "Execute VServer job"
      operationId: "putAuto_discoveryVserver"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job - required if no name"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/cloudaccount/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all cloud auto-discovery jobs."
      description: "Get all cloud discovery jobs"
      operationId: "getAuto_discoveryCloudaccount"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    job_id:
                      example: "54"
                    name:
                      example: "Oraclejob54"
                    cloud_type:
                      example: "oracle cloud"
                    vendor:
                      example: "oracle"
                    remote_collector:
                      example: "rc-223-la"
                    user_id:
                      example: "sjapo4duy17re45"
                    key_file:
                      example: "b48b-9acd57b4a3a0"
                    tenant_id:
                      example: "a41cde6e-8f12-44b8"
                    oracle_regions:
                      example: "us-ashburn-1,us-phoenix-1"
                    instance_not_found:
                      example: "Change status"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add or update cloud autodiscovery job"
      description: "Add or update a cloud autodiscovery job.<br> <p><b>Required parameters\
        \ by cloud vendor or job type.</b><br>(API parameter = UI equivalent)</i><p>ALL\
        \ DISCOVERY JOBS<br>- name = Name<br>- cloud_type = Cloud Type <p>AMAZON AWS<br>-\
        \ accountid = Access Key ID<br>- secret_key OR secret_key_id = Secret Key<br>-\
        \ regions = Regions <p>MICROSOFT AZURE<br>- auth_type = Authentication Type<br>-\
        \ accountid = Client ID (Service Principal) or Username (User Credentials)<br>-\
        \ secret_key OR secret_key_id = Client Secret (Service Principal) or Password\
        \ (User Credentials)<br>- subscriptionid = Subscription ID<br>- tenant = Tenant\
        \ ID <p>LINODE<br>- api_key OR api_key_id = API Key <p>DIGITALOCEAN<br>- token_key\
        \ = Token Key <p>OPENSTACK<br>- ip = URL<br>- username = User<br>- secret_key\
        \ OR secret_key_id = Password<br>- tenant = Project Name <p>AMAZON API<br>-\
        \ ip = URL<br>- region = Region<br>- secret_key OR secret_key_id = Secret\
        \ Key<br> - accountid = API Key <p>GOOGLE CLOUD<br>- tenant = Project ID<br>-\
        \ secret_key OR secret_key_id = Credentials JSON<br>- google_regions = Zones\
        \ <p>ALIBABA CLOUD<br>- accountid = Access Key ID<br>- secret_key OR secret_key_id\
        \ = Access Key Secret <p>ORACLE CLOUD<br>- accountid = User ID<br>- api_key\
        \ OR api_key_id = Fingerprint<br>- secret_key OR secret_key_id = Key File<br>-\
        \ tenant = Tenant ID<br>- oracle_regions = Zones <p>STANDALONE KUBERNETES<br>-\
        \ ip = URL<br>- auth_type = Authentication Type<br>- accountid = Bearer Token\
        \ or Basic Credentials (depending on Authentication Type)"
      operationId: "postAuto_discoveryCloudaccount"
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the discovery job; required for all jobs."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "cloud_type"
        in: "formData"
        description: "Required for all jobs."
        required: true
        type: "string"
        enum:
        - "Amazon AWS"
        - "Microsoft Azure"
        - "Linode"
        - "DigitalOcean"
        - "OpenStack"
        - "Amazon API"
        - "Google Cloud"
        - "Alibaba Cloud"
        - "Oracle Cloud"
        - "Standalone Kubernetes"
        x-exportParamName: "CloudType"
      - name: "secret_key_id"
        in: "formData"
        description: "Amazon AWS, MS Azure, OpenStack, Amazon API, Google Cloud, Alibaba\
          \ Cloud, Oracle Cloud"
        required: false
        type: "string"
        x-exportParamName: "SecretKeyId"
        x-optionalDataType: "String"
      - name: "vendor"
        in: "formData"
        description: "The cloud vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
        x-optionalDataType: "String"
      - name: "kubernetes_discovery"
        in: "formData"
        description: "Available for Amazon AWS, Microsoft Azure, and standalone Kubernetes.\
          \ <br>Yes / No"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "KubernetesDiscovery"
        x-optionalDataType: "String"
      - name: "remote_collector_id"
        in: "formData"
        description: "ID number of the remote collector (RC) to use for the job."
        required: false
        type: "string"
        x-exportParamName: "RemoteCollectorId"
        x-optionalDataType: "String"
      - name: "customer_id"
        in: "formData"
        description: "Customer ID number for discovered devices."
        required: false
        type: "string"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "device_name_format"
        in: "formData"
        description: "Name format for discovered cloud instances (only for Alibaba\
          \ Cloud, Amazon API, Amazon AWS, Google Cloud, MS Azure, Oracle Cloud)."
        required: false
        type: "string"
        enum:
        - "Instance ID + name (if defined)"
        - "Instance ID"
        - "Name (only use if unique)"
        x-exportParamName: "DeviceNameFormat"
        x-optionalDataType: "String"
      - name: "container_not_found"
        in: "formData"
        description: "For Kubernetes discovery.<br>1 = changes status, 2 = delete\
          \ container"
        required: false
        type: "string"
        enum:
        - "1"
        - "2"
        x-exportParamName: "ContainerNotFound"
        x-optionalDataType: "String"
      - name: "auth_type"
        in: "formData"
        description: "Type of authentication credentials for MS Azure and Standalone\
          \ Kubernetes."
        required: false
        type: "string"
        enum:
        - "User Credentials"
        - "Service Principal"
        - "Bearer Token"
        - "Basic Credentials"
        x-exportParamName: "AuthType"
        x-optionalDataType: "String"
      - name: "accountid"
        in: "formData"
        description: "Required for Alibaba Cloud, Amazon AWS, Kubernetes, MS Azure,\
          \ Oracle Cloud."
        required: false
        type: "string"
        x-exportParamName: "Accountid"
        x-optionalDataType: "String"
      - name: "vrfgroup"
        in: "formData"
        description: "name of vrf group for discovered subnets (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Vrfgroup"
        x-optionalDataType: "String"
      - name: "notes"
        in: "formData"
        description: "Any additional notes"
        required: false
        type: "string"
        x-exportParamName: "Notes"
        x-optionalDataType: "String"
      - name: "remove_unfound_instances"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "RemoveUnfoundInstances"
        x-optionalDataType: "String"
      - name: "strip_domain_name"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "StripDomainName"
        x-optionalDataType: "String"
      - name: "add_suffix"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "AddSuffix"
        x-optionalDataType: "String"
      - name: "match_name_only_for_virtuals"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "MatchNameOnlyForVirtuals"
        x-optionalDataType: "String"
      - name: "match_name_only_for_hypervisor"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "MatchNameOnlyForHypervisor"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "name of one or more groups separated by commas"
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "category of discovered vservers and vms"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "No Debug"
        - "Normal Debug"
        - "Extended Debug"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      - name: "secret_key"
        in: "formData"
        description: "Amazon AWS, MS Azure, OpenStack, Amazon API, Google Cloud, Alibaba\
          \ Cloud, Oracle Cloud"
        required: false
        type: "string"
        x-exportParamName: "SecretKey"
        x-optionalDataType: "String"
      - name: "regions"
        in: "formData"
        description: "Comma separated region names for Amazon AWS"
        required: false
        type: "string"
        x-exportParamName: "Regions"
        x-optionalDataType: "String"
      - name: "google_regions"
        in: "formData"
        description: "comma-separated list of Google region names"
        required: false
        type: "string"
        x-exportParamName: "GoogleRegions"
        x-optionalDataType: "String"
      - name: "oracle_regions"
        in: "formData"
        description: "comma-separated list of Oracle region names"
        required: false
        type: "string"
        x-exportParamName: "OracleRegions"
        x-optionalDataType: "String"
      - name: "subscriptionid"
        in: "formData"
        description: "MS Azure Subscription ID"
        required: false
        type: "string"
        x-exportParamName: "Subscriptionid"
        x-optionalDataType: "String"
      - name: "ip"
        in: "formData"
        description: "Amazon API URL; OpenStack URL; Standalone Kubernetes URL"
        required: false
        type: "string"
        x-exportParamName: "Ip"
        x-optionalDataType: "String"
      - name: "tenant"
        in: "formData"
        description: "OpenStack Project name; Google Project ID; Oracle Tenant ID"
        required: false
        type: "string"
        x-exportParamName: "Tenant"
        x-optionalDataType: "String"
      - name: "username"
        in: "formData"
        description: "OpenStack username - required for OpenStack"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "api_key"
        in: "formData"
        description: "Oracle Cloud Fingerprint; Linode API Key"
        required: false
        type: "string"
        x-exportParamName: "ApiKey"
        x-optionalDataType: "String"
      - name: "api_key_id"
        in: "formData"
        description: "Oracle Cloud Fingerprint; Linode API Key"
        required: false
        type: "string"
        x-exportParamName: "ApiKeyId"
        x-optionalDataType: "String"
      - name: "api_token"
        in: "formData"
        description: "Linode API token - Required for Linode"
        required: false
        type: "string"
        x-exportParamName: "ApiToken"
        x-optionalDataType: "String"
      - name: "token_key"
        in: "formData"
        description: "DigitalOcean Token Key - required for DigitalOcean."
        required: false
        type: "string"
        x-exportParamName: "TokenKey"
        x-optionalDataType: "String"
      - name: "region"
        in: "formData"
        description: "Required for Amazon AWS API discovery."
        required: false
        type: "string"
        x-exportParamName: "Region"
        x-optionalDataType: "String"
      - name: "alibaba_regions"
        in: "formData"
        description: "Comma-separated list of Alibaba Cloud region names."
        required: false
        type: "string"
        x-exportParamName: "AlibabaRegions"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute Cloud job"
      description: "Execute Cloud job"
      operationId: "putAuto_discoveryCloudaccount"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job - required if no name"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/snmp_disc/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all SNMP auto-discovery jobs."
      description: "Get all SNMP discovery jobs"
      operationId: "getAuto_discoverySnmp_disc"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    job_id:
                      example: "54"
                    name:
                      example: "snmpjob54"
                    port:
                      example: "163"
                    servers:
                      example: "192.168.3.1"
                    snmp_version:
                      example: "v3"
                    icmp_tcp_port_check:
                      example: "yes"
                    debug_level:
                      example: "Debug Off"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add or update other SNMP autodiscovery job"
      description: "Add or update other SNMP autodiscovery job"
      operationId: "postAuto_discoverySnmp_disc"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ipaddress"
        in: "formData"
        description: "IP address. Required if new"
        required: false
        type: "string"
        x-exportParamName: "Ipaddress"
        x-optionalDataType: "String"
      - name: "end_ip_address"
        in: "formData"
        description: "End IP address"
        required: false
        type: "string"
        x-exportParamName: "EndIpAddress"
        x-optionalDataType: "String"
      - name: "snmp_string"
        in: "formData"
        description: "required, if new"
        required: false
        type: "string"
        x-exportParamName: "SnmpString"
        x-optionalDataType: "String"
      - name: "remote_collector_id"
        in: "formData"
        description: "D42 ID of the remote collector to use for this job."
        required: false
        type: "string"
        x-exportParamName: "RemoteCollectorId"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      - name: "strip_domain_name"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "StripDomainName"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "name of one or more groups separated by commas"
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "snmp_port"
        in: "formData"
        description: "snmp port (integer only) (added in v10.4.0)"
        required: false
        type: "integer"
        x-exportParamName: "SnmpPort"
        x-optionalDataType: "Int32"
      - name: "snmp_version"
        in: "formData"
        required: false
        type: "string"
        default: "v2c"
        enum:
        - "v1"
        - "v2c"
        - "v3"
        x-exportParamName: "SnmpVersion"
        x-optionalDataType: "String"
      - name: "snmp_string_id"
        in: "formData"
        description: "The id of the password for the community string"
        required: false
        type: "string"
        x-exportParamName: "SnmpStringId"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_password_id"
        in: "formData"
        description: "The id of the password for the auth password"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3AuthPasswordId"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol_password_id"
        in: "formData"
        description: "The id of the password for the privacy protocol password"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3PrivacyProtocolPasswordId"
        x-optionalDataType: "String"
      - name: "snmpv3_user"
        in: "formData"
        description: "name of snmp v3 user (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3User"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_mode"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "noAuthoNoPriv"
        - "authNoPriv"
        - "authPriv"
        x-exportParamName: "Snmpv3AuthMode"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_protocol"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "MD5"
        - "SHA"
        x-exportParamName: "Snmpv3AuthProtocol"
        x-optionalDataType: "String"
      - name: "snmpv3_auth_password"
        in: "formData"
        description: "password (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3AuthPassword"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "DES"
        - "3DES"
        - "AES"
        - "AES128"
        - "AES196"
        - "AES256"
        x-exportParamName: "Snmpv3PrivacyProtocol"
        x-optionalDataType: "String"
      - name: "snmpv3_privacy_protocol_password"
        in: "formData"
        description: "password (added in v10.4.0)"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3PrivacyProtocolPassword"
        x-optionalDataType: "String"
      - name: "snmpv3_context"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "Snmpv3Context"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "No Debug"
        - "Normal Debug"
        - "Extended Debug"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      - name: "service_level"
        in: "formData"
        description: "Must already exist"
        required: false
        type: "string"
        x-exportParamName: "ServiceLevel"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute snmp autodiscovery job"
      description: "Execute snmp autodiscovery job"
      operationId: "putAuto_discoverySnmp_disc"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job - required if no name"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/ipmi/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all IPMI/Redfish auto-discovery jobs."
      description: "Get all IPMI/Redfish auto-discovery jobs"
      operationId: "getAuto_discoveryIpmi"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    job_id:
                      example: "54"
                    name:
                      example: "IPMIjob54"
                    discovery_type:
                      example: "IPMI"
                    ip_start:
                      example: "10.42.54.17"
                    ip_end:
                      example: "10.42.54.21"
                    serial_to_use:
                      example: "Product serial"
                    servers:
                      example: "192.168.3.1"
                    host_name_to_use:
                      example: "Serial / Reverse DNS / IP"
                    add_hardware_model:
                      example: "no"
                    debug_level:
                      example: "Debug Off"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add IPMI/Redfish Auto Discovery"
      description: "Add IPMI/Redfish Auto Discovery job"
      operationId: "postAuto_discoveryIpmi"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip_start"
        in: "formData"
        description: "starting IP address"
        required: true
        type: "string"
        x-exportParamName: "IpStart"
      - name: "ip_end"
        in: "formData"
        description: "ending IP address, use same as start for single address"
        required: true
        type: "string"
        x-exportParamName: "IpEnd"
      - name: "bmc_user"
        in: "formData"
        description: "username for discovery"
        required: true
        type: "string"
        x-exportParamName: "BmcUser"
      - name: "bmc_password"
        in: "formData"
        description: "password for discovery"
        required: true
        type: "string"
        x-exportParamName: "BmcPassword"
      - name: "hostname_to_use"
        in: "query"
        required: true
        type: "string"
        enum:
        - "1 (Serial # / Reverse DNS / IP)"
        - "2 (Discovered Name / Serial # / Reverse DNS / IP)"
        - "3 (Reverse DNS / Discovered Name / Serial # / IP)"
        x-exportParamName: "HostnameToUse"
      - name: "update_model_if_found"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "UpdateModelIfFound"
        x-optionalDataType: "String"
      - name: "run_as_operator"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "RunAsOperator"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "overwrite_object_categories"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "OverwriteObjectCategories"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "groups"
        in: "formData"
        description: "name of one or more groups separated by commas"
        required: false
        type: "string"
        x-exportParamName: "Groups"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      - name: "discovery_type"
        in: "formData"
        required: false
        type: "string"
        default: "IPMI"
        enum:
        - "IPMI"
        - "Redfish"
        x-exportParamName: "DiscoveryType"
        x-optionalDataType: "String"
      - name: "remote_collector_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "RemoteCollectorId"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "IPMI auto-discovery job added"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute snmp autodiscovery job"
      description: "Execute snmp autodiscovery job"
      operationId: "putAuto_discoveryIpmi"
      parameters:
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/ucs/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all UCS/ACI/Load Balancer auto-discovery jobs."
      description: "Get all UCS/ACI/Load Balancer auto-discovery jobs"
      operationId: "getAuto_discoveryUcs"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    decommissioned_service_level_id:
                      example: ""
                    job_id:
                      example: "54"
                    hostname_to_use:
                      example: "2"
                    platform:
                      example: "UCS"
                    name:
                      example: "UCSjob54"
                    exclude_servers:
                      example: ""
                    server:
                      example: "10.42.54.21"
                    device_category:
                      example: ""
                    schedule_days:
                      example: "1,2,4"
                    schedule_time:
                      example: "1380"
                    debug_level:
                      example: "Debug Off"
                    port:
                      example: "443"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add or update UCS/ACI/Load Balancer Auto Discovery"
      description: "Add or update a UCS/ACI/Load Balancer auto-discovery job."
      operationId: "postAuto_discoveryUcs"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "remote_collector_id"
        in: "formData"
        required: false
        type: "string"
        x-exportParamName: "RemoteCollectorId"
        x-optionalDataType: "String"
      - name: "platform"
        in: "formData"
        description: "Required"
        required: true
        type: "string"
        enum:
        - "UCS"
        - "ACI"
        - "F5"
        - "NetScaler"
        - "Alteon"
        - "Cisco Prime"
        x-exportParamName: "Platform"
      - name: "server"
        in: "formData"
        description: "FQDN or IP of the server(s) or CIDR or ranges"
        required: false
        type: "string"
        x-exportParamName: "Server"
        x-optionalDataType: "String"
      - name: "port"
        in: "formData"
        description: "Default is 443 - use this default if you are not sure."
        required: true
        type: "string"
        x-exportParamName: "Port"
      - name: "use_ssl"
        in: "formData"
        description: "Default is Yes - use this default if you are not sure."
        required: false
        type: "string"
        enum:
        - "Yes"
        - "No"
        x-exportParamName: "UseSsl"
        x-optionalDataType: "String"
      - name: "exclude_servers"
        in: "formData"
        description: "Servers to ignore"
        required: false
        type: "string"
        x-exportParamName: "ExcludeServers"
        x-optionalDataType: "String"
      - name: "username"
        in: "formData"
        required: true
        type: "string"
        x-exportParamName: "Username"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
        x-exportParamName: "Password"
      - name: "hostname_to_use"
        in: "formData"
        description: "Required - relevant for new devices only. If a device with same\
          \ serial number already exists, name is ignored"
        required: true
        type: "string"
        enum:
        - "Serial #"
        - "Discovered Name"
        x-exportParamName: "HostnameToUse"
      - name: "hostname_precedence"
        in: "formData"
        description: "Discovered name for the device is given precedence over existing\
          \ name in the system."
        required: false
        type: "string"
        enum:
        - "Yes"
        - "No"
        x-exportParamName: "HostnamePrecedence"
        x-optionalDataType: "String"
      - name: "toggle_service_level_on_power_state"
        in: "formData"
        description: "Toggle the service level of a device based on power state."
        required: false
        type: "string"
        enum:
        - "Yes"
        - "No"
        x-exportParamName: "ToggleServiceLevelOnPowerState"
        x-optionalDataType: "String"
      - name: "decommissioned_service_level_id"
        in: "formData"
        description: "Service level for decommissioned devices."
        required: false
        type: "string"
        x-exportParamName: "DecommissionedServiceLevelId"
        x-optionalDataType: "String"
      - name: "vrf_group_id"
        in: "formData"
        description: "VRF Group for discovered devices."
        required: false
        type: "string"
        x-exportParamName: "VrfGroupId"
        x-optionalDataType: "String"
      - name: "object_category"
        in: "formData"
        description: "Existing object category will not be overwritten."
        required: false
        type: "string"
        x-exportParamName: "ObjectCategory"
        x-optionalDataType: "String"
      - name: "overwrite_object_categories"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "OverwriteObjectCategories"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      - name: "clear_existing_schedule"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "ClearExistingSchedule"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        enum:
        - "Debug Off"
        - "Debug On"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute UCS/ACI/Load Balancer autodiscovery job"
      description: "Execute UCS/ACI/Load Balancer autodiscovery job"
      operationId: "putAuto_discoveryUcs"
      parameters:
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/dns/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all auto-discovery jobs for dns."
      description: "Get DNS Auto Discovery Jobs"
      operationId: "getAuto_discoveryDns"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    nameserver:
                      example: "192.168.11.104"
                    zonename:
                      example: "10.10.in-addr.arpa"
                    job_id:
                      example: "10"
                    schedule:
                      example: "M T W Th F S Su 09:44:18 ; M T F S Su 09:44:23 ;"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add DNS Auto Discovery"
      description: "Add DNS Auto Discovery job"
      operationId: "postAuto_discoveryDns"
      parameters:
      - name: "zonename"
        in: "formData"
        description: "name of the zone"
        required: true
        type: "string"
        x-exportParamName: "Zonename"
      - name: "nameserver"
        in: "formData"
        description: "IP/FQDN of the nameserver"
        required: true
        type: "string"
        x-exportParamName: "Nameserver"
      - name: "remote_collector_id"
        in: "formData"
        description: "D42 ID of the remote collector to use for this job."
        required: false
        type: "string"
        x-exportParamName: "RemoteCollectorId"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "DNS Zone auto-discovery job added"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute DNS job"
      description: "Execute DNS Auto Discovery Job"
      operationId: "putAuto_discoveryDns"
      parameters:
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/auto_discovery/certificate/:
    get:
      tags:
      - "Auto-Discovery"
      summary: "Retrieves all auto-discovery jobs for dns."
      description: "Get Certificate Auto Discovery Jobs"
      operationId: "getAuto_discoveryCertificate"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    end_ip_address:
                      example: "10.42.42.100"
                    follow_chain:
                      example: "no"
                    job_id:
                      example: "1"
                    name:
                      example: "D42"
                    ports:
                      example: "443"
                    start_ip_address:
                      example: "10.42.42.0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Auto-Discovery"
      summary: "Add Certificate Auto Discovery"
      description: "Add Certificate Auto Discovery job"
      operationId: "postAuto_discoveryCertificate"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "start_ip_address"
        in: "formData"
        description: "beginning of IP address range"
        required: true
        type: "string"
        x-exportParamName: "StartIpAddress"
      - name: "end_ip_address"
        in: "formData"
        description: "End IP address"
        required: true
        type: "string"
        x-exportParamName: "EndIpAddress"
      - name: "server"
        in: "formData"
        description: "IP or FQDN of target server"
        required: false
        type: "string"
        x-exportParamName: "Server"
        x-optionalDataType: "String"
      - name: "exclude_servers"
        in: "formData"
        description: "comma separated liste of addresses to exclude"
        required: false
        type: "string"
        x-exportParamName: "ExcludeServers"
        x-optionalDataType: "String"
      - name: "ports"
        in: "formData"
        description: "default is 443, comma separated"
        required: false
        type: "string"
        x-exportParamName: "Ports"
        x-optionalDataType: "String"
      - name: "follow_chain"
        in: "formData"
        required: false
        type: "string"
        default: "no"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "FollowChain"
        x-optionalDataType: "String"
      - name: "debug_level"
        in: "formData"
        required: false
        type: "string"
        default: "no"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "DebugLevel"
        x-optionalDataType: "String"
      - name: "schedule_time"
        in: "formData"
        description: "Time in HH:MM format if you want to schedule the job. Note:\
          \ Must be formatted as text NOT date. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleTime"
        x-optionalDataType: "String"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Certificate auto-discovery job added"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    put:
      tags:
      - "Auto-Discovery"
      summary: "Execute Certificate job"
      description: "Execute Certificate Auto Discovery Job"
      operationId: "putAuto_discoveryCertificate"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of the job - required if no job_id"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "job_id"
        in: "formData"
        description: "D42 ID for the job - required if no name"
        required: false
        type: "string"
        x-exportParamName: "JobId"
        x-optionalDataType: "String"
      - name: "run"
        in: "formData"
        description: "yes to start"
        required: true
        type: "string"
        x-exportParamName: "Run"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Task is scheduled for running"
              code:
                example: "0"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  :4343/healthstats/:
    get:
      tags:
      - "Get Healthstatus"
      summary: "This will return the health status of Device42 including the status\
        \ of recent backups."
      description: "Get Healthstatus"
      operationId: "getHealthstats"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            $ref: "#/definitions/Backup_status"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  :4343/api/1.0/backup_schedules/:
    get:
      tags:
      - "Backup Schedules"
      summary: "Get Backup Schedules"
      description: "Get Backup Schedules"
      operationId: "getBackup_schedules"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              jobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    job_id:
                      example: "1"
                    method:
                      example: "3"
                    name:
                      example: "test"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
    post:
      tags:
      - "Backup Schedules"
      summary: "Set Backup Schedules via API"
      description: "This will create a scheduled backup nightly at 11:00 PM, using\
        \ the NFS server settings."
      operationId: "postBackup_schedules"
      parameters:
      - name: "name"
        in: "formData"
        description: "name of backup job"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "method"
        in: "formData"
        description: "Backup method: 1 for mail,2 for sftp,3 for nfs or 4 for amazon\
          \ s3"
        required: true
        type: "string"
        x-exportParamName: "Method"
      - name: "schedule_time"
        in: "formData"
        description: "time to perform backup (0:00 to 23:59)"
        required: true
        type: "string"
        x-exportParamName: "ScheduleTime"
      - name: "schedule_days"
        in: "formData"
        description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil\
          \ set the job for Mon, Tue and Wed. For multiple schedules, separate with\
          \ a slash (/)."
        required: false
        type: "string"
        x-exportParamName: "ScheduleDays"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: ""
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  :4343/api/1.0/appliancemode/:
    post:
      tags:
      - "Set Standby or Production Mode"
      summary: "Set Standby or Production Mode"
      description: "This will set the Device42 appliance to Standby or Production\
        \ mode. Used in conjunction with automatic backups and restores for a warm\
        \ HA solution."
      operationId: "postAppliancemode"
      parameters:
      - name: "appliance_mode"
        in: "formData"
        required: true
        type: "string"
        enum:
        - "standby"
        - "production"
        x-exportParamName: "ApplianceMode"
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              msg:
                example: "Appliance Manager standby mode set to True. Background jobs\
                  \ disabled"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
  /api/1.0/tags/:
    get:
      tags:
      - "Get all Tags"
      summary: "This will return a full list of tags available in your Device42 instance."
      description: "Get all Tags"
      operationId: "getTags"
      parameters: []
      responses:
        "200":
          description: "The above command returns results like this:"
          schema:
            properties:
              limit:
                example: "1000"
              offset:
                example: "0"
              tags:
                type: "array"
                items:
                  type: "object"
                  properties:
                    name:
                      example: "1 tag"
              total_count:
                example: "30"
        "400":
          description: "Bad Request (A validation exception has occurred.)"
          examples:
            errors:
            - code: 400
              reason: "BAD_REQUEST"
              title: "The error response code title."
              detail: "Details of the error response."
        "401":
          description: "Unauthorized (Your credentials suck)"
          examples:
            errors:
            - code: 401
              reason: "Unauthorized"
              title: "Unauthorized"
              detail: "Your credentials suck"
        "403":
          description: "Forbidden (The resource requested is hidden)"
          examples:
            errors:
            - code: 403
              reason: "Forbidden"
              title: "Forbidden"
              detail: "The resource requested is hidden"
        "404":
          description: "Not Found (The specified resource could not be found)"
          examples:
            errors:
            - code: 404
              reason: "Not Found"
              title: "Not Found"
              detail: "The specified resource could not be found."
        "405":
          description: "Method Not Allowed (You tried to access a resource with an\
            \ invalid method)"
          examples:
            errors:
            - code: 405
              reason: "Method Not Allowed"
              title: "Method Not Allowed"
              detail: "You tried to access a resource with an invalid method"
        "410":
          description: "Gone (The resource requested has been removed from our servers)"
          examples:
            errors:
            - code: 410
              reason: "Gone"
              title: "Gone"
              detail: "The resource requested has been removed from our servers."
        "500":
          description: "Internal Server Error (Some parameter missing or issue with\
            \ the server. Check with returned “msg” from the call.)"
          examples:
            errors:
            - code: 500
              reason: "Internal Server Error"
              title: "Internal Server Error"
              detail: "Some parameter missing or issue with the server. Check with\
                \ returned “msg” from the call."
        "503":
          description: "Service Unavailable (Please check if your Device42 instance\
            \ is working normally.)"
          examples:
            errors:
            - code: 503
              reason: "Service Unavailable"
              title: "Service Unavailable"
              detail: "Please check if your Device42 instance is working normally."
definitions:
  devices:
    type: "array"
    items:
      $ref: "#/definitions/device"
  device:
    type: "object"
    properties:
      asset_no:
        example: "null"
      device_id:
        example: "34"
      device_url:
        example: "/api/api/1.0/devices/id/34/"
      name:
        example: "320"
      serial_no:
        example: "null"
      uuid:
        example: "07FCE572-B2B3-B44C-BB1C-6799B509CC31"
  devicesAll:
    type: "object"
    properties:
      total_count:
        example: "8305"
      limit:
        example: "1"
      aliases:
        $ref: "#/definitions/deviceAllAliase"
      asset_no:
        example: "0019"
      building:
        example: "New Haven"
      category:
        example: "Development Machines"
      cpucore:
        example: "2"
      cpucount:
        example: "1"
      cpuspeed:
        example: "3300.0"
      custom_fields:
        type: "array"
        items:
          $ref: "#/definitions/deviceAllCustomFieldData"
      customer:
        example: "Infrastructure Services"
      customer_id:
        example: "9"
      device_external_links:
        $ref: "#/definitions/deviceAllExternalLink"
      device_id:
        example: "136"
      device_purchase_line_items:
        $ref: "#/definitions/deviceAllpurchaseLine"
      hdd_details:
        $ref: "#/definitions/deviceAllHdd"
      groups:
        example: "Prod_East:no, Corp:yes"
      hddcount:
        example: "2"
      hddraid:
        example: "null"
      hddraid_type:
        example: "null"
      hddsize:
        example: ""
      hw_depth:
        example: "1"
      hw_model:
        example: ""
      hw_size:
        example: "1.0"
      id:
        example: "136"
      in_service:
        example: "true"
      ip_addresses:
        type: "array"
        items:
          $ref: "#/definitions/deviceAllIp_addresses"
      last_updated:
        example: "2016-07-05T22:08:34.084Z"
      mac_addresses:
        type: "array"
        items:
          $ref: "#/definitions/deviceAllMac_addresses"
      manufacturer:
        example: "Super Micro Computer, Inc."
      name:
        example: "NHCTWS001"
      notes:
        example: ""
      orientation:
        example: "1"
      os:
        example: "Microsoft Windows 7 Professional"
      osarch:
        example: "64"
      osver:
        example: "64bit"
      osverno:
        example: "7.1"
      rack:
        example: "NH-DC1-11"
      rack_id:
        example: "39"
      ram:
        example: "4096.0"
      room:
        example: "NHDC1"
      row:
        example: "2"
      serial_no:
        example: "409357205"
      service_level:
        example: "Production"
      start_at:
        example: "24.0"
      tags:
        example: ""
      type:
        example: "physical"
      ucs_manager:
        example: "null"
      uuid:
        example: ""
      virtual_host_name:
        example: "null"
      virtual_subtype:
        example: "Hyper-V"
      where:
        example: "5"
      xpos:
        example: "0"
    example:
      cpucore: "2"
      aliases: ""
      notes: ""
      hddsize: ""
      type: "physical"
      uuid: ""
      building: "New Haven"
      ucs_manager: "null"
      hddraid: "null"
      hddcount: "2"
      limit: "1"
      id: "136"
      ram: "4096.0"
      last_updated: "2016-07-05T22:08:34.084Z"
      device_id: "136"
      custom_fields: ""
      service_level: "Production"
      hw_model: ""
      tags: ""
      virtual_subtype: "Hyper-V"
      asset_no: "0019"
      rack_id: "39"
      hw_size: "1.0"
      name: "NHCTWS001"
      serial_no: "409357205"
      in_service: "true"
      ip_addresses:
      - subnet: "Infra-10.1.10.0/24(Infrastructure Services)"
        ip: "10.1.10.11"
        subnet_id: "4"
        macaddress: "00:14:bf:aa:46:18"
        label: ""
        type: "1"
      - subnet: "Infra-10.1.10.0/24(Infrastructure Services)"
        ip: "10.1.10.11"
        subnet_id: "4"
        macaddress: "00:14:bf:aa:46:18"
        label: ""
        type: "1"
      start_at: "24.0"
      manufacturer: "Super Micro Computer, Inc."
      osarch: "64"
      hdd_details: ""
      where: "5"
      device_external_links: ""
      row: "2"
      mac_addresses:
      - port_name: ""
        vlan: "null"
        port: "FastEthernet0/4 @ nh-lab-switch-01"
        mac: "00:11:22:33:44:55"
      - port_name: ""
        vlan: "null"
        port: "FastEthernet0/4 @ nh-lab-switch-01"
        mac: "00:11:22:33:44:55"
      hw_depth: "1"
      cpuspeed: "3300.0"
      orientation: "1"
      rack: "NH-DC1-11"
      os: "Microsoft Windows 7 Professional"
      xpos: "0"
      total_count: "8305"
      hddraid_type: "null"
      groups: "Prod_East:no, Corp:yes"
      device_purchase_line_items: ""
      osver: "64bit"
      room: "NHDC1"
      virtual_host_name: "null"
      cpucount: "1"
      category: "Development Machines"
      customer_id: "9"
      customer: "Infrastructure Services"
      osverno: "7.1"
  deviceAllAliase:
    type: "array"
    items:
      example: "NHCTWS001.fqdn"
  deviceAllCustomField:
    type: "array"
    items:
      $ref: "#/definitions/deviceAllCustomFieldData"
  deviceAllCustomFieldData:
    type: "object"
    properties:
      key:
        type: "string"
        example: "Skynet"
      notes:
        type: "string"
        example: ""
      value:
        type: "string"
        example: "T1000"
  deviceAllExternalLink:
    type: "array"
    items:
      $ref: "#/definitions/deviceAllExternalLinkData"
  deviceAllExternalLinkData:
    type: "object"
    properties:
      link:
        example: "http://{{device.name}}"
      notes:
        example: "Dev Test web server"
  deviceAllpurchaseLine:
    type: "array"
    items:
      $ref: "#/definitions/deviceAllpurchaseLineData"
  deviceAllpurchaseLineData:
    type: "object"
    properties:
      line_cancel_policy:
        example: ""
      line_contract_type:
        example: "Warranty"
      line_cost:
        example: "400.0"
      line_cost_center:
        example: "5001245"
      line_end_date:
        example: "2017-01-09"
      line_frequency:
        example: "One Time"
      line_item_type:
        example: "Device"
      line_no:
        example: "1"
      line_notes:
        example: ""
      line_quantity:
        example: "1"
      line_renew_date:
        example: "2017-01-09"
      line_start_date:
        example: "2017-01-09"
      line_type:
        example: "Contract"
      purchase_id:
        example: "9"
      purchase_order_no:
        example: "010914Warr"
  deviceAllHdd:
    type: "array"
    items:
      $ref: "#/definitions/deviceAllHddData"
  deviceAllHddData:
    type: "object"
    properties:
      description:
        example: ""
      hdd:
        $ref: "#/definitions/deviceAllHddData_hdd"
      hddcount:
        example: "1"
      raid_group:
        example: ""
      raid_type:
        example: "Raid 1"
  deviceAllIp_addresses:
    type: "object"
    properties:
      ip:
        example: "10.1.10.11"
      label:
        example: ""
      macaddress:
        example: "00:14:bf:aa:46:18"
      subnet:
        example: "Infra-10.1.10.0/24(Infrastructure Services)"
      subnet_id:
        example: "4"
      type:
        example: "1"
    example:
      subnet: "Infra-10.1.10.0/24(Infrastructure Services)"
      ip: "10.1.10.11"
      subnet_id: "4"
      macaddress: "00:14:bf:aa:46:18"
      label: ""
      type: "1"
  deviceAllMac_addresses:
    type: "object"
    properties:
      mac:
        example: "00:11:22:33:44:55"
      port:
        example: "FastEthernet0/4 @ nh-lab-switch-01"
      port_name:
        example: ""
      vlan:
        example: "null"
    example:
      port_name: ""
      vlan: "null"
      port: "FastEthernet0/4 @ nh-lab-switch-01"
      mac: "00:11:22:33:44:55"
  devicesCustomerId:
    type: "object"
    properties:
      Devices:
        $ref: "#/definitions/deviceCustomerIdDevice"
    example:
      Devices: ""
  deviceCustomerIdDevice:
    type: "array"
    items:
      $ref: "#/definitions/deviceCustomerIdDeviceData"
  deviceCustomerIdDeviceData:
    type: "object"
    properties:
      aliases:
        type: "array"
        items:
          example: "device.domain"
      asset_no:
        example: "null"
      category:
        example: "Development Machine"
      cpucore:
        example: "2"
      cpucount:
        example: "1"
      cpuspeed:
        example: "3300.0"
      custom_fields:
        example: ""
      customer:
        example: "Finance Group"
      customer_id:
        example: "3"
      device_external_links:
        example: ""
      device_purchase_line_items:
        example: ""
      hdd_details:
        example: ""
      hddcount:
        example: ""
      hddraid:
        example: ""
      hddraid_type:
        example: ""
      hddsize:
        example: ""
      hw_depth:
        example: "1"
      hw_model:
        example: "ProLiant DL360 G7"
      hw_size:
        example: "1.0"
      in_service:
        example: "false"
      ip_addresses:
        type: "array"
        items:
          $ref: "#/definitions/deviceAllIp_addresses"
      last_updated:
        example: "2014-01-07T02:23:36.350Z"
      mac_addresses:
        type: "array"
        items:
          $ref: "#/definitions/deviceCustomerIdMac_addresses"
      manufacturer:
        example: ""
      name:
        example: "d42-231"
      notes:
        example: ""
      os:
        example: ""
      ram:
        example: "512.000"
      serial_no:
        example: ""
      service_level:
        example: "QA"
      type:
        example: "virtual"
      ucs_manager:
        example: ""
      uuid:
        example: "6BB7DC86-D744-8943-B991-B6BF82B55F99"
      virtual_host_name:
        example: "HYPER01"
  deviceCustomerIdMac_addresses:
    type: "object"
    properties:
      mac:
        example: "00:15:5d:0b:72:0b"
  devicesImpactList:
    type: "array"
    items:
      $ref: "#/definitions/devicesImpactListData"
  devicesImpactListData:
    type: "object"
    properties:
      children:
        type: "array"
        items:
          $ref: "#/definitions/devicesImpactListData_children_3"
      duplicate:
        example: "yes"
      name:
        example: "Apache Tomcat server"
  deviceName:
    example:
    - "device added or updated"
    - 46
    - "db-080-westport"
    - true
    - true
  IPAMsubnets:
    type: "object"
    properties:
      allocated:
        example: "no"
      allow_broadcast_address:
        example: "no"
      allow_network_address:
        example: "no"
      assigned:
        example: "no"
      can_edit:
        example: "yes"
      category_id:
        example: ""
      category_name:
        example: ""
      custom_fields:
        example: ""
      customer_id:
        example: "9"
      description:
        example: "Infrastructure Devices"
      gateway:
        example: ""
      mask_bits:
        example: "24"
      name:
        example: "Infra"
      network:
        example: "10.1.10.0"
      notes:
        example: ""
      parent_subnet_id:
        example: ""
      parent_vlan_id:
        example: ""
      parent_vlan_name:
        example: ""
      parent_vlan_number:
        example: ""
      range_begin:
        example: "10.1.10.5"
      range_end:
        example: "10.1.10.254"
      service_level:
        example: "Production"
      subnet_id:
        example: "4"
      tags:
        example: ""
      vrf_group_id:
        example: "1"
      vrf_group_name:
        example: "Infrastructure Services"
    example:
      vrf_group_id: "1"
      category_name: ""
      notes: ""
      description: "Infrastructure Devices"
      parent_subnet_id: ""
      network: "10.1.10.0"
      category_id: ""
      range_begin: "10.1.10.5"
      allow_broadcast_address: "no"
      mask_bits: "24"
      parent_vlan_name: ""
      allocated: "no"
      range_end: "10.1.10.254"
      allow_network_address: "no"
      custom_fields: ""
      service_level: "Production"
      vrf_group_name: "Infrastructure Services"
      can_edit: "yes"
      tags: ""
      name: "Infra"
      subnet_id: "4"
      assigned: "no"
      parent_vlan_id: ""
      customer_id: "9"
      parent_vlan_number: ""
      gateway: ""
  IPAMvlans:
    type: "object"
    properties:
      description:
        example: ""
      name:
        example: "CRMConsultant"
      notes:
        example: ""
      number:
        example: "20"
      switches:
        type: "array"
        items:
          $ref: "#/definitions/IPAMvlans_switches"
      tags:
        example: ""
      vlan_id:
        example: "13"
    example:
      number: "20"
      vlan_id: "13"
      notes: ""
      name: "CRMConsultant"
      switches:
      - asset_no: ""
        device_url: "/api/api/1.0/devices/id/1/"
        device_id: "1"
        name: "nh-lab-switch-01"
        serial_no: "FAB0447Y35M"
        uuid: ""
      - asset_no: ""
        device_url: "/api/api/1.0/devices/id/1/"
        device_id: "1"
        name: "nh-lab-switch-01"
        serial_no: "FAB0447Y35M"
        uuid: ""
      description: ""
      tags: ""
  IPAMips:
    type: "object"
    properties:
      available:
        example: "no"
      custom_fields:
        type: "array"
        items:
          $ref: "#/definitions/IPAMips_custom_fields"
      device:
        example: "USNHCTVH001"
      device_id:
        example: "116"
      id:
        example: "38"
      ip:
        example: "10.1.10.5"
      label:
        example: ""
      last_updated:
        example: "2015-11-12T17:31:57.985Z"
      mac_address:
        example: ""
      mac_id:
        example: ""
      notes:
        example: ""
      subnet:
        example: "Infra-10.1.10.0/24(Infrastructure Services)"
      subnet_id:
        example: "4"
      type:
        example: "Reserved"
  IPAMmacs:
    type: "object"
    properties:
      device:
        $ref: "#/definitions/IPAMmacs_device"
      macaddress:
        example: "00:0a:cd:1f:c9:2f"
      macaddress_id:
        example: "24"
      port_name:
        example: "vmnic0"
  IPAMmacs_port:
    type: "object"
    properties:
      description:
        example: "FastEthernet0/21"
      devices:
        example: "nh-hyperv-02"
      is_connected:
        example: "yes"
      mac_ids:
        example: "61; 60"
      macs:
        example: "00:15:5d:0b:9e:02; 00:1c:c4:44:d1:32"
      normalized_port:
        example: "FastEthernet0000/0021"
      obj_label:
        example: "Hyper-V Virtual Ethernet Adapte"
      port:
        example: "FastEthernet0/21"
      switch:
        $ref: "#/definitions/IPAMmacs_port_switch"
      switchport_id:
        example: "10"
      tags:
        example: ""
      type:
        example: ""
      vlan_ids:
        example: "14"
      vlans:
        example: "default"
  IPMtap_ports:
    type: "object"
    properties:
      id:
        example: "7"
      label:
        example: ""
      mac:
        example: ""
      mirror_port_id:
        example: ""
      module:
        example: "tap"
      module_id:
        example: "666"
      monitor_direction:
        example: ""
      monitor_port_1_id:
        example: ""
      monitor_port_2_id:
        example: ""
      netport_id:
        example: ""
      port_capability:
        example: "Device"
      port_to_from_id:
        example: ""
      port_type:
        example: "Fiber FC"
      port_type_id:
        example: "5"
      tap:
        example: "tap device"
      tap_id:
        example: "9129"
  IPMdns_records:
    type: "object"
    properties:
      name:
        example: "@"
      prio:
        example: ""
      dns_zone:
        example: "device42.pvt"
      content:
        example: "nh-win2k8r2-vm-03 hostmaster 107489 900 600 86400 3600"
      ttl:
        example: "3600"
      change_date:
        example: ""
      nameserver:
        example: "192.168.11.161"
      type:
        example: "SOA"
      id:
        example: "1"
  buildings:
    type: "array"
    items:
      $ref: "#/definitions/buildings_inner"
  rooms:
    type: "array"
    items:
      $ref: "#/definitions/rooms_inner"
  RoomsRacks:
    type: "object"
    properties:
      rack:
        $ref: "#/definitions/RoomsRacks_rack"
  racks:
    type: "object"
    properties:
      asset_no:
        example: ""
      available_u:
        example: "45"
      building:
        example: "Building"
      col_size:
        example: "1"
      custom_fields:
        example: ""
      first_number:
        example: "1"
      groups:
        example: ""
      manufacturer:
        example: "APC Inc."
      name:
        example: "RA1"
      notes:
        example: ""
      number_between_us:
        example: "true"
      numbering_start_from_bottom:
        example: "yes"
      rack_id:
        example: "255"
      rack_middle_option:
        example: "End at"
      rack_url:
        example: "/api/api/1.0/racks/255/"
      room:
        example: "Main room"
      row:
        example: ""
      row_size:
        example: "1"
      size:
        example: "45"
      start_col:
        example: "4"
      start_row:
        example: "2"
      tags:
        example: ""
  RackDevices:
    type: "object"
    properties:
      depth:
        example: "Full Depth"
      device:
        $ref: "#/definitions/RackDevices_device"
      file_names:
        example: ""
      orientation:
        example: "Front"
      reversed:
        example: "no"
      size:
        example: "2"
      start_at:
        example: "1"
      where:
        example: "Rack Mounted"
      width:
        example: "2520"
      xpos:
        example: "0"
  Assets:
    type: "object"
    properties:
      asset_contracts:
        example: ""
      asset_id:
        example: "16"
      asset_no:
        example: "0075"
      asset_purchases:
        example: ""
      building:
        example: "New Haven"
      custom_fields:
        example: ""
      depth:
        example: "Half Depth"
      imagefile_id:
        example: "2"
      name:
        example: "DC1R5PP1"
      notes:
        example: ""
      orientation:
        example: "Front"
      patch_panel_model_id:
        example: "5"
      rack:
        example: "NH-DC1-05"
      rack_id:
        example: "24"
      room:
        example: "NHDC1"
      row:
        example: "2"
      serial_no:
        example: ""
      service_level:
        example: "In Service"
      size:
        example: "2"
      start_at:
        example: "40"
      type:
        example: "Patch Panel"
      vendor:
        example: "Black Box Corp."
      vendor_id:
        example: "36"
      where:
        example: "Rack Mounted"
    example:
      orientation: "Front"
      rack: "NH-DC1-05"
      notes: ""
      custom_fields: ""
      service_level: "In Service"
      asset_id: "16"
      patch_panel_model_id: "5"
      start_at: "40"
      type: "Patch Panel"
      building: "New Haven"
      room: "NHDC1"
      asset_no: "0075"
      rack_id: "24"
      asset_purchases: ""
      depth: "Half Depth"
      asset_contracts: ""
      size: "2"
      vendor: "Black Box Corp."
      vendor_id: "36"
      name: "DC1R5PP1"
      imagefile_id: "2"
      where: "Rack Mounted"
      row: "2"
      serial_no: ""
  object_categories:
    type: "object"
    properties:
      description:
        example: "Devices that the Network Administration team should have full access\
          \ to"
      name:
        example: "Network Admin Team"
  HardwareModels:
    type: "object"
    properties:
      back_image_id:
        example: "746"
      back_image_url:
        example: "/var/www/graphics/images/dellback.png"
      blade_size:
        example: ""
      depth:
        example: "Full Depth"
      front_image_id:
        example: "747"
      front_image_url:
        example: "/var/www/graphics/images/dellfront.png"
      hardware_id:
        example: "317"
      manufacturer:
        example: "Dell Inc."
      name:
        example: "Precision 3420"
      notes:
        example: ""
      part_no:
        example: ""
      size:
        example: "2"
      spec_url:
        example: ""
      type:
        example: "physical"
      watts:
        example: ""
      width_ratio_raw:
        example: "2520"
  OperatingSystems:
    type: "object"
    properties:
      aliases:
        example: ""
      category:
        example: ""
      id:
        example: "1"
      licensed_count:
        example: "5"
      manufacturer:
        example: ""
      name:
        example: "Microsoft Windows 7 Professional"
      not_licensed_count:
        example: "0"
      notes:
        example: ""
      total_count:
        example: "5"
  Device_os:
    type: "object"
    properties:
      count_in_licensing:
        example: "yes"
      device:
        example: "NHCTS003"
      device_id:
        example: "120"
      device_os_id:
        example: "2"
      id:
        example: "2"
      license_key:
        example: ""
      os:
        example: "Microsoft Windows Server 2008 STD"
      os_id:
        example: "2"
      osver:
        example: ""
      osverno:
        example: ""
  Pdu_models:
    type: "object"
    properties:
      back_image:
        $ref: "#/definitions/Pdu_models_back_image"
      depth:
        example: "Half Depth"
      description:
        example: ""
      front_image:
        $ref: "#/definitions/Pdu_models_front_image"
      manufacturer:
        example: "Server Technology"
      name:
        example: "CXG-8H1A113"
      notes:
        example: ""
      pdu_model_id:
        example: "7"
      port_count:
        example: "8"
      ports in pdu model:
        type: "array"
        items:
          $ref: "#/definitions/Pdu_models_ports in pdu model"
      sequential_numbering_for_ports:
        example: "false"
      size:
        example: "1"
      type:
        example: "pdu"
      width_ratio:
        example: "2520"
  Pdus:
    type: "object"
    properties:
      building:
        example: "New Haven"
      building_id:
        example: "1"
      category:
        example: "Prod_East"
      device mapping:
        example: ""
      name:
        example: "NHCTPDU01"
      notes:
        example: ""
      pdu_id:
        example: "4"
      pdu_model:
        $ref: "#/definitions/Pdus_pdu_model"
      rack:
        example: "NH-DC1-01"
      rack_id:
        example: "20"
      room:
        example: "NHDC1"
      room_id:
        example: "1"
      type:
        example: "pdu"
  Pdu_by_Id:
    type: "object"
    properties:
      building:
        example: ""
      building_id:
        example: ""
      device mapping:
        $ref: "#/definitions/Pdu_by_Id_device mapping"
      name:
        example: "UPS1"
      notes:
        example: ""
      pdu_id:
        example: "232"
      pdu_model:
        example: ""
      rack:
        example: ""
      rack_id:
        example: ""
      room:
        example: ""
      room_id:
        example: ""
      type:
        example: "ups"
    example:
      room_id: ""
      building_id: ""
      rack: ""
      rack_id: ""
      notes: ""
      pdu_model: ""
      device mapping:
        cpucore: ""
        in_service: "true"
        aliases: ""
        notes: ""
        ip_addresses: ""
        hddsize: ""
        type: "other"
        uuid: ""
        building: "New Haven"
        manufacturer: ""
        ucs_manager: ""
        hddraid: ""
        hddcount: ""
        pdu_mapping_url: "/api/api/1.0/power_units/232/"
        hdd_details: ""
        device_external_links: ""
        id: "122"
        mac_addresses: ""
        hw_depth: ""
        ram: ""
        cpuspeed: ""
        last_updated: "2016-07-05T22:08:34.849Z"
        device_id: "122"
        os: ""
        custom_fields:
        - notes: ""
          value: ""
          key: "Agent email address"
        - notes: ""
          value: ""
          key: "Agent email address"
        hddraid_type: ""
        service_level: "Production"
        hw_model: ""
        device_purchase_line_items: ""
        room: "NHDC1"
        tags: ""
        asset_no: ""
        virtual_host_name: ""
        device_sub_type: "UPS"
        hw_size: ""
        name: "UPS1"
        cpucount: ""
        serial_no: ""
        customer: ""
      name: "UPS1"
      type: "ups"
      building: ""
      room: ""
      pdu_id: "232"
  Patch_panel:
    type: "object"
    properties:
      asset_contracts:
        example: ""
      asset_id:
        example: "29"
      asset_no:
        example: "0010"
      asset_purchases:
        example: ""
      building:
        example: "New Haven"
      custom_fields:
        example: ""
      customer_id:
        example: "1"
      depth:
        example: "Half Depth"
      imagefile_id:
        example: "2"
      name:
        example: "DC1R1PP1"
      no_ports:
        example: "12"
      no_ports_in_row:
        example: "12"
      notes:
        example: "Notes, Notes, Notes..."
      numbering_direction:
        example: "left-right"
      numbering_start_location:
        example: "top-left"
      orientation:
        example: "Back"
      patch_panel_model_id:
        example: "6"
      ports:
        type: "array"
        items:
          $ref: "#/definitions/Patch_panel_ports"
      rack:
        example: "NH-DC1-04"
      rack_id:
        example: "23"
      room:
        example: "NHDC1"
      row:
        example: "1"
      serial_no:
        example: "4242424242"
      service_level:
        example: "In Service"
      size:
        example: "2"
      start_at:
        example: "40"
      type:
        example: "1"
      vendor:
        example: "Black Box Corp"
      vendor_id:
        example: "36"
      where:
        example: "Rack Mounted"
    example:
      notes: "Notes, Notes, Notes..."
      asset_id: "29"
      ports:
      - panel_id: "29"
        obj_label: "LI"
        color: "#659a39"
        device_id: "153"
        object_id: "153"
        back_connection_id: "109"
        cable_color: "black"
        number: "1"
        device_name: "USNHCTVH002"
        content_type: "device"
        back_pp_id: "16"
        panel_name: "DC1R1PP1"
        full_path: "USNHCTVH002 <-> [DC1R1PP1-29:1] <-> DC1R5PP1-109:1 <-> NHCTCORE01(gbE/1)"
      - panel_id: "29"
        obj_label: "LI"
        color: "#659a39"
        device_id: "153"
        object_id: "153"
        back_connection_id: "109"
        cable_color: "black"
        number: "1"
        device_name: "USNHCTVH002"
        content_type: "device"
        back_pp_id: "16"
        panel_name: "DC1R1PP1"
        full_path: "USNHCTVH002 <-> [DC1R1PP1-29:1] <-> DC1R5PP1-109:1 <-> NHCTCORE01(gbE/1)"
      start_at: "40"
      type: "1"
      building: "New Haven"
      asset_purchases: ""
      asset_contracts: ""
      vendor: "Black Box Corp"
      numbering_start_location: "top-left"
      where: "Rack Mounted"
      no_ports: "12"
      row: "1"
      numbering_direction: "left-right"
      no_ports_in_row: "12"
      orientation: "Back"
      rack: "NH-DC1-04"
      custom_fields: ""
      service_level: "In Service"
      patch_panel_model_id: "6"
      room: "NHDC1"
      asset_no: "0010"
      rack_id: "23"
      depth: "Half Depth"
      size: "2"
      vendor_id: "36"
      name: "DC1R1PP1"
      imagefile_id: "2"
      customer_id: "1"
      serial_no: "4242424242"
  Parts:
    properties:
      asset_no:
        example: ""
      assignment:
        example: "device"
      change_perm:
        example: "yes"
      count:
        example: "1"
      custom_fields:
        example: ""
      date_changed:
        example: ""
      description:
        example: ""
      device:
        example: "AAA switch 2"
      device_id:
        example: "388"
      firmware:
        example: ""
      first_added:
        example: "2014-02-20T18:13:54.099Z"
      last_updated:
        example: "2014-11-14T22:03:08.717Z"
      part_id:
        example: "1"
      partmodel:
        $ref: "#/definitions/Parts_partmodel"
      serial_no:
        example: ""
      tags:
        example: ""
  Partmodels:
    type: "object"
    properties:
      limit:
        example: "2"
      offset:
        example: "0"
      partmodels:
        type: "array"
        items:
          $ref: "#/definitions/Partmodels_partmodels"
      total_count:
        example: "71"
    example:
      offset: "0"
      total_count: "71"
      limit: "2"
      partmodels:
      - cpuspeed: "3400"
        notes: "Socket:LGA 1155\r\nSpeedDual-channel DDR3 Memory Controller supports\
          \ DDR3-1333 and DDR3-1600 memory\r\nIntel HD Graphics 4000\r\nLimited Warranty\
          \ period (parts): 3 years\r\nLimited Warranty period (labor): 3 years\r\n"
        in_transit: "0"
        total_count: "2"
        available: "2"
        length: ""
        description: "3.4GHz (3.9GHz Turbo)"
        threads: ""
        in_rma: "0"
        modelno: ""
        used: "0"
        in_devices: "0"
        type: "CPU"
        in_storage_rooms: "2"
        manufacturer: "Intel Corp."
        in_storage_racks: "0"
        cores: "4"
        partmodel_id: "1"
        name: "Core i7-3770"
        location: "IT Lab 2nd Floor New Haven, CT"
        partno: "BX80637I73770"
      - cpuspeed: "3400"
        notes: "Socket:LGA 1155\r\nSpeedDual-channel DDR3 Memory Controller supports\
          \ DDR3-1333 and DDR3-1600 memory\r\nIntel HD Graphics 4000\r\nLimited Warranty\
          \ period (parts): 3 years\r\nLimited Warranty period (labor): 3 years\r\n"
        in_transit: "0"
        total_count: "2"
        available: "2"
        length: ""
        description: "3.4GHz (3.9GHz Turbo)"
        threads: ""
        in_rma: "0"
        modelno: ""
        used: "0"
        in_devices: "0"
        type: "CPU"
        in_storage_rooms: "2"
        manufacturer: "Intel Corp."
        in_storage_racks: "0"
        cores: "4"
        partmodel_id: "1"
        name: "Core i7-3770"
        location: "IT Lab 2nd Floor New Haven, CT"
        partno: "BX80637I73770"
  Purchases:
    type: "object"
    properties:
      limit:
        example: "1"
      offset:
        example: "0"
      purchases:
        type: "array"
        items:
          $ref: "#/definitions/Purchases_purchases"
      total_count:
        example: "11"
    example:
      offset: "0"
      purchases:
      - order_no: "R&D8152013HW"
        cost: "8500"
        notes: "R&D Workstations"
        po_date: "2013-08-15"
        custom_fields:
        - notes: ""
          value: ""
          key: "Test Custom Field"
        - notes: ""
          value: ""
          key: "Test Custom Field"
        vendor: "CDW"
        purchase_id: "3"
        groups: ""
        completed: "no"
        line_items:
        - line_completed: "no"
          line_customer: "R&D"
          line_cost: "1"
          line_notes: ""
          devices:
          - asset_no: "0019"
            device_url: "/api/api/1.0/devices/id/136/"
            device_id: "136"
            name: "NHCTWS001"
            type: "physical"
            serial_no: "409357205"
            uuid: ""
          - asset_no: "0019"
            device_url: "/api/api/1.0/devices/id/136/"
            device_id: "136"
            name: "NHCTWS001"
            type: "physical"
            serial_no: "409357205"
            uuid: ""
          line_no: "1"
          line_type: "One time Purchase/Tax etc."
          line_cost_center: "5001245"
          line_quantity: "1"
          line_item_type: "Device"
        - line_completed: "no"
          line_customer: "R&D"
          line_cost: "1"
          line_notes: ""
          devices:
          - asset_no: "0019"
            device_url: "/api/api/1.0/devices/id/136/"
            device_id: "136"
            name: "NHCTWS001"
            type: "physical"
            serial_no: "409357205"
            uuid: ""
          - asset_no: "0019"
            device_url: "/api/api/1.0/devices/id/136/"
            device_id: "136"
            name: "NHCTWS001"
            type: "physical"
            serial_no: "409357205"
            uuid: ""
          line_no: "1"
          line_type: "One time Purchase/Tax etc."
          line_cost_center: "5001245"
          line_quantity: "1"
          line_item_type: "Device"
        line_items_one_time_cost: "7081"
        customer: "R&D"
      - order_no: "R&D8152013HW"
        cost: "8500"
        notes: "R&D Workstations"
        po_date: "2013-08-15"
        custom_fields:
        - notes: ""
          value: ""
          key: "Test Custom Field"
        - notes: ""
          value: ""
          key: "Test Custom Field"
        vendor: "CDW"
        purchase_id: "3"
        groups: ""
        completed: "no"
        line_items:
        - line_completed: "no"
          line_customer: "R&D"
          line_cost: "1"
          line_notes: ""
          devices:
          - asset_no: "0019"
            device_url: "/api/api/1.0/devices/id/136/"
            device_id: "136"
            name: "NHCTWS001"
            type: "physical"
            serial_no: "409357205"
            uuid: ""
          - asset_no: "0019"
            device_url: "/api/api/1.0/devices/id/136/"
            device_id: "136"
            name: "NHCTWS001"
            type: "physical"
            serial_no: "409357205"
            uuid: ""
          line_no: "1"
          line_type: "One time Purchase/Tax etc."
          line_cost_center: "5001245"
          line_quantity: "1"
          line_item_type: "Device"
        - line_completed: "no"
          line_customer: "R&D"
          line_cost: "1"
          line_notes: ""
          devices:
          - asset_no: "0019"
            device_url: "/api/api/1.0/devices/id/136/"
            device_id: "136"
            name: "NHCTWS001"
            type: "physical"
            serial_no: "409357205"
            uuid: ""
          - asset_no: "0019"
            device_url: "/api/api/1.0/devices/id/136/"
            device_id: "136"
            name: "NHCTWS001"
            type: "physical"
            serial_no: "409357205"
            uuid: ""
          line_no: "1"
          line_type: "One time Purchase/Tax etc."
          line_cost_center: "5001245"
          line_quantity: "1"
          line_item_type: "Device"
        line_items_one_time_cost: "7081"
        customer: "R&D"
      total_count: "11"
      limit: "1"
  Appcomps_Custom_fields:
    type: "object"
    properties:
      key:
        example: "Project"
      notes:
        example: ""
      value:
        example: "Migration"
  Services:
    type: "array"
    items:
      $ref: "#/definitions/Services_inner"
    example:
    - category: ""
      vendor: ""
      description: ""
      tags: []
      notes: ""
      service-type: "null"
      displayname: "apport-autoreport"
      id: 2
    - category: ""
      vendor: ""
      description: ""
      tags: []
      notes: ""
      service-type: "null"
      displayname: "apport-forward@"
      id: 3
  Service_details:
    type: "object"
    properties:
      appcomp:
        example: "Device42 Production"
      appcomp_id:
        example: "Device42 Production"
      device:
        example: "Device42 Appliance"
      device_id:
        example: "445"
      first_detected:
        example: "2015-02-27T19:20:29.493Z"
      last_updated:
        example: "2015-02-27T19:20:44.029Z"
      service_detail_id:
        example: "3"
      service_display_name:
        example: "DB service"
      service_id:
        example: "1"
      service_name:
        example: "DB service"
      startmode:
        example: "automatic"
      state:
        example: "running"
      user:
        example: "null"
      user_id:
        example: "null"
      vendor:
        example: "null"
      vendor_id:
        example: "null"
  Service_ports:
    type: "object"
    properties:
      description:
        example: ""
      device_name:
        example: "app21.device42.pvt"
      discovered_process:
        example: ""
      discovered_service:
        example: "mysqld"
      id:
        example: "1"
      listening_ip:
        example: "127.0.0.1"
      mapped_service:
        example: ""
      port:
        example: "3306"
      remote_ips:
        example: "192.241.191.123"
  Client_stats:
    type: "object"
    properties:
      avg_time_span:
        example: "5"
      first_found:
        example: "2016-09-16T14:45:14"
      ip:
        example: "76.127.207.96"
      last_found:
        example: "2016-09-16T14:57:56"
      last_time_span:
        example: "7"
      latest_contiguous_stats:
        $ref: "#/definitions/Client_stats_latest_contiguous_stats"
      max_time_span:
        example: "7"
      min_time_span:
        example: "0"
      std_dev_time_span:
        example: "29"
      total_detected:
        example: "2"
  Networkshare_details:
    type: "object"
    properties:
      caption:
        example: "Remote Admin"
      description:
        example: "Remote Admin"
      device_name:
        example: "ovh01-w2012-04"
      first_detected:
        example: "2016-04-08T16:14:04.612Z"
      id:
        example: "5"
      install_date:
        example: ""
      last_updated:
        example: "2016-04-08T16:14:04.612Z"
      name:
        example: "ADMIN$"
      path:
        example: "C:\\Windows"
      status:
        example: "OK"
      type:
        example: "Disk Drive"
  Get_Software_details:
    type: "object"
    properties:
      count_in_licensing:
        example: "true"
      device:
        example: "d42laptop01"
      device_id:
        example: "ovh01-w2012-04"
      first_detected:
        example: "2015-05-20T12:33:13.343Z"
      id:
        example: "108"
      install_date:
        example: ""
      last_updated:
        example: "2016-04-08T16:14:04.612Z"
      license_use_count:
        example: "1.0$"
      software:
        example: "Hyper-V Tools"
      software_alias:
        example: ""
      software_id:
        example: "108"
      user:
        example: ""
      user_id:
        example: ""
      vendor:
        example: "Probus-IT"
      vendor_id:
        example: "62"
      version:
        example: "2.03.00.04"
  Get_Software_Component_details:
    type: "object"
    properties:
      aliases:
        example: "3pay, 4pay"
      category:
        example: "past_time2"
      discovered_count:
        example: ""
      id:
        example: "583"
      licensed_count:
        example: ""
      licensing_model:
        example: "Individual - Device/Perpetual"
      name:
        example: "2pay"
      notes:
        example: "test"
      software_type:
        example: "prohibited"
      tags:
        example: ""
      track_licensed_count_by_keys:
        example: "yes"
      vendor:
        example: "cisco"
  Get_Software_License_Keys:
    type: "object"
    properties:
      count:
        example: "1"
      id:
        example: "1"
      key:
        example: "124124"
      notes:
        example: ""
      software_id:
        example: "114"
      software_name:
        example: "accountsservice"
  Get_certificates:
    type: "object"
    properties:
      content_commitment_usage:
        example: "false"
      crl_sign_usage:
        example: "false"
      custom_fields:
        example: ""
      data_encipherment_usage:
        example: "false"
      days_to_expiry:
        example: "1077"
      decipher_only_usage:
        example: "false"
      digital_signature_usage:
        example: "true"
      encipher_only_usage:
        example: "false"
      extended_key_usage:
        example: "SERVERAUTH(1.3.6.1.5.5.7.3.1)\nCLIENTAUTH(1.3.6.1.5.5.7.3.2)\n"
      id:
        example: "3"
      issued_by:
        example: ""
      issued_to:
        example: "registration.device42.com"
      key_agreement_usage:
        example: "false"
      key_cert_sign_usage:
        example: "false"
      key_encipherment_usage:
        example: "true"
      parent_cert:
        example: ""
      serial_number:
        example: "77eb9b55e9228635f2157fd374b8da8"
      signature_algorithm:
        example: "sha256WithRSAEncryption"
      signature_hash:
        example: "708489795"
      subject:
        example: "/OU=Domain Control Validated/OU=PositiveSSL/CN=registration.device42.com"
      valid_from:
        example: "2014-08-10"
      valid_to:
        example: "2019-08-09"
      vendor:
        example: ""
      version:
        example: "2"
  Get_All_Password_Accounts:
    type: "object"
    properties:
      category:
        example: "Service"
      custom_fields:
        example: ""
      first_added:
        example: "2013-09-20T19:36:21.585Z"
      id:
        example: "4"
      label:
        example: "Patch Management Service Account"
      last_pw_change:
        example: "2014-03-18T13:03:04Z"
      notes:
        example: ""
      password:
        example: ""
      username:
        example: "usnhctpatchmanager"
      view_edit_groups:
        example: ""
      view_edit_users:
        example: "admin"
      view_groups:
        example: "sys_eng"
      view_users:
        example: "Ford Prefect"
  Get_all_Vendors:
    type: "object"
    properties:
      account_no:
        example: "1234"
      contact_info:
        example: "8004553432"
      escalation_1:
        example: "no"
      escalation_2:
        example: "no"
      groups:
        example: "Prod_East:no, Corp:yes"
      home_page:
        example: "www.acer.com"
      name:
        example: "Acer Incoporated"
      notes:
        example: "acer"
      vendor_id:
        example: "10"
  Customers:
    properties:
      Contacts:
        type: "array"
        items:
          $ref: "#/definitions/Customers_Contacts"
      Custom Fields:
        type: "array"
        items:
          $ref: "#/definitions/Customers_Custom Fields"
      contact_info:
        example: "555 Technical Lane, Cool City."
      devices_url:
        example: "/api/api/1.0/devices/customer_id/1/"
      groups:
        example: "Prod_East:no, Corp:yes"
      id:
        example: "1"
      name:
        example: "ABC, Inc."
      notes:
        example: "some notes here"
      subnets_url:
        example: "/api/api/1.0/subnets/customer_id/1/"
  Get_all_Circuits:
    type: "object"
    properties:
      ID:
        example: "1"
      bandwidth:
        example: ""
      circuit_id:
        example: "L3-01"
      custom_fields:
        type: "array"
        items:
          $ref: "#/definitions/Get_all_Circuits_custom_fields"
      customer:
        example: "ABC Inc."
      dmarc:
        example: "DM100"
      dmarc_id:
        example: "56"
      end_point_id:
        example: "124"
      end_point_type:
        example: "patch_panel_port"
      notes:
        example: ""
      order_date:
        example: ""
      origin_id:
        example: ""
      origin_type:
        example: ""
      provision_date:
        example: ""
      turn_on_date:
        example: ""
      type:
        example: "Dedicated Ethernet"
      vendor:
        example: ""
  Get_all_Power_Circuits:
    type: "object"
    properties:
      amps:
        example: ""
      asset_connections:
        example: ""
      bcpm:
        example: ""
      bcpm_id:
        example: ""
      breakerpanel:
        example: "Primary Breaker Panel"
      breakerpanel_id:
        example: "10"
      connection:
        example: ""
      device_connections:
        example: ""
      label:
        example: "Testing Circuits"
      number:
        example: "Main Power Circuit"
      power_circuit_id:
        example: "85"
      powerunit_connections:
        example: ""
      voltage:
        example: ""
  Cable:
    type: "object"
    properties:
      cable_id:
        example: "Fiber 1:Multi"
      cable_length:
        example: ""
      cable_length_units:
        example: "m"
      custom_fields:
        example: ""
      end_back_patch_panel:
        example: "false"
      end_cable_color:
        example: ""
      end_cable_type:
        example: ""
      end_connector_type:
        example: ""
      end_content_type:
        example: "cable"
      end_optic_type:
        example: ""
      end_point_multiple:
        example: "true"
      id:
        example: "3"
      notes:
        example: ""
      origin_back_patch_panel:
        example: "false"
      origin_cable_color:
        example: ""
      origin_cable_type:
        example: ""
      origin_connector_type:
        example: ""
      origin_content_type:
        example: "netport"
      origin_netport_id:
        example: "899"
      origin_netport_name:
        example: ""
      origin_optic_type:
        example: ""
      room:
        example: ""
      tags:
        example: ""
      vendor:
        example: ""
  getHistory:
    type: "object"
    properties:
      action:
        example: "Add/Change(API)"
      action_time:
        example: "2014-03-19T13:09:35.474Z"
      change_message:
        example: "added/edited via api with values: {u'domain': u'd42.net', u'type':\
          \ u'A', u'nameserver': u'ns1', u'name': u'oxrouter', u'ttl': u'3'}."
      content_type:
        example: "DNS A or AAAA Record"
      obj_repr:
        example: "oxrouter"
      user:
        example: "admin"
    example:
      action_time: "2014-03-19T13:09:35.474Z"
      change_message: "added/edited via api with values: {u'domain': u'd42.net', u'type':\
        \ u'A', u'nameserver': u'ns1', u'name': u'oxrouter', u'ttl': u'3'}."
      content_type: "DNS A or AAAA Record"
      action: "Add/Change(API)"
      obj_repr: "oxrouter"
      user: "admin"
  getAuditLogs:
    type: "object"
    properties:
      action:
        example: "Update"
      action_time:
        example: "2016-07-31T03:59:28.190Z"
      api_data:
        example: ""
      changed_fields:
        $ref: "#/definitions/getAuditLogs_changed_fields"
      from:
        example: "Task"
      object_fields:
        $ref: "#/definitions/getAuditLogs_object_fields"
      object_id:
        example: "889"
      object_type:
        example: "MAC Address"
      url:
        example: "Background Task"
      user:
        example: "SnmpDiscovery"
    example:
      action_time: "2016-07-31T03:59:28.190Z"
      object_type: "MAC Address"
      object_fields:
        port_name: ""
        switch_vlan_id: "11"
        device_id: ""
        first_added: "2016-05-26 14:20:00.213402+00"
        mac_address: "00:13:60:ec:ec:05"
        port_id: "47"
        id: "889"
      action: "Update"
      from: "Task"
      api_data: ""
      object_id: "889"
      user: "SnmpDiscovery"
      url: "Background Task"
      changed_fields:
        switch_vlan_id: "9"
  Backup_status:
    type: "object"
    properties:
      backup_status:
        type: "array"
        items:
          $ref: "#/definitions/Backup_status_backup_status"
      cpu_used_percent:
        example: "2.51904"
      dbsize:
        example: "84 MB"
      disk_used_percent:
        example: "8"
      memory_in_MB:
        $ref: "#/definitions/Backup_status_memory_in_MB"
    example:
      dbsize: "84 MB"
      cpu_used_percent: "2.51904"
      disk_used_percent: "8"
      backup_status:
      - job_name: "Demo Backup"
        id: "1"
        status: "Backup not run since last reboot. Please check."
      - job_name: "Demo Backup"
        id: "1"
        status: "Backup not run since last reboot. Please check."
      memory_in_MB:
        memfree: "1728"
        swapfree: "8187"
        memtotal: "3948"
        buffers: "92"
        cached: "254"
        swaptotal: "8187"
  Service_schedules:
    type: "array"
    items:
      $ref: "#/definitions/Service_schedules_inner"
    example:
    - service_name: "api_test"
      idle_time: false
      install_Date: "2019-01-01T00:00:00Z"
      day_of_month: ""
      at_startup: true
      user_id: "null"
      other_trigger: false
      arguments: ""
      event_based: false
      weeks: "0"
      status: "Complete"
      description: ""
      service_schedule_id: 1
      month_of_year: "January"
      hours: "5"
      user: "null"
      device: "dqr1400pd"
      other_type: ""
      device_id: 1
      days: "2"
      day_of_week: ""
      caption: "scheduled_task_1"
      at_logon: false
      minutes: ""
    - service_name: "api_test2"
      idle_time: false
      install_Date: "null"
      day_of_month: ""
      at_startup: false
      user_id: "null"
      other_trigger: false
      arguments: ""
      event_based: false
      weeks: ""
      status: ""
      description: ""
      service_schedule_id: 1
      month_of_year: ""
      hours: ""
      user: "null"
      device: "dqr1400pd2"
      other_type: ""
      device_id: 1
      days: ""
      day_of_week: ""
      caption: "scheduled_task_2"
      at_logon: false
      minutes: ""
  Service_schedule:
    properties:
      service_name:
        type: "string"
      idle_time:
        type: "boolean"
      install_Date:
        type: "string"
      day_of_month:
        type: "string"
      at_startup:
        type: "boolean"
      user_id:
        type: "integer"
      other_trigger:
        type: "boolean"
      arguments:
        type: "string"
      event_based:
        type: "boolean"
      weeks:
        type: "string"
      status:
        type: "string"
      description:
        type: "string"
      service_schedule_id:
        type: "integer"
      month_of_year:
        type: "string"
      hours:
        type: "string"
      user:
        type: "string"
      device:
        type: "string"
      other_type:
        type: "string"
      device_id:
        type: "integer"
      days:
        type: "string"
      day_of_week:
        type: "string"
      caption:
        type: "string"
      at_logon:
        type: "boolean"
      minutes:
        type: "string"
    example:
      service_name: "api_test"
      idle_time: false
      install_Date: "2019-01-01T00:00:00Z"
      day_of_month: ""
      at_startup: true
      user_id: "null"
      other_trigger: false
      arguments: ""
      event_based: false
      weeks: "0"
      status: "Complete"
      description: ""
      service_schedule_id: 1
      month_of_year: "January"
      hours: "5"
      user: "null"
      device: "dqr1400pd"
      other_type: ""
      device_id: 1
      days: "2"
      day_of_week: ""
      caption: "scheduled_task_1"
      at_logon: false
      minutes: ""
  Service_instances:
    type: "array"
    items:
      $ref: "#/definitions/Service_instances_inner"
    example:
    - service_detail_id: 1
      service_display_name: "apport-autoreport"
      ignore_client_connections: false
      last_updated: "2019-08-01T17:09:08.063Z"
      first_detected: "2019-07-31T19:49:07.532Z"
      vendor_id: "null"
      cmd_paths:
      - ""
      vendor: "null"
      topology_status: "Normal"
      pinned: false
      device: "D42Test1"
      state: "unknown"
      appcomps: ""
      user: "null"
      service_id: 2
      appcomp_ids: ""
      user_id: "null"
      startmode: "unknown"
      device_id: 4
    - service_detail_id: 2
      service_display_name: "apport-forward@"
      ignore_client_connections: false
      last_updated: "2019-08-01T17:09:08.063Z"
      first_detected: "2019-07-31T19:49:07.532Z"
      vendor_id: "null"
      cmd_paths:
      - ""
      vendor: "null"
      topology_status: "Normal"
      pinned: false
      device: "D42Test1"
      state: "unknown"
      appcomps: ""
      user: "null"
      service_id: 2
      appcomp_ids: ""
      user_id: "null"
      startmode: "unknown"
      device_id: 4
  Service_instance:
    properties:
      appcomps:
        type: "string"
      appcomp_ids:
        type: "string"
      device:
        type: "string"
      device_id:
        type: "integer"
      first_detected:
        type: "string"
      last_updated:
        type: "string"
      service_detail_id:
        type: "integer"
      service_display_name:
        type: "string"
      service_id:
        type: "integer"
      state:
        type: "string"
      startmode:
        type: "string"
      user:
        type: "string"
      user_id:
        type: "integer"
      vendor:
        type: "string"
      vendor_id:
        type: "integer"
      cmd_paths:
        example: ""
      ignore_client_connections:
        type: "boolean"
      topology_status:
        type: "string"
      pinned:
        type: "boolean"
    example:
      service_detail_id: 2
      service_display_name: "apport-forward@"
      ignore_client_connections: false
      last_updated: "2019-08-01T17:09:08.063Z"
      first_detected: "2019-07-31T19:49:07.532Z"
      vendor_id: "null"
      cmd_paths:
      - ""
      vendor: "null"
      topology_status: "Normal"
      pinned: false
      device: "D42Test1"
      state: "unknown"
      appcomps: ""
      user: "null"
      service_id: 2
      appcomp_ids: ""
      user_id: "null"
      startmode: "unknown"
      device_id: 4
  Service_client_connections:
    properties:
      total_count:
        example: "1"
      offset:
        example: "0"
      limit:
        example: "1000"
      client_connections:
        type: "array"
        example:
        - listener_device_id: "null"
          client_service_id: 151
          stats: []
          client_device_id: 3
          listener_mapped_service: "null"
          listener_discovered_service: "null"
          listener_mapped_service_id: "null"
          client_ip: "10.90.6.15"
          listener_device: "null"
          client_service: "systemd-resolved"
          port: 80
          client_device: "peter-ubu1604-90615.device42.pvt"
          client_process_name: "/usr/bin/wget -q -O - http://169.254.169.254/latest/dynamic/instance-identity/document"
          client_process_display_name: "wget"
          id: 2
          listener_ip: "169.254.169.254"
          type: 0
          listener_discovered_service_id: "null"
          service_port_ip_id: "null"
        items:
          $ref: "#/definitions/Service_client_connections_client_connections"
    example:
      offset: "0"
      total_count: "1"
      limit: "1000"
      client_connections:
      - listener_device_id: "null"
        client_service_id: 151
        stats: []
        client_device_id: 3
        listener_mapped_service: "null"
        listener_discovered_service: "null"
        listener_mapped_service_id: "null"
        client_ip: "10.90.6.15"
        listener_device: "null"
        client_service: "systemd-resolved"
        port: 80
        client_device: "peter-ubu1604-90615.device42.pvt"
        client_process_name: "/usr/bin/wget -q -O - http://169.254.169.254/latest/dynamic/instance-identity/document"
        client_process_display_name: "wget"
        id: 2
        listener_ip: "169.254.169.254"
        type: 0
        listener_discovered_service_id: "null"
        service_port_ip_id: "null"
  Service_listener_ports:
    properties:
      total_count:
        example: "2"
      offset:
        example: "0"
      limit:
        example: "1000"
      service_ports:
        type: "array"
        example:
        - discovered_service: "exim4"
          mapped_service: "exim4"
          protocol: "tcp"
          id: 3
          device_name: "D42_Test_Device"
          listening_ip: "::1"
          remote_ips_ids: ""
          appcomp_ids: ""
          remote_ips: ""
          port: 25
        - discovered_service: "exim4"
          mapped_service: "exim4"
          protocol: "tcp"
          id: 4
          device_name: "D42_Test_Device"
          listening_ip: "127.0.0.1"
          remote_ips_ids: ""
          appcomp_ids: ""
          remote_ips: ""
          port: 25
        items:
          $ref: "#/definitions/Service_listener_ports_service_ports"
    example:
      service_ports:
      - discovered_service: "exim4"
        mapped_service: "exim4"
        protocol: "tcp"
        id: 3
        device_name: "D42_Test_Device"
        listening_ip: "::1"
        remote_ips_ids: ""
        appcomp_ids: ""
        remote_ips: ""
        port: 25
      - discovered_service: "exim4"
        mapped_service: "exim4"
        protocol: "tcp"
        id: 4
        device_name: "D42_Test_Device"
        listening_ip: "127.0.0.1"
        remote_ips_ids: ""
        appcomp_ids: ""
        remote_ips: ""
        port: 25
      offset: "0"
      total_count: "2"
      limit: "1000"
  Service_listener_port:
    properties:
      service_ports:
        $ref: "#/definitions/Service_listener_port_service_ports"
    example:
      service_ports: "{\"discovered_service\":\"exim4\",\"mapped_service\":\"exim4\"\
        ,\"protocol\":\"tcp\",\"id\":3,\"device_name\":\"D42_Test_Device\",\"listening_ip\"\
        :\"127.0.0.1\",\"remote_ips_ids\":\"\",\"appcomp_ids\":\"\",\"remote_ips\"\
        :\"\",\"port\":25}"
  Listener_connection_stats:
    properties:
      total_count:
        example: "2"
      offset:
        example: "0"
      limit:
        example: "1000"
      service_ports:
        type: "array"
        example:
        - listener_device_id: 10
          protocol: "tcp"
          listener_device_name: "D42_Test_Device"
          client_ips_ids: ""
          client_ips: ""
          client_stats: []
          id: 3
          listening_ip: "::1"
          appcomp_ids: ""
          listener_service: "exim4"
          port: 25
          listener_service_id: 162
        - listener_device_id: 10
          protocol: "tcp"
          listener_device_name: "D42_Test_Device"
          client_ips_ids: ""
          client_ips: ""
          client_stats: []
          id: 4
          listening_ip: "127.0.0.1"
          appcomp_ids: ""
          listener_service: "exim4"
          port: 25
          listener_service_id: 162
        items:
          $ref: "#/definitions/Listener_connection_stats_service_ports"
    example:
      service_ports:
      - listener_device_id: 10
        protocol: "tcp"
        listener_device_name: "D42_Test_Device"
        client_ips_ids: ""
        client_ips: ""
        client_stats: []
        id: 3
        listening_ip: "::1"
        appcomp_ids: ""
        listener_service: "exim4"
        port: 25
        listener_service_id: 162
      - listener_device_id: 10
        protocol: "tcp"
        listener_device_name: "D42_Test_Device"
        client_ips_ids: ""
        client_ips: ""
        client_stats: []
        id: 4
        listening_ip: "127.0.0.1"
        appcomp_ids: ""
        listener_service: "exim4"
        port: 25
        listener_service_id: 162
      offset: "0"
      total_count: "2"
      limit: "1000"
  Listener_connection_stats_id:
    properties:
      service_ports:
        $ref: "#/definitions/Listener_connection_stats_id_service_ports"
    example:
      service_ports: "{\"listener_device_id\":10,\"protocol\":\"tcp\",\"listener_device_name\"\
        :\"D42_Test_Device\",\"client_ips_ids\":\"\",\"client_ips\":\"\",\"client_stats\"\
        :[],\"id\":4,\"listening_ip\":\"127.0.0.1\",\"appcomp_ids\":\"\",\"listener_service\"\
        :\"exim4\",\"port\":25,\"listener_service_id\":162}"
  inline_response_200:
    type: "object"
    properties:
      name:
        example: "1"
      ppport_id:
        example: "481"
    example:
      name: "1"
      ppport_id: "481"
  inline_response_200_1:
    type: "object"
    properties:
      msg:
        example: ""
      code:
        example: "0"
    example:
      msg: ""
      code: "0"
  inline_response_200_2:
    type: "object"
    properties:
      module_position:
        example: "horizontal"
      name:
        example: "m1"
      numbering_direction:
        example: "left-right"
      numbering_start_location:
        example: "top-left"
      patch_panel_model_id:
        example: "1"
      type:
        example: "Modular"
      type_id:
        example: "2"
    example:
      numbering_direction: "left-right"
      type_id: "2"
      name: "m1"
      numbering_start_location: "top-left"
      patch_panel_model_id: "1"
      type: "Modular"
      module_position: "horizontal"
  inline_response_200_3:
    type: "object"
    properties:
      name:
        example: "r1"
      number_of_ports:
        example: "12"
      number_of_ports_in_row:
        example: "6"
      patch_panel_module_model_id:
        example: "1"
      port_type:
        example: "Fiber LC"
    example:
      number_of_ports_in_row: "6"
      port_type: "Fiber LC"
      name: "r1"
      patch_panel_module_model_id: "1"
      number_of_ports: "12"
  inline_response_200_4:
    type: "object"
    properties:
      buildings:
        example: ""
      description:
        example: "Infrastructure"
      groups:
        example: ""
      id:
        example: "1"
      name:
        example: "Infrastructure Services"
    example:
      buildings: ""
      name: "Infrastructure Services"
      description: "Infrastructure"
      groups: ""
      id: "1"
  inline_response_200_5:
    type: "object"
    properties:
      description:
        example: ""
      id:
        example: "1"
      groups:
        example: "AccessToBlue:yes"
      name:
        example: "East Region"
    example:
      name: "East Region"
      description: ""
      groups: "AccessToBlue:yes"
      id: "1"
  inline_response_200_6:
    type: "object"
    properties:
      limit:
        example: "2"
      offset:
        example: "0"
      subnets:
        type: "array"
        items:
          $ref: "#/definitions/IPAMsubnets"
      total_count:
        example: "32"
    example:
      offset: "0"
      total_count: "32"
      limit: "2"
      subnets:
      - vrf_group_id: "1"
        category_name: ""
        notes: ""
        description: "Infrastructure Devices"
        parent_subnet_id: ""
        network: "10.1.10.0"
        category_id: ""
        range_begin: "10.1.10.5"
        allow_broadcast_address: "no"
        mask_bits: "24"
        parent_vlan_name: ""
        allocated: "no"
        range_end: "10.1.10.254"
        allow_network_address: "no"
        custom_fields: ""
        service_level: "Production"
        vrf_group_name: "Infrastructure Services"
        can_edit: "yes"
        tags: ""
        name: "Infra"
        subnet_id: "4"
        assigned: "no"
        parent_vlan_id: ""
        customer_id: "9"
        parent_vlan_number: ""
        gateway: ""
      - vrf_group_id: "1"
        category_name: ""
        notes: ""
        description: "Infrastructure Devices"
        parent_subnet_id: ""
        network: "10.1.10.0"
        category_id: ""
        range_begin: "10.1.10.5"
        allow_broadcast_address: "no"
        mask_bits: "24"
        parent_vlan_name: ""
        allocated: "no"
        range_end: "10.1.10.254"
        allow_network_address: "no"
        custom_fields: ""
        service_level: "Production"
        vrf_group_name: "Infrastructure Services"
        can_edit: "yes"
        tags: ""
        name: "Infra"
        subnet_id: "4"
        assigned: "no"
        parent_vlan_id: ""
        customer_id: "9"
        parent_vlan_number: ""
        gateway: ""
  inline_response_200_7:
    type: "object"
    properties:
      mask_bits:
        example: "24"
      name:
        example: "NetComm"
      network:
        example: "10.1.2.0"
      subnet_id:
        example: "5"
    example:
      mask_bits: "24"
      name: "NetComm"
      subnet_id: "5"
      network: "10.1.2.0"
  inline_response_200_8:
    type: "object"
    properties:
      subnet_id:
        example: "14"
      mask_bits:
        example: "25"
      network:
        example: "10.1.2.128"
    example:
      mask_bits: "25"
      subnet_id: "14"
      network: "10.1.2.128"
  inline_response_200_9:
    type: "object"
    properties:
      vlans:
        type: "array"
        items:
          $ref: "#/definitions/IPAMvlans"
    example:
      vlans:
      - number: "20"
        vlan_id: "13"
        notes: ""
        name: "CRMConsultant"
        switches:
        - asset_no: ""
          device_url: "/api/api/1.0/devices/id/1/"
          device_id: "1"
          name: "nh-lab-switch-01"
          serial_no: "FAB0447Y35M"
          uuid: ""
        - asset_no: ""
          device_url: "/api/api/1.0/devices/id/1/"
          device_id: "1"
          name: "nh-lab-switch-01"
          serial_no: "FAB0447Y35M"
          uuid: ""
        description: ""
        tags: ""
      - number: "20"
        vlan_id: "13"
        notes: ""
        name: "CRMConsultant"
        switches:
        - asset_no: ""
          device_url: "/api/api/1.0/devices/id/1/"
          device_id: "1"
          name: "nh-lab-switch-01"
          serial_no: "FAB0447Y35M"
          uuid: ""
        - asset_no: ""
          device_url: "/api/api/1.0/devices/id/1/"
          device_id: "1"
          name: "nh-lab-switch-01"
          serial_no: "FAB0447Y35M"
          uuid: ""
        description: ""
        tags: ""
  inline_response_200_10:
    type: "object"
    properties:
      switch_type:
        example: "Modular/Distributed (Single)"
      template_id:
        example: "2"
      template_name:
        example: "m3"
    example:
      template_name: "m3"
      template_id: "2"
      switch_type: "Modular/Distributed (Single)"
  inline_response_200_11:
    type: "object"
    properties:
      id:
        example: "1"
      name:
        example: "Production"
    example:
      name: "Production"
      id: "1"
  deviceAllHddData_hdd_rpm:
    type: "object"
    properties:
      id:
        example: "2"
      name:
        example: "10k"
  deviceAllHddData_hdd_type:
    type: "object"
    properties:
      id:
        example: "1"
      name:
        example: "SATA"
  deviceAllHddData_hdd:
    type: "object"
    properties:
      bytes:
        example: "GB"
      description:
        example: "SATA 6 Gb/s 64MB Cache"
      hd_id:
        example: "6"
      location:
        example: "IT Lab 2nd Floor New Haven, CT"
      manufacturer_id:
        example: "6"
      notes:
        example: ""
      partno:
        example: ""
      rpm:
        $ref: "#/definitions/deviceAllHddData_hdd_rpm"
      size:
        example: "500.0"
      type:
        $ref: "#/definitions/deviceAllHddData_hdd_type"
  devicesImpactListData_children:
    type: "object"
    properties:
      duplicate:
        example: "yes"
      name:
        example: "site2.com - webserver.dev"
  devicesImpactListData_children_1:
    type: "object"
    properties:
      children:
        type: "array"
        items:
          $ref: "#/definitions/devicesImpactListData_children"
      name:
        example: "Dependant Apps"
  devicesImpactListData_children_2:
    type: "object"
    properties:
      children:
        type: "array"
        items:
          $ref: "#/definitions/devicesImpactListData_children_1"
      duplicate:
        example: "yes"
      name:
        example: "Apache HTTP Server - Production Site"
  devicesImpactListData_children_3:
    type: "object"
    properties:
      children:
        type: "array"
        items:
          $ref: "#/definitions/devicesImpactListData_children_2"
      name:
        example: "Dependant Apps"
  IPAMvlans_switches:
    type: "object"
    properties:
      asset_no:
        example: ""
      device_id:
        example: "1"
      device_url:
        example: "/api/api/1.0/devices/id/1/"
      name:
        example: "nh-lab-switch-01"
      serial_no:
        example: "FAB0447Y35M"
      uuid:
        example: ""
    example:
      asset_no: ""
      device_url: "/api/api/1.0/devices/id/1/"
      device_id: "1"
      name: "nh-lab-switch-01"
      serial_no: "FAB0447Y35M"
      uuid: ""
  IPAMips_custom_fields:
    type: "object"
    properties:
      key:
        example: "test"
      notes:
        example: ""
      value:
        example: ""
  IPAMmacs_device:
    type: "object"
    properties:
      asset_no:
        example: ""
      device_id:
        example: "11"
      device_url:
        example: "/api/api/1.0/devices/id/11/"
      name:
        example: "DeviceTOM4"
      serial_no:
        example: ""
      type:
        example: "physical"
      uuid:
        example: ""
  IPAMmacs_port_switch:
    type: "object"
    properties:
      asset_no:
        example: ""
      device_id:
        example: "1"
      device_url:
        example: "/api/api/1.0/devices/id/1/"
      name:
        example: "nh-lab-switch-01"
      serial_no:
        example: "FAB0447Y35M"
      type:
        example: "physical"
      uuid:
        example: ""
  buildings_inner:
    type: "object"
    properties:
      address:
        example: "879 main st"
      building_id:
        example: "3"
      contact_name:
        example: "roger"
      custom_fields:
        example: ""
      groups:
        example: "Prod_East:no, Corp:yes"
      name:
        example: "Las Vegas Office"
      notes:
        example: "super critical"
  rooms_inner:
    type: "object"
    properties:
      building:
        example: "New Haven DC"
      building_id:
        example: "1"
      custom_fields:
        example: ""
      groups:
        example: "Prod_East:no, Corp:yes"
      name:
        example: "1st floor"
      notes:
        example: "super critical"
      room_id:
        example: "1"
  RoomsRacks_rack:
    type: "object"
    properties:
      orientation:
        example: "left"
      numbering_start_from_bottom:
        example: "yes"
      custom_fields:
        example: ""
      size:
        example: "42"
      available_u:
        example: "35"
      row:
        example: "1"
      rack_id:
        example: "20"
      rack_middle_option:
        example: "Start at"
      number_between_us:
        example: "true"
      tags:
        example: ""
      col_size:
        example: "1"
      start_col:
        example: "3"
      row_size:
        example: "1"
      first_number:
        example: "0"
      manufacturer:
        example: "APC Inc."
      building:
        example: "New Haven"
      start_row:
        example: "6"
      name:
        example: "NH-DC1-01"
      room:
        example: "NHDC1"
      notes:
        example: ""
      asset_no:
        example: ""
      rack_url:
        example: "/api/api/1.0/racks/20/"
  RackDevices_device:
    type: "object"
    properties:
      asset_no:
        example: ""
      device_id:
        example: "215"
      device_url:
        example: "/api/api/1.0/devices/id/215/"
      is_it_blade_host:
        example: "no"
      is_it_switch:
        example: "no"
      is_it_virtual_host:
        example: "no"
      name:
        example: "USNHCS-DCM06"
      serial_no:
        example: ""
      type:
        example: "physical"
      uuid:
        example: ""
  Pdu_models_back_image:
    type: "object"
    properties:
      id:
        example: "22"
      imgfile:
        example: "/var/www/graphics/images/apc-rack-pdu-front.png"
  Pdu_models_front_image:
    type: "object"
    properties:
      id:
        example: "66"
      imgfile:
        example: "/var/www/graphics/images/d42-apc-rack-pdu-front.png"
  Pdu_models_ports in pdu model:
    type: "object"
    properties:
      pdu_port_count:
        example: "12"
      pdu_port_type:
        example: "custom"
  Pdus_pdu_model_ports in pdu model:
    type: "object"
    properties:
      pdu_port_count:
        example: "12"
      pdu_port_type:
        example: "IEC 320 C19"
  Pdus_pdu_model:
    type: "object"
    properties:
      back_image:
        example: ""
      depth:
        example: "Half Depth"
      description:
        example: ""
      front_image:
        $ref: "#/definitions/Pdu_models_back_image"
      manufacturer:
        example: "APC Inc."
      name:
        example: "APC 8841"
      notes:
        example: ""
      pdu_model_id:
        example: "4"
      port_count:
        example: "12"
      ports in pdu model:
        type: "array"
        items:
          $ref: "#/definitions/Pdus_pdu_model_ports in pdu model"
      sequential_numbering_for_ports:
        example: "true"
      size:
        example: "1"
      type:
        example: "pdu"
      width_ratio:
        example: "2520"
  Pdu_by_Id_device mapping_custom_fields:
    type: "object"
    properties:
      key:
        example: "Agent email address"
      notes:
        example: ""
      value:
        example: ""
    example:
      notes: ""
      value: ""
      key: "Agent email address"
  Pdu_by_Id_device mapping:
    type: "object"
    properties:
      aliases:
        example: ""
      asset_no:
        example: ""
      building:
        example: "New Haven"
      cpucore:
        example: ""
      cpucount:
        example: ""
      cpuspeed:
        example: ""
      custom_fields:
        type: "array"
        items:
          $ref: "#/definitions/Pdu_by_Id_device mapping_custom_fields"
      customer:
        example: ""
      device_external_links:
        example: ""
      device_id:
        example: "122"
      device_purchase_line_items:
        example: ""
      device_sub_type:
        example: "UPS"
      hdd_details:
        example: ""
      hddcount:
        example: ""
      hddraid:
        example: ""
      hddraid_type:
        example: ""
      hddsize:
        example: ""
      hw_depth:
        example: ""
      hw_model:
        example: ""
      hw_size:
        example: ""
      id:
        example: "122"
      in_service:
        example: "true"
      ip_addresses:
        example: ""
      last_updated:
        example: "2016-07-05T22:08:34.849Z"
      mac_addresses:
        example: ""
      manufacturer:
        example: ""
      name:
        example: "UPS1"
      notes:
        example: ""
      os:
        example: ""
      pdu_mapping_url:
        example: "/api/api/1.0/power_units/232/"
      ram:
        example: ""
      room:
        example: "NHDC1"
      serial_no:
        example: ""
      service_level:
        example: "Production"
      tags:
        example: ""
      type:
        example: "other"
      ucs_manager:
        example: ""
      uuid:
        example: ""
      virtual_host_name:
        example: ""
    example:
      cpucore: ""
      in_service: "true"
      aliases: ""
      notes: ""
      ip_addresses: ""
      hddsize: ""
      type: "other"
      uuid: ""
      building: "New Haven"
      manufacturer: ""
      ucs_manager: ""
      hddraid: ""
      hddcount: ""
      pdu_mapping_url: "/api/api/1.0/power_units/232/"
      hdd_details: ""
      device_external_links: ""
      id: "122"
      mac_addresses: ""
      hw_depth: ""
      ram: ""
      cpuspeed: ""
      last_updated: "2016-07-05T22:08:34.849Z"
      device_id: "122"
      os: ""
      custom_fields:
      - notes: ""
        value: ""
        key: "Agent email address"
      - notes: ""
        value: ""
        key: "Agent email address"
      hddraid_type: ""
      service_level: "Production"
      hw_model: ""
      device_purchase_line_items: ""
      room: "NHDC1"
      tags: ""
      asset_no: ""
      virtual_host_name: ""
      device_sub_type: "UPS"
      hw_size: ""
      name: "UPS1"
      cpucount: ""
      serial_no: ""
      customer: ""
  Patch_panel_ports:
    type: "object"
    properties:
      back_connection_id:
        example: "109"
      back_pp_id:
        example: "16"
      cable_color:
        example: "black"
      color:
        example: "#659a39"
      content_type:
        example: "device"
      device_id:
        example: "153"
      device_name:
        example: "USNHCTVH002"
      full_path:
        example: "USNHCTVH002 <-> [DC1R1PP1-29:1] <-> DC1R5PP1-109:1 <-> NHCTCORE01(gbE/1)"
      number:
        example: "1"
      obj_label:
        example: "LI"
      object_id:
        example: "153"
      panel_id:
        example: "29"
      panel_name:
        example: "DC1R1PP1"
    example:
      panel_id: "29"
      obj_label: "LI"
      color: "#659a39"
      device_id: "153"
      object_id: "153"
      back_connection_id: "109"
      cable_color: "black"
      number: "1"
      device_name: "USNHCTVH002"
      content_type: "device"
      back_pp_id: "16"
      panel_name: "DC1R1PP1"
      full_path: "USNHCTVH002 <-> [DC1R1PP1-29:1] <-> DC1R5PP1-109:1 <-> NHCTCORE01(gbE/1)"
  Parts_partmodel:
    type: "object"
    properties:
      available:
        example: "0"
      description:
        example: ""
      in_devices:
        example: "1"
      in_rma:
        example: "0"
      in_storage_racks:
        example: "0"
      in_storage_rooms:
        example: "0"
      in_transit:
        example: "0"
      length:
        example: ""
      location:
        example: "IT Lab 2nd Floor New Haven, CT"
      manufacturer:
        example: "Kingston Technology Corp."
      modelno:
        example: ""
      name:
        example: "Kingston 8GB DDR31600"
      notes:
        example: ""
      partmodel_id:
        example: "3"
      partno:
        example: "KVR16E11/8"
      ramsize:
        example: "8192"
      ramspeed:
        example: "1600"
      ramtype:
        example: "DDR3 "
      total_count:
        example: "1"
      type:
        example: "RAM"
      used:
        example: "1"
  Partmodels_partmodels:
    type: "object"
    properties:
      available:
        example: "2"
      cores:
        example: "4"
      cpuspeed:
        example: "3400"
      description:
        example: "3.4GHz (3.9GHz Turbo)"
      in_devices:
        example: "0"
      in_rma:
        example: "0"
      in_storage_racks:
        example: "0"
      in_storage_rooms:
        example: "2"
      in_transit:
        example: "0"
      length:
        example: ""
      location:
        example: "IT Lab 2nd Floor New Haven, CT"
      manufacturer:
        example: "Intel Corp."
      modelno:
        example: ""
      name:
        example: "Core i7-3770"
      notes:
        example: "Socket:LGA 1155\r\nSpeedDual-channel DDR3 Memory Controller supports\
          \ DDR3-1333 and DDR3-1600 memory\r\nIntel HD Graphics 4000\r\nLimited Warranty\
          \ period (parts): 3 years\r\nLimited Warranty period (labor): 3 years\r\n"
      partmodel_id:
        example: "1"
      partno:
        example: "BX80637I73770"
      threads:
        example: ""
      total_count:
        example: "2"
      type:
        example: "CPU"
      used:
        example: "0"
    example:
      cpuspeed: "3400"
      notes: "Socket:LGA 1155\r\nSpeedDual-channel DDR3 Memory Controller supports\
        \ DDR3-1333 and DDR3-1600 memory\r\nIntel HD Graphics 4000\r\nLimited Warranty\
        \ period (parts): 3 years\r\nLimited Warranty period (labor): 3 years\r\n"
      in_transit: "0"
      total_count: "2"
      available: "2"
      length: ""
      description: "3.4GHz (3.9GHz Turbo)"
      threads: ""
      in_rma: "0"
      modelno: ""
      used: "0"
      in_devices: "0"
      type: "CPU"
      in_storage_rooms: "2"
      manufacturer: "Intel Corp."
      in_storage_racks: "0"
      cores: "4"
      partmodel_id: "1"
      name: "Core i7-3770"
      location: "IT Lab 2nd Floor New Haven, CT"
      partno: "BX80637I73770"
  Purchases_custom_fields:
    type: "object"
    properties:
      key:
        example: "Test Custom Field"
      notes:
        example: ""
      value:
        example: ""
    example:
      notes: ""
      value: ""
      key: "Test Custom Field"
  Purchases_devices:
    type: "object"
    properties:
      asset_no:
        example: "0019"
      device_id:
        example: "136"
      device_url:
        example: "/api/api/1.0/devices/id/136/"
      name:
        example: "NHCTWS001"
      serial_no:
        example: "409357205"
      type:
        example: "physical"
      uuid:
        example: ""
    example:
      asset_no: "0019"
      device_url: "/api/api/1.0/devices/id/136/"
      device_id: "136"
      name: "NHCTWS001"
      type: "physical"
      serial_no: "409357205"
      uuid: ""
  Purchases_line_items:
    type: "object"
    properties:
      devices:
        type: "array"
        items:
          $ref: "#/definitions/Purchases_devices"
      line_completed:
        example: "no"
      line_cost:
        example: "1"
      line_cost_center:
        example: "5001245"
      line_customer:
        example: "R&D"
      line_item_type:
        example: "Device"
      line_no:
        example: "1"
      line_notes:
        example: ""
      line_quantity:
        example: "1"
      line_type:
        example: "One time Purchase/Tax etc."
    example:
      line_completed: "no"
      line_customer: "R&D"
      line_cost: "1"
      line_notes: ""
      devices:
      - asset_no: "0019"
        device_url: "/api/api/1.0/devices/id/136/"
        device_id: "136"
        name: "NHCTWS001"
        type: "physical"
        serial_no: "409357205"
        uuid: ""
      - asset_no: "0019"
        device_url: "/api/api/1.0/devices/id/136/"
        device_id: "136"
        name: "NHCTWS001"
        type: "physical"
        serial_no: "409357205"
        uuid: ""
      line_no: "1"
      line_type: "One time Purchase/Tax etc."
      line_cost_center: "5001245"
      line_quantity: "1"
      line_item_type: "Device"
  Purchases_purchases:
    type: "object"
    properties:
      completed:
        example: "no"
      cost:
        example: "8500"
      groups:
        example: ""
      custom_fields:
        type: "array"
        items:
          $ref: "#/definitions/Purchases_custom_fields"
      customer:
        example: "R&D"
      line_items:
        type: "array"
        items:
          $ref: "#/definitions/Purchases_line_items"
      line_items_one_time_cost:
        example: "7081"
      notes:
        example: "R&D Workstations"
      order_no:
        example: "R&D8152013HW"
      po_date:
        example: "2013-08-15"
      purchase_id:
        example: "3"
      vendor:
        example: "CDW"
    example:
      order_no: "R&D8152013HW"
      cost: "8500"
      notes: "R&D Workstations"
      po_date: "2013-08-15"
      custom_fields:
      - notes: ""
        value: ""
        key: "Test Custom Field"
      - notes: ""
        value: ""
        key: "Test Custom Field"
      vendor: "CDW"
      purchase_id: "3"
      groups: ""
      completed: "no"
      line_items:
      - line_completed: "no"
        line_customer: "R&D"
        line_cost: "1"
        line_notes: ""
        devices:
        - asset_no: "0019"
          device_url: "/api/api/1.0/devices/id/136/"
          device_id: "136"
          name: "NHCTWS001"
          type: "physical"
          serial_no: "409357205"
          uuid: ""
        - asset_no: "0019"
          device_url: "/api/api/1.0/devices/id/136/"
          device_id: "136"
          name: "NHCTWS001"
          type: "physical"
          serial_no: "409357205"
          uuid: ""
        line_no: "1"
        line_type: "One time Purchase/Tax etc."
        line_cost_center: "5001245"
        line_quantity: "1"
        line_item_type: "Device"
      - line_completed: "no"
        line_customer: "R&D"
        line_cost: "1"
        line_notes: ""
        devices:
        - asset_no: "0019"
          device_url: "/api/api/1.0/devices/id/136/"
          device_id: "136"
          name: "NHCTWS001"
          type: "physical"
          serial_no: "409357205"
          uuid: ""
        - asset_no: "0019"
          device_url: "/api/api/1.0/devices/id/136/"
          device_id: "136"
          name: "NHCTWS001"
          type: "physical"
          serial_no: "409357205"
          uuid: ""
        line_no: "1"
        line_type: "One time Purchase/Tax etc."
        line_cost_center: "5001245"
        line_quantity: "1"
        line_item_type: "Device"
      line_items_one_time_cost: "7081"
      customer: "R&D"
  Services_inner:
    type: "object"
    properties:
      category:
        type: "string"
      description:
        type: "string"
      displayname:
        type: "string"
      id:
        type: "integer"
      name:
        type: "string"
      notes:
        type: "string"
      service_type:
        type: "string"
      tags:
        example: ""
      vendor:
        type: "string"
  Client_stats_latest_contiguous_stats:
    type: "object"
    properties:
      avg_time_span:
        example: "5"
      detected_connections:
        example: "3"
      ephemeral_ports:
        example: "(17741:25283:23991)"
      first_found:
        example: "2016-09-16T14:45:14"
      last_found:
        example: "2016-09-16T14:57:56"
      last_time_span:
        example: "7"
      max_time_span:
        example: "7"
      min_time_span:
        example: "0"
      std_dev_time_span:
        example: "29"
      total_detected:
        example: "2"
  Customers_Contacts:
    type: "object"
    properties:
      address:
        example: "123 main st"
      email:
        example: "rick@d42.com"
      name:
        example: "Random Guy"
      phone:
        example: "555-555-5555"
      type:
        example: "Technical"
  Customers_Custom Fields:
    type: "object"
    properties:
      key:
        example: "custID"
      notes:
        example: ""
      value:
        example: "42"
      value2:
        example: ""
  Get_all_Circuits_custom_fields:
    type: "object"
    properties:
      key:
        example: "Region"
      notes:
        example: ""
      value:
        example: "APAC"
  getAuditLogs_changed_fields:
    type: "object"
    properties:
      switch_vlan_id:
        example: "9"
    example:
      switch_vlan_id: "9"
  getAuditLogs_object_fields:
    type: "object"
    properties:
      device_id:
        example: ""
      first_added:
        example: "2016-05-26 14:20:00.213402+00"
      id:
        example: "889"
      mac_address:
        example: "00:13:60:ec:ec:05"
      port_id:
        example: "47"
      port_name:
        example: ""
      switch_vlan_id:
        example: "11"
    example:
      port_name: ""
      switch_vlan_id: "11"
      device_id: ""
      first_added: "2016-05-26 14:20:00.213402+00"
      mac_address: "00:13:60:ec:ec:05"
      port_id: "47"
      id: "889"
  Backup_status_backup_status:
    type: "object"
    properties:
      id:
        example: "1"
      job_name:
        example: "Demo Backup"
      status:
        example: "Backup not run since last reboot. Please check."
    example:
      job_name: "Demo Backup"
      id: "1"
      status: "Backup not run since last reboot. Please check."
  Backup_status_memory_in_MB:
    type: "object"
    properties:
      buffers:
        example: "92"
      cached:
        example: "254"
      memfree:
        example: "1728"
      memtotal:
        example: "3948"
      swapfree:
        example: "8187"
      swaptotal:
        example: "8187"
    example:
      memfree: "1728"
      swapfree: "8187"
      memtotal: "3948"
      buffers: "92"
      cached: "254"
      swaptotal: "8187"
  Service_schedules_inner:
    type: "object"
    properties:
      service_name:
        type: "string"
      idle_time:
        type: "boolean"
      install_Date:
        type: "string"
      day_of_month:
        type: "string"
      at_startup:
        type: "boolean"
      user_id:
        type: "integer"
      other_trigger:
        type: "boolean"
      arguments:
        type: "string"
      event_based:
        type: "boolean"
      weeks:
        type: "string"
      status:
        type: "string"
      description:
        type: "string"
      service_schedule_id:
        type: "integer"
      month_of_year:
        type: "string"
      hours:
        type: "string"
      user:
        type: "string"
      device:
        type: "string"
      other_type:
        type: "string"
      device_id:
        type: "integer"
      days:
        type: "string"
      day_of_week:
        type: "string"
      caption:
        type: "string"
      at_logon:
        type: "boolean"
      minutes:
        type: "string"
  Service_instances_inner:
    type: "object"
    properties:
      appcomps:
        type: "string"
      appcomp_ids:
        type: "string"
      device:
        type: "string"
      device_id:
        type: "integer"
      first_detected:
        type: "string"
      last_updated:
        type: "string"
      service_detail_id:
        type: "integer"
      service_display_name:
        type: "string"
      service_id:
        type: "integer"
      state:
        type: "string"
      startmode:
        type: "string"
      user:
        type: "string"
      user_id:
        type: "integer"
      vendor:
        type: "string"
      vendor_id:
        type: "integer"
      cmd_paths:
        example: ""
      ignore_client_connections:
        type: "boolean"
      topology_status:
        type: "string"
      pinned:
        type: "boolean"
  Service_client_connections_client_connections:
    type: "object"
    properties:
      listener_device_id:
        type: "integer"
      client_service_id:
        type: "integer"
      stats:
        example: ""
      client_device_id:
        type: "integer"
      listener_mapped_service:
        type: "string"
      listener_discovered_serivce:
        type: "string"
      listener_mapped_service_id:
        type: "integer"
      client_ip:
        type: "string"
      listener_device:
        type: "string"
      client_service:
        type: "string"
      port:
        type: "integer"
      client_device:
        type: "string"
      client_process_name:
        type: "string"
      client_process_display_name:
        type: "string"
      id:
        type: "integer"
      listener_ip:
        type: "string"
      type:
        type: "integer"
      listener_discovered_service_id:
        type: "integer"
      service_port_ip_id:
        type: "integer"
  Service_listener_ports_service_ports:
    type: "object"
    properties:
      discovered_service:
        type: "string"
      mapped_service:
        type: "string"
      protocol:
        type: "string"
      id:
        type: "integer"
      device_name:
        type: "string"
      listening_ip:
        type: "string"
      remote_ips_ids:
        type: "string"
      appcomp_ids:
        type: "string"
      remote_ips:
        type: "string"
      port:
        type: "integer"
  Service_listener_port_service_ports:
    type: "object"
    properties:
      discovered_service:
        type: "string"
      mapped_service:
        type: "string"
      protocol:
        type: "string"
      id:
        type: "integer"
      device_name:
        type: "string"
      listening_ip:
        type: "string"
      remote_ips_ids:
        type: "string"
      appcomp_ids:
        type: "string"
      remote_ips:
        type: "string"
      port:
        type: "integer"
    example: "{\"discovered_service\":\"exim4\",\"mapped_service\":\"exim4\",\"protocol\"\
      :\"tcp\",\"id\":3,\"device_name\":\"D42_Test_Device\",\"listening_ip\":\"127.0.0.1\"\
      ,\"remote_ips_ids\":\"\",\"appcomp_ids\":\"\",\"remote_ips\":\"\",\"port\":25}"
  Listener_connection_stats_service_ports:
    type: "object"
    properties:
      listener_device_id:
        type: "integer"
      protocol:
        type: "string"
      listener_device_name:
        type: "string"
      client_ips_ids:
        type: "string"
      client_ips:
        type: "string"
      client_stats:
        type: "array"
        items:
          type: "string"
      id:
        type: "integer"
      listening_ip:
        type: "string"
      appcomp_ids:
        type: "string"
      listener_service:
        type: "string"
      port:
        type: "integer"
      listener_service_id:
        type: "integer"
  Listener_connection_stats_id_service_ports:
    type: "object"
    properties:
      listener_device_id:
        type: "integer"
      protocol:
        type: "string"
      listener_device_name:
        type: "string"
      client_ips_ids:
        type: "string"
      client_ips:
        type: "string"
      client_stats:
        type: "array"
        items:
          type: "string"
      id:
        type: "integer"
      listening_ip:
        type: "string"
      appcomp_ids:
        type: "string"
      listener_service:
        type: "string"
      port:
        type: "integer"
      listener_service_id:
        type: "integer"
    example: "{\"listener_device_id\":10,\"protocol\":\"tcp\",\"listener_device_name\"\
      :\"D42_Test_Device\",\"client_ips_ids\":\"\",\"client_ips\":\"\",\"client_stats\"\
      :[],\"id\":4,\"listening_ip\":\"127.0.0.1\",\"appcomp_ids\":\"\",\"listener_service\"\
      :\"exim4\",\"port\":25,\"listener_service_id\":162}"
parameters:
  address:
    name: "address"
    in: "query"
    description: "Name of building."
    required: true
    type: "string"
  address_post:
    name: "address"
    in: "formData"
    description: "Address of building."
    required: true
    type: "string"
    x-exportParamName: "Address"
  appcomp:
    name: "appcomp"
    in: "query"
    description: "The application component that depends on this service"
    required: false
    type: "string"
    x-exportParamName: "Appcomp"
    x-optionalDataType: "String"
  at_logon:
    name: "at_logon"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "AtLogon"
    x-optionalDataType: "String"
  at_startup:
    name: "at_startup"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "AtStartup"
    x-optionalDataType: "String"
  appcomps:
    name: "appcomps"
    in: "formData"
    description: "A comma separated list of application component names."
    required: false
    type: "string"
    x-exportParamName: "Appcomps"
    x-optionalDataType: "String"
  appliance:
    name: "appliance"
    in: "formData"
    description: "name of the monitoring appliance"
    required: true
    type: "string"
    x-exportParamName: "Appliance"
  appliance_mode:
    name: "appliance_mode"
    in: "formData"
    required: true
    type: "string"
    enum:
    - "standby"
    - "production"
    x-exportParamName: "ApplianceMode"
  api_token:
    name: "api_token"
    in: "formData"
    description: "Linode API token - Required for Linode"
    required: false
    type: "string"
    x-exportParamName: "ApiToken"
    x-optionalDataType: "String"
  aliases:
    name: "aliases"
    in: "formData"
    description: "any software aliases"
    required: false
    type: "string"
    x-exportParamName: "Aliases"
    x-optionalDataType: "String"
  access_key:
    name: "access_key"
    in: "formData"
    description: "Required for Amazon - AWS Account ID (Deprecated in 12.0)"
    required: false
    type: "string"
  account_no:
    name: "account_no"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "AccountNo"
    x-optionalDataType: "String"
  account_id:
    name: "account_id"
    in: "formData"
    description: "Amazon Account ID - Required for Amazon AWS"
    required: false
    type: "string"
  action_time_gt:
    name: "action_time_gt"
    in: "query"
    description: "Filters actions that have happened past the time entered (ie, greater\
      \ than 2 weeks) in YYYY-MM-DDTHH:MM:ss.uuuuuu (ie 2016-10-27T13:52:01.213416)"
    required: false
    type: "string"
    x-exportParamName: "ActionTimeGt"
    x-optionalDataType: "String"
  action_time_lt:
    name: "action_time_lt"
    in: "query"
    description: "Returns actions within the last X amount of days in YYYY-MM-DDTHH:MM:ss.uuuuuu\
      \ (ie 2016-10-27T13:52:01.213416)"
    required: false
    type: "string"
    x-exportParamName: "ActionTimeLt"
    x-optionalDataType: "String"
  add_suffix:
    name: "add_suffix"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "AddSuffix"
    x-optionalDataType: "String"
  add_multiple_vm_names_as_alias:
    name: "add_multiple_vm_names_as_alias"
    in: "formData"
    description: "add any additional names found as device alias"
    required: false
    type: "string"
    x-exportParamName: "AddMultipleVmNamesAsAlias"
    x-optionalDataType: "String"
  add_to_picklist:
    name: "add_to_picklist"
    in: "formData"
    description: "Comma separated values to add to picklist. If type is picklist and\
      \ custom field is new, this is a required field. Duplicates will be ignored."
    required: false
    type: "string"
    x-exportParamName: "AddToPicklist"
    x-optionalDataType: "String"
  regions:
    name: "regions"
    in: "formData"
    description: "Comma separated region names for Amazon AWS"
    required: false
    type: "string"
    x-exportParamName: "Regions"
    x-optionalDataType: "String"
  assets:
    name: "assets"
    in: "formData"
    description: "comma separated names of new assets."
    required: false
    type: "string"
    x-exportParamName: "Assets"
    x-optionalDataType: "String"
  asset_id:
    name: "asset_id"
    in: "query"
    description: "comma separated values of existing assets."
    required: false
    type: "string"
    x-exportParamName: "AssetId"
    x-optionalDataType: "String"
  asset_ids:
    name: "asset_ids"
    in: "formData"
    description: "comma separated values of existing assets."
    required: false
    type: "string"
    x-exportParamName: "AssetIds"
    x-optionalDataType: "String"
  asset_no:
    name: "asset_no"
    in: "query"
    description: "filter by asset # (Added in v6.0.0)"
    required: false
    type: "string"
    x-exportParamName: "AssetNo"
    x-optionalDataType: "String"
  asset_no_contains:
    name: "asset_no_contains"
    in: "query"
    description: "search for any asset that contains matching asset # (Added in v9.2.0)"
    required: false
    type: "string"
    x-exportParamName: "AssetNoContains"
    x-optionalDataType: "String"
  assigned:
    name: "assigned"
    in: "formData"
    description: "‘yes’ if assigned. ‘no’ (default) if unassigned."
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "Assigned"
    x-optionalDataType: "String"
  assignment:
    name: "assignment"
    in: "formData"
    description: "room, device, rma - required if assigning device"
    required: false
    type: "string"
    x-exportParamName: "Assignment"
    x-optionalDataType: "String"
  allocated:
    name: "allocated"
    in: "formData"
    description: "‘yes’ if allocated. ‘no’ (default) if unallocated."
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "Allocated"
    x-optionalDataType: "String"
  alternate_sudo:
    name: "alternate_sudo"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "AlternateSudo"
    x-optionalDataType: "String"
  alternate_sudo_password_id:
    name: "alternate_sudo_password_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "AlternateSudoPasswordId"
    x-optionalDataType: "String"
  auto_add_ips:
    name: "auto_add_ips"
    in: "formData"
    description: "If ‘yes’, addresses within subnet will be automatically added to\
      \ Device42. (Only available in POST)"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "AutoAddIps"
    x-optionalDataType: "String"
  auth_type:
    name: "auth_type"
    in: "formData"
    description: "User Credentials or Service Principal"
    required: false
    type: "string"
  available:
    name: "available"
    in: "query"
    description: "could be yes or no"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "Available"
    x-optionalDataType: "String"
  amps:
    name: "amps"
    in: "formData"
    description: "The rated amps on this circuit"
    required: false
    type: "string"
    x-exportParamName: "Amps"
    x-optionalDataType: "String"
  region:
    name: "region"
    in: "formData"
    description: "Required for Amazon AWS API discovery."
    required: false
    type: "string"
    x-exportParamName: "Region"
    x-optionalDataType: "String"
  asset_connection_ids:
    name: "asset_connection_ids"
    in: "formData"
    description: "A comma-separated list of asset IDs connected to this circuit"
    required: false
    type: "string"
    x-exportParamName: "AssetConnectionIds"
    x-optionalDataType: "String"
  autodiscover_cdp_devices:
    name: "autodiscover_cdp_devices"
    in: "formData"
    description: "yes to enable CDP/LLDP (added in v8.3.2)"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "AutodiscoverCdpDevices"
    x-optionalDataType: "String"
  back_image_id:
    name: "back_image_id"
    in: "formData"
    description: "back image file id. You can see these from Tools > Import > Hardware\
      \ Import for now."
    required: false
    type: "string"
    x-exportParamName: "BackImageId"
    x-optionalDataType: "String"
  back_image:
    name: "back_image"
    in: "formData"
    description: "name of the back image file. Use instead of back_image_id."
    required: false
    type: "string"
    x-exportParamName: "BackImage"
    x-optionalDataType: "String"
  back_connection_id:
    name: "back_connection_id"
    in: "query"
    description: "ID for the back connection port. Available via GET at /api/api/1.0/patch_panel_ports//\
      \ or Tools > Export > Patch Panel Port"
    required: false
    type: "string"
    x-exportParamName: "BackConnectionId"
    x-optionalDataType: "String"
  back_switchport_id:
    name: "back_switchport_id"
    in: "formData"
    description: "Used if back connection type is switch."
    required: false
    type: "string"
    x-exportParamName: "BackSwitchportId"
    x-optionalDataType: "String"
  back_switch:
    name: "back_switch"
    in: "formData"
    description: "If back connection type is switch, use switch and switchport names\
      \ in combination."
    required: false
    type: "string"
    x-exportParamName: "BackSwitch"
    x-optionalDataType: "String"
  back_patch_panel_id:
    name: "back_patch_panel_id"
    in: "formData"
    description: "ID of the back patch panel - if a patch panel port is connected\
      \ in back (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "BackPatchPanelId"
    x-optionalDataType: "String"
  back_patch_panel:
    name: "back_patch_panel"
    in: "formData"
    description: "Name of the back patch panel - if a patch panel port is connected\
      \ in back (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "BackPatchPanel"
    x-optionalDataType: "String"
  back_port:
    name: "back_port"
    in: "formData"
    description: "Number of the port on the back patch panel - if a patch panel port\
      \ is connected in back (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "BackPort"
    x-optionalDataType: "String"
  bmc_user:
    name: "bmc_user"
    in: "formData"
    description: "username for discovery"
    required: true
    type: "string"
    x-exportParamName: "BmcUser"
  bmc_password:
    name: "bmc_password"
    in: "formData"
    description: "password for discovery"
    required: true
    type: "string"
    x-exportParamName: "BmcPassword"
  blade_size:
    name: "blade_size"
    in: "formData"
    description: "1=Full Height 2=Half Height 3=Double Half Height 4=Double Full Height\
      \ 5=Quarter Height"
    required: false
    type: "integer"
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    x-exportParamName: "BladeSize"
    x-optionalDataType: "Int32"
  blade_host_name:
    name: "blade_host_name"
    in: "query"
    description: "filter by blade host name"
    required: false
    type: "string"
    x-exportParamName: "BladeHostName"
    x-optionalDataType: "String"
  building_id:
    name: "building_id"
    in: "query"
    description: "filter by building ID (Added in v5.9.0)"
    required: false
    type: "string"
    x-exportParamName: "BuildingId"
    x-optionalDataType: "String"
  building:
    name: "building"
    in: "query"
    description: "filter by building name"
    required: false
    type: "string"
    x-exportParamName: "Building"
    x-optionalDataType: "String"
  building_post:
    name: "building"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "Building"
    x-optionalDataType: "String"
  blankasnull:
    name: "blankasnull"
    in: "query"
    description: "start with this device (e.g. limit=100&offset=50 means start with\
      \ the 50th device and return the next 100 devices)"
    required: false
    type: "string"
    x-exportParamName: "Blankasnull"
    x-optionalDataType: "String"
  bulk_fields:
    name: "bulk_fields"
    in: "formData"
    description: "comma separated key value pairs, with key and value separated by\
      \ colon. e.g.key1:value1, key2:value2"
    required: false
    type: "string"
    x-exportParamName: "BulkFields"
    x-optionalDataType: "String"
  bandwidth:
    name: "bandwidth"
    in: "query"
    description: "bandwidth in kbps (mutiply factor of 1024)"
    required: false
    type: "string"
    x-exportParamName: "Bandwidth"
    x-optionalDataType: "String"
  breakerpanel_id:
    name: "breakerpanel_id"
    in: "formData"
    description: "Breaker panel ID"
    required: true
    type: "string"
    x-exportParamName: "BreakerpanelId"
  bcpm_id:
    name: "bcpm_id"
    in: "query"
    description: "Branch Circuit Power Meter ID"
    required: false
    type: "string"
    x-exportParamName: "BcpmId"
    x-optionalDataType: "String"
  blanksasnull:
    name: "blanksasnull"
    in: "query"
    required: false
    type: "string"
  cable_id:
    name: "cable_id"
    in: "formData"
    description: "Cable ID/Name"
    required: true
    type: "string"
    x-exportParamName: "CableId"
  customer:
    name: "customer"
    in: "query"
    description: "filter by customer name"
    required: false
    type: "string"
    x-exportParamName: "Customer"
    x-optionalDataType: "String"
  custom_field_type:
    name: "type"
    in: "formData"
    description: "this is the custom field type. If left blank, default is text. Date\
      \ should be formatted as YYYY-MM-DD"
    required: false
    type: "string"
    enum:
    - "text"
    - "number"
    - "date"
    - "related_field"
    - "boolean"
    - "url"
    - "json"
    - "markup"
    x-exportParamName: "Type_"
    x-optionalDataType: "String"
  custom_fields_and:
    name: "custom_fields_and"
    in: "query"
    description: "filter by custom fields, and filter, format of key1:value1,key2:value2"
    required: false
    type: "string"
    x-exportParamName: "CustomFieldsAnd"
    x-optionalDataType: "String"
  custom_fields_or:
    name: "custom_fields_or"
    in: "query"
    description: "filter by custom fields, or filter, format of key1:value1,key2:value2"
    required: false
    type: "string"
    x-exportParamName: "CustomFieldsOr"
    x-optionalDataType: "String"
  capacity:
    name: "capacity"
    in: "formData"
    description: "capacity of mountpoint in MB"
    required: false
    type: "string"
    x-exportParamName: "Capacity"
    x-optionalDataType: "String"
  capture_hosts_file:
    name: "capture_hosts_file"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "CaptureHostsFile"
    x-optionalDataType: "String"
  csv_format:
    name: "csv_format"
    in: "query"
    description: "If this parameter is ‘xls’ or is not present, an Excel file(.xlsx)\
      \ will be produced. If this parameter is ‘tab’, a tab-delimited file(.txt) will\
      \ be created."
    required: false
    type: "string"
    x-exportParamName: "CsvFormat"
    x-optionalDataType: "String"
  customer_id:
    name: "customer_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "CustomerId"
    x-optionalDataType: "String"
  customer_id_get:
    name: "customer_id"
    in: "query"
    description: "ID of the customer (Added in v6.3.0)"
    required: false
    type: "string"
    x-exportParamName: "CustomerId"
    x-optionalDataType: "String"
  category:
    name: "category"
    in: "query"
    description: "name of the category"
    required: false
    type: "string"
    x-exportParamName: "Category"
    x-optionalDataType: "String"
  category_post:
    name: "category"
    in: "formData"
    description: "If multitenancy is on, admin groups that have access to this object\
      \ are specified here, e.g. Prod_East:no, Corp:yes specifies that the admin groups\
      \ for this object are Prod_East with view only permission and Corp with change\
      \ permission. Use for initial insert."
    required: false
    type: "string"
    x-exportParamName: "Category"
    x-optionalDataType: "String"
  category_id:
    name: "category_id"
    in: "query"
    description: "ID of the category"
    required: false
    type: "string"
    x-exportParamName: "CategoryId"
    x-optionalDataType: "String"
  category_id_post:
    name: "category_id"
    in: "formData"
    description: "ID of the category - use for initial insert."
    required: false
    type: "string"
    x-exportParamName: "CategoryId"
    x-optionalDataType: "String"
  clear_all:
    name: "clear_all"
    in: "formData"
    description: "If yes - then IP is marked as available and device and mac address\
      \ associations are cleared. Also notes and label fields are cleared. Added in\
      \ v5.7.2"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ClearAll"
    x-optionalDataType: "String"
  clear_front:
    name: "clear_front"
    in: "formData"
    description: "“yes” will clear front connection for port"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ClearFront"
    x-optionalDataType: "String"
  clear_back:
    name: "clear_back"
    in: "formData"
    description: "“yes” will clear back connection on port"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ClearBack"
    x-optionalDataType: "String"
  cloud_type:
    name: "cloud_type"
    in: "formData"
    description: "Required for all jobs."
    required: true
    type: "string"
    enum:
    - "Amazon AWS"
    - "Microsoft Azure"
    - "Linode"
    - "DigitalOcean"
    - "OpenStack"
    - "Amazon API"
    - "Google Cloud"
    - "Alibaba Cloud"
    - "Oracle Cloud"
    - "Standalone Kubernetes"
    x-exportParamName: "CloudType"
  cable_type:
    name: "cable_type"
    in: "formData"
    description: "named value of the cable type. Must already exist."
    required: false
    type: "string"
    x-exportParamName: "CableType"
    x-optionalDataType: "String"
  clear_value:
    name: "clear_value"
    in: "formData"
    description: "yes to clear existing value for that field"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ClearValue"
    x-optionalDataType: "String"
  clear_existing_schedule:
    name: "clear_existing_schedule"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ClearExistingSchedule"
    x-optionalDataType: "String"
  count:
    name: "count"
    in: "formData"
    description: "Whether to include the port in total count or not."
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "Count"
    x-optionalDataType: "String"
  count_in_licensing:
    name: "count_in_licensing"
    in: "formData"
    description: "Whether or not to count OS in licensing"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "CountInLicensing"
    x-optionalDataType: "String"
  completed:
    name: "completed"
    in: "query"
    description: "Line Item is completed"
    required: false
    type: "string"
    x-exportParamName: "Completed"
    x-optionalDataType: "String"
  content:
    name: "content"
    in: "query"
    description: "Content (e.g. IP address for type A)"
    required: false
    type: "string"
    x-exportParamName: "Content"
    x-optionalDataType: "String"
  content_type:
    name: "content_type"
    in: "query"
    description: "Returns changes done to a particular content type"
    required: false
    type: "string"
    x-exportParamName: "ContentType"
    x-optionalDataType: "String"
  contact_name_post:
    name: "contact_name"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ContactName"
    x-optionalDataType: "String"
  contact_phone_post:
    name: "contact_phone"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ContactPhone"
    x-optionalDataType: "String"
  change_date:
    name: "change_date"
    in: "query"
    required: false
    type: "string"
    x-exportParamName: "ChangeDate"
    x-optionalDataType: "String"
  col_size:
    name: "col_size"
    in: "formData"
    description: "how many racks wide the rack is"
    required: false
    type: "string"
    x-exportParamName: "ColSize"
    x-optionalDataType: "String"
  cores:
    name: "cores"
    in: "formData"
    description: "number of cores"
    required: false
    type: "string"
    x-exportParamName: "Cores"
    x-optionalDataType: "String"
  connector_type:
    name: "connector_type"
    in: "formData"
    description: "Type of connector, ie rj45"
    required: false
    type: "string"
    x-exportParamName: "ConnectorType"
    x-optionalDataType: "String"
  connectivity:
    name: "connectivity"
    in: "formData"
    description: "New or existing (not used for CPU, RAM, HDD)"
    required: false
    type: "string"
    x-exportParamName: "Connectivity"
    x-optionalDataType: "String"
  cost:
    name: "cost"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "Cost"
    x-optionalDataType: "String"
  cost_center:
    name: "cost_center"
    in: "query"
    description: "Cost Center"
    required: false
    type: "string"
    x-exportParamName: "CostCenter"
    x-optionalDataType: "String"
  cpuspeed:
    name: "cpuspeed"
    in: "formData"
    description: "enter in MHZ, e.g.: 3.5 GHZ use 3500"
    required: false
    type: "string"
    x-exportParamName: "Cpuspeed"
    x-optionalDataType: "String"
  contact_info:
    name: "contact_info"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ContactInfo"
    x-optionalDataType: "String"
  connection:
    name: "connection"
    in: "query"
    description: "Text field."
    required: false
    type: "string"
  cable_length:
    name: "cable_length"
    in: "formData"
    description: "Length of Cable"
    required: false
    type: "string"
    x-exportParamName: "CableLength"
    x-optionalDataType: "String"
  circuit_id:
    name: "circuit_id"
    in: "query"
    description: "circuit id"
    required: false
    type: "string"
    x-exportParamName: "CircuitId"
    x-optionalDataType: "String"
  cable_length_units:
    name: "cable_length_units"
    in: "formData"
    description: "Units for Cable Length (“m” or “ft”)"
    required: false
    type: "string"
    x-exportParamName: "CableLengthUnits"
    x-optionalDataType: "String"
  contact:
    name: "contact"
    in: "query"
    description: ""
    required: false
    type: "string"
  days:
    name: "days"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "Days"
    x-optionalDataType: "String"
  device_connection_ids:
    name: "device_connection_ids"
    in: "formData"
    description: "A comma-separated list of device IDs connected to this circuit"
    required: false
    type: "string"
    x-exportParamName: "DeviceConnectionIds"
    x-optionalDataType: "String"
  device_connection_names:
    name: "device_connection_names"
    in: "formData"
    description: "A comma-separated list of device names connected to this circuit"
    required: false
    type: "string"
    x-exportParamName: "DeviceConnectionNames"
    x-optionalDataType: "String"
  day_of_month:
    name: "day_of_month"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "DayOfMonth"
    x-optionalDataType: "String"
  day_of_week:
    name: "day_of_week"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "DayOfWeek"
    x-optionalDataType: "String"
  debug_level:
    name: "debug_level"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "No Debug"
    - "Normal Debug"
    - "Extended Debug"
    x-exportParamName: "DebugLevel"
    x-optionalDataType: "String"
  date_changed:
    name: "date_changed"
    in: "formData"
    description: "Update the Date Changed field, using format YYYY-MM-DD HH:MM:SS"
    required: false
    type: "string"
    x-exportParamName: "DateChanged"
    x-optionalDataType: "String"
  date:
    name: "date"
    in: "query"
    required: false
    type: "string"
  date_gt:
    name: "date_gt"
    in: "query"
    description: "filter by date greater than (YYYY-MM-DD)"
    required: false
    type: "string"
    x-exportParamName: "DateGt"
    x-optionalDataType: "String"
  date_lt:
    name: "date_lt"
    in: "query"
    description: "filter by date less than (YYYY-MM-DD)"
    required: false
    type: "string"
    x-exportParamName: "DateLt"
    x-optionalDataType: "String"
  device:
    name: "device"
    in: "query"
    description: "Device name"
    required: false
    type: "string"
    x-exportParamName: "Device"
    x-optionalDataType: "String"
  devices:
    name: "devices"
    in: "formData"
    description: "comma separated names of new devices."
    required: false
    type: "string"
    x-exportParamName: "Devices"
    x-optionalDataType: "String"
  device_name:
    name: "device_name"
    in: "formData"
    description: "required if switchport ID not used"
    required: false
    type: "string"
    x-exportParamName: "DeviceName"
    x-optionalDataType: "String"
  device_name_format:
    name: "device_name_format"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "hostname"
    - "hostname_plus_domain"
    - "hostname_add_domain_alias"
    - "hostname_plus_domain_add_hostname_alias"
    x-exportParamName: "DeviceNameFormat"
    x-optionalDataType: "String"
  device_id:
    name: "device_id"
    in: "query"
    description: "Device ID"
    required: true
    type: "string"
    x-exportParamName: "DeviceId"
  device_ids:
    name: "device_ids"
    in: "formData"
    description: "comma separated values of existing devices."
    required: false
    type: "string"
    x-exportParamName: "DeviceIds"
    x-optionalDataType: "String"
  device_sub_type:
    name: "device_sub_type"
    in: "query"
    description: "filter by device sub type (Added in v14.7.2)"
    required: false
    type: "string"
    x-exportParamName: "DeviceSubType"
    x-optionalDataType: "String"
  device_sub_type_id:
    name: "device_sub_type_id"
    in: "query"
    description: "filter by device sub type id (Added in v14.7.2)"
    required: false
    type: "string"
    x-exportParamName: "DeviceSubTypeId"
    x-optionalDataType: "String"
  device2:
    name: "device2"
    in: "formData"
    description: "name of the device2 that port belongs to. (added in v5.8.1)"
    required: false
    type: "string"
    x-exportParamName: "Device2"
    x-optionalDataType: "String"
  device_serial:
    name: "device_serial"
    in: "query"
    description: "serial number of the device, where part is checked out to"
    required: false
    type: "string"
    x-exportParamName: "DeviceSerial"
    x-optionalDataType: "String"
  device_reason:
    name: "device_reason"
    in: "formData"
    description: "string for the device reason on this appcomp (added in v6.6.0)"
    required: false
    type: "string"
    x-exportParamName: "DeviceReason"
    x-optionalDataType: "String"
  description:
    name: "description"
    in: "query"
    description: "matching description (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "Description"
    x-optionalDataType: "String"
  description_post:
    name: "description"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "Description"
    x-optionalDataType: "String"
  depth:
    name: "depth"
    in: "formData"
    description: "Half depth by default. full to override. Optional."
    required: false
    type: "string"
    enum:
    - "half"
    - "full"
    x-exportParamName: "Depth"
    x-optionalDataType: "String"
  device_os_id:
    name: "device_os_id"
    in: "path"
    description: "ID of specific operating system"
    required: true
    type: "integer"
  display_name:
    name: "display_name"
    in: "query"
    description: "if not provided, the name is used as display name"
    required: true
    type: "string"
    x-exportParamName: "DisplayName"
  discover_vms:
    name: "discover_vms"
    in: "formData"
    description: "discover VMs or strictly hypervisors"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "DiscoverVms"
    x-optionalDataType: "String"
  discovery_type:
    name: "discovery_type"
    in: "formData"
    required: false
    type: "string"
    default: "IPMI"
    enum:
    - "IPMI"
    - "Redfish"
    x-exportParamName: "DiscoveryType"
    x-optionalDataType: "String"
  discover_parts:
    name: "discover_parts"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "DiscoverParts"
    x-optionalDataType: "String"
  discover_software:
    name: "discover_software"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "DiscoverSoftware"
    x-optionalDataType: "String"
  discover_cloudid:
    name: "discover_cloudid"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "DiscoverCloudid"
    x-optionalDataType: "String"
  discover_applications:
    name: "discover_applications"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "DiscoverApplications"
    x-optionalDataType: "String"
  discovered_service:
    name: "discovered_service"
    in: "query"
    description: "the name of the discovered service listening on this IP/port"
    required: false
    type: "string"
    x-exportParamName: "DiscoveredService"
    x-optionalDataType: "String"
  discovered_service_post:
    name: "discovered_service"
    in: "formData"
    description: "the name of the discovered service listening on this IP/port"
    required: false
    type: "string"
    x-exportParamName: "DiscoveredService"
    x-optionalDataType: "String"
  discover_services:
    name: "discover_services"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "DiscoverServices"
    x-optionalDataType: "String"
  discovered_process:
    name: "discovered_process"
    in: "formData"
    description: "the process name that has a handle to the port"
    required: false
    type: "string"
    x-exportParamName: "DiscoveredProcess"
    x-optionalDataType: "String"
  domain:
    name: "domain"
    in: "formData"
    description: "name of the domain"
    required: true
    type: "string"
    x-exportParamName: "Domain"
  days_before_expiry:
    name: "days_before_expiry"
    in: "formData"
    description: "number of days before password is set as expired"
    required: false
    type: "string"
    x-exportParamName: "DaysBeforeExpiry"
    x-optionalDataType: "String"
  dns_zone:
    name: "dns_zone"
    in: "query"
    required: false
    type: "string"
    x-exportParamName: "DnsZone"
    x-optionalDataType: "String"
  D42 ID for the rack(s):
    name: "D42 ID for the rack(s)"
    in: "query"
    description: "D42 ID for the part(s)"
    required: false
    type: "string"
  depends_on:
    name: "depends_on"
    in: "formData"
    description: "Names of app components this component depends on, separated by\
      \ commas - must match component names exactly."
    required: false
    type: "string"
    x-exportParamName: "DependsOn"
    x-optionalDataType: "String"
  dependents:
    name: "dependents"
    in: "formData"
    description: "Names of app components that depend on this component separated\
      \ by commas - must match component names exactly."
    required: false
    type: "string"
    x-exportParamName: "Dependents"
    x-optionalDataType: "String"
  depends_on_reasons:
    name: "depends_on_reasons"
    in: "formData"
    description: "list of string pairs for dependent appcomps on this appcomp e.g.\
      \ => depend_appcomp_name1:reason1, depend_appcomp_name2:reason2, depend_appcomp_nameN:reason3\
      \ (added in v6.6.0)"
    required: false
    type: "string"
    x-exportParamName: "DependsOnReasons"
    x-optionalDataType: "String"
  delete_older_mac_association_after:
    name: "delete_older_mac_association_after"
    in: "formData"
    description: "number of days (added in v10.4.0)"
    required: false
    type: "string"
    x-exportParamName: "DeleteOlderMacAssociationAfter"
    x-optionalDataType: "String"
  delete_switch_port_not_found:
    name: "delete_switch_port_not_found"
    in: "formData"
    description: "yes or no to delete switch ports not found (added in v10.4.0)"
    required: false
    type: "string"
    x-exportParamName: "DeleteSwitchPortNotFound"
    x-optionalDataType: "String"
  dramc_id:
    name: "dramc_id"
    in: "query"
    description: "ID of the DMARC"
    required: false
    type: "string"
    x-exportParamName: "DramcId"
    x-optionalDataType: "String"
  dmarc:
    name: "dmarc"
    in: "query"
    description: "DMARC name"
    required: false
    type: "string"
    x-exportParamName: "Dmarc"
    x-optionalDataType: "String"
  email:
    name: "email"
    in: "formData"
    description: "Text field."
    required: false
    type: "string"
    x-exportParamName: "Email"
    x-optionalDataType: "String"
  escalation_1:
    name: "escalation_1"
    in: "formData"
    description: "Text field."
    required: false
    type: "string"
    x-exportParamName: "Escalation1"
    x-optionalDataType: "String"
  escalation_2:
    name: "escalation_2"
    in: "formData"
    description: "Text field."
    required: false
    type: "string"
    x-exportParamName: "Escalation2"
    x-optionalDataType: "String"
  enduser:
    name: "enduser"
    in: "query"
    description: "filter by end user name"
    required: false
    type: "string"
    x-exportParamName: "Enduser"
    x-optionalDataType: "String"
  event_based:
    name: "event_based"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "EventBased"
    x-optionalDataType: "String"
  end_point_type:
    name: "end_point_type"
    in: "query"
    description: "Type of end point."
    required: false
    type: "string"
    enum:
    - "device"
    - "circuit"
    - "switchport"
    - "vendor"
    - "patch_panel_port"
    x-exportParamName: "EndPointType"
    x-optionalDataType: "String"
  end_point_type_post:
    name: "end_point_type"
    in: "formData"
    description: "Type of end point."
    required: false
    type: "string"
    enum:
    - "cable"
    - "circuit"
    - "switchport"
    - "tap_port"
    - "patch_panel_port"
    - "vendor"
    x-exportParamName: "EndPointType"
    x-optionalDataType: "String"
  enable_resources_monitoring:
    name: "enable_resources_monitoring"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "EnableResourcesMonitoring"
    x-optionalDataType: "String"
  end_point_id:
    name: "end_point_id"
    in: "query"
    description: "ID of the end point"
    required: false
    type: "string"
    x-exportParamName: "EndPointId"
    x-optionalDataType: "String"
  end_point_id_post:
    name: "end_point_id"
    in: "formData"
    description: "ID of the end point"
    required: false
    type: "string"
    x-exportParamName: "EndPointId"
    x-optionalDataType: "String"
  end_point_device:
    name: "end_point_device"
    in: "query"
    description: "if end_point type is device, this is name of the device. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointDevice"
    x-optionalDataType: "String"
  end_point_device_post:
    name: "end_point_device"
    in: "formData"
    description: "if end_point type is device, this is name of the device. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointDevice"
    x-optionalDataType: "String"
  end_point_circuit_id:
    name: "end_point_circuit_id"
    in: "query"
    description: "if end_point type is circuit, this is circuit_id of the circuit.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointCircuitId"
    x-optionalDataType: "String"
  end_point_switchport:
    name: "end_point_switchport"
    in: "query"
    description: "if end_point type is switchport, this is name of the switch port.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointSwitchport"
    x-optionalDataType: "String"
  end_point_switch:
    name: "end_point_switch"
    in: "query"
    description: "if end_point type is switchport, this is name of the switch. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointSwitch"
    x-optionalDataType: "String"
  end_point_patch_panel_port:
    name: "end_point_patch_panel_port"
    in: "query"
    description: "if end_point type is patch_panel_port, this is name of the patch\
      \ panel port. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointPatchPanelPort"
    x-optionalDataType: "String"
  end_point_patch_panel:
    name: "end_point_patch_panel"
    in: "query"
    description: "if end_point type is patch_panel_port, this is name of the patch\
      \ panel. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointPatchPanel"
    x-optionalDataType: "String"
  end_point_patch_panel_id:
    name: "end_point_patch_panel_id"
    in: "query"
    description: "if end_point type is patch_panel_port, this is ID of the patch panel.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointPatchPanelId"
    x-optionalDataType: "String"
  end_point_vendor:
    name: "end_point_vendor"
    in: "query"
    description: "if end_point type is vendor, this is name of the vendor. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointVendor"
    x-optionalDataType: "String"
  end_point_circuit_id_post:
    name: "end_point_circuit_id"
    in: "formData"
    description: "if end_point type is circuit, this is circuit_id of the circuit.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointCircuitId"
    x-optionalDataType: "String"
  end_point_switchport_post:
    name: "end_point_switchport"
    in: "formData"
    description: "if end_point type is switchport, this is name of the switch port.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointSwitchport"
    x-optionalDataType: "String"
  end_point_switch_post:
    name: "end_point_switch"
    in: "formData"
    description: "if end_point type is switchport, this is name of the switch. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointSwitch"
    x-optionalDataType: "String"
  end_point_patch_panel_port_post:
    name: "end_point_patch_panel_port"
    in: "formData"
    description: "if end_point type is patch_panel_port, this is name of the patch\
      \ panel port. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointPatchPanelPort"
    x-optionalDataType: "String"
  end_point_patch_panel_post:
    name: "end_point_patch_panel"
    in: "formData"
    description: "if end_point type is patch_panel_port, this is name of the patch\
      \ panel. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointPatchPanel"
    x-optionalDataType: "String"
  end_point_patch_panel_id_post:
    name: "end_point_patch_panel_id"
    in: "formData"
    description: "if end_point type is patch_panel_port, this is ID of the patch panel.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointPatchPanelId"
    x-optionalDataType: "String"
  end_point_vendor_post:
    name: "end_point_vendor"
    in: "formData"
    description: "if end_point type is vendor, this is name of the vendor. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "EndPointVendor"
    x-optionalDataType: "String"
  end_point_connector_type:
    name: "end_connector_type"
    in: "formData"
    description: "Connector Type (User Definable)"
    required: false
    type: "string"
    x-exportParamName: "EndConnectorType"
    x-optionalDataType: "String"
  end_point_cable:
    name: "end_cable_type"
    in: "formData"
    description: "Endpoint Cable Type (User Definable)"
    required: false
    type: "string"
    x-exportParamName: "EndCableType"
    x-optionalDataType: "String"
  end_point_cable_color:
    name: "end_point_cable_color"
    in: "formData"
    description: "Endpoint Cable Color"
    required: false
    type: "string"
    x-exportParamName: "EndPointCableColor"
    x-optionalDataType: "String"
  end_point_optic_type:
    name: "end_point_optic_type"
    in: "formData"
    description: "Optic Type (Definable, ie multimode)"
    required: false
    type: "string"
    x-exportParamName: "EndPointOpticType"
    x-optionalDataType: "String"
  end_point_back_pach_panel:
    name: "end_point_back_pach_panel"
    in: "formData"
    description: ""
    required: false
    type: "string"
    x-exportParamName: "EndPointBackPachPanel"
    x-optionalDataType: "String"
  end_point_multiple:
    name: "end_point_multiple"
    in: "formData"
    description: "yes to allow multiple endpoints"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "EndPointMultiple"
    x-optionalDataType: "String"
  end_ip_address:
    name: "end_ip_address"
    in: "formData"
    description: "End IP address"
    required: false
    type: "string"
    x-exportParamName: "EndIpAddress"
    x-optionalDataType: "String"
  exclude_servers:
    name: "exclude_servers"
    in: "formData"
    description: "comma separated liste of addresses to exclude"
    required: false
    type: "string"
    x-exportParamName: "ExcludeServers"
    x-optionalDataType: "String"
  firmware:
    name: "firmware"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "Firmware"
    x-optionalDataType: "String"
  first_number:
    name: "first_number"
    in: "formData"
    description: "default 0, add to change."
    required: false
    type: "string"
    x-exportParamName: "FirstNumber"
    x-optionalDataType: "String"
  first_added_lt:
    name: "first_added_lt"
    in: "query"
    description: "first added less than date YYYY-MM-DD format"
    required: false
    type: "string"
    x-exportParamName: "FirstAddedLt"
    x-optionalDataType: "String"
  first_added_gt:
    name: "first_added_gt"
    in: "query"
    description: "first added greater date YYYY-MM-DD format"
    required: false
    type: "string"
    x-exportParamName: "FirstAddedGt"
    x-optionalDataType: "String"
  follow:
    name: "follow"
    in: "query"
    description: "use yes if you want to see virtuals in a virtual host, modules in\
      \ a blade chassis and devices in a clustered device (Added in v5.7.4)"
    required: false
    type: "string"
    x-exportParamName: "Follow"
    x-optionalDataType: "String"
  follow_chain:
    name: "follow_chain"
    in: "formData"
    required: false
    type: "string"
    default: "no"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "FollowChain"
    x-optionalDataType: "String"
  front_image_id:
    name: "front_image_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "FrontImageId"
    x-optionalDataType: "String"
  front_image:
    name: "front_image"
    in: "formData"
    description: "name of the image file (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "FrontImage"
    x-optionalDataType: "String"
  front_patch_panel_id:
    name: "front_patch_panel_id"
    in: "formData"
    description: "Name of the front patch panel - if a patch panel port is connected\
      \ in front (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "FrontPatchPanelId"
    x-optionalDataType: "String"
  front_patch_panel:
    name: "front_patch_panel"
    in: "formData"
    description: "Name of the front patch panel - if a patch panel port is connected\
      \ in front (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "FrontPatchPanel"
    x-optionalDataType: "String"
  front_port:
    name: "front_port"
    in: "formData"
    description: "Number of the port on the front patch panel - if a patch panel port\
      \ is connected in front (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "FrontPort"
    x-optionalDataType: "String"
  filesytem:
    name: "filesytem"
    in: "formData"
    description: "mountpoint filesystem"
    required: false
    type: "string"
    x-exportParamName: "Filesytem"
    x-optionalDataType: "String"
  fstype:
    name: "fstype"
    in: "formData"
    description: "mountpoint filesystem type"
    required: false
    type: "string"
    x-exportParamName: "Fstype"
    x-optionalDataType: "String"
  free_capacity:
    name: "free_capacity"
    in: "formData"
    description: "free capacity of mountpoint in MB"
    required: false
    type: "string"
    x-exportParamName: "FreeCapacity"
    x-optionalDataType: "String"
  grid_rows:
    name: "grid_rows"
    in: "formData"
    description: "number of rows in the room grid"
    required: false
    type: "string"
    x-exportParamName: "GridRows"
    x-optionalDataType: "String"
  grid_cols:
    name: "grid_cols"
    in: "formData"
    description: "number of columns in the room grid"
    required: false
    type: "string"
    x-exportParamName: "GridCols"
    x-optionalDataType: "String"
  gateway:
    name: "gateway"
    in: "query"
    description: "Gateway (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "Gateway"
    x-optionalDataType: "String"
  gateway_post:
    name: "gateway"
    in: "formData"
    description: "Gateway (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "Gateway"
    x-optionalDataType: "String"
  groups:
    name: "groups"
    in: "query"
    description: "If multitenancy is on, admin groups that have access to this object\
      \ are specified here, e.g. Prod_East:no,Corp:yes specifies that the admin groups\
      \ for this object are Prod_East with view only permission and Corp with change\
      \ permission. If this parameter is present with no value, all groups are deleted."
    required: false
    type: "string"
  groups_post:
    name: "groups"
    in: "formData"
    description: "If multitenancy is on, admin groups that have access to this object\
      \ are specified here, e.g. Prod_East:no,Corp:yes specifies that the admin groups\
      \ for this object are Prod_East with view only permission and Corp with change\
      \ permission. If this parameter is present with no value, all groups are deleted."
    required: false
    type: "string"
    x-exportParamName: "Groups"
    x-optionalDataType: "String"
  group_owner:
    name: "group_owner"
    in: "formData"
    description: "Name of group that is responsible for this component - must match\
      \ group name exactly."
    required: false
    type: "string"
    x-exportParamName: "GroupOwner"
    x-optionalDataType: "String"
  groups_affected:
    name: "groups_affected"
    in: "formData"
    description: "Names of affected groups separated by commas - must match group\
      \ names exactly."
    required: false
    type: "string"
    x-exportParamName: "GroupsAffected"
    x-optionalDataType: "String"
  get_all_switch_ports:
    name: "get_all_switch_ports"
    in: "formData"
    description: "yes or no to get all switch ports (added in v10.4.0)"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "GetAllSwitchPorts"
    x-optionalDataType: "String"
  get_guest_os_info:
    name: "get_guest_os_info"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "GetGuestOsInfo"
    x-optionalDataType: "String"
  hardware:
    name: "hardware"
    in: "query"
    description: "filter by name of hardware model, comma separated for multiple hardware\
      \ models (or filter). (Added in v6.3.2)"
    required: false
    type: "string"
    x-exportParamName: "Hardware"
    x-optionalDataType: "String"
  hardware_ids:
    name: "hardware_ids"
    in: "query"
    description: "filter by ID of hardware models, comma separated"
    required: false
    type: "string"
    x-exportParamName: "HardwareIds"
    x-optionalDataType: "String"
  hours:
    name: "hours"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "Hours"
    x-optionalDataType: "String"
  horizontal_grid_numbering:
    name: "horizontal_grid_numbering"
    in: "formData"
    description: "numeric by default"
    required: false
    type: "string"
    enum:
    - "numeric"
    - "alphabetic"
    x-exportParamName: "HorizontalGridNumbering"
    x-optionalDataType: "String"
  horizontal_grid_start:
    name: "horizontal_grid_start"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "HorizontalGridStart"
    x-optionalDataType: "String"
  hwaddress:
    name: "hwaddress"
    in: "formData"
    description: "mac or wwn. Required if no port."
    required: false
    type: "string"
    x-exportParamName: "Hwaddress"
    x-optionalDataType: "String"
  hddsize:
    name: "hddsize"
    in: "formData"
    description: "enter in GB, e.g.: 250 GB enter 250"
    required: false
    type: "string"
    x-exportParamName: "Hddsize"
    x-optionalDataType: "String"
  hddtype:
    name: "hddtype"
    in: "formData"
    description: "new or existing"
    required: false
    type: "string"
    x-exportParamName: "Hddtype"
    x-optionalDataType: "String"
  hddrpm:
    name: "hddrpm"
    in: "formData"
    description: "new or existing"
    required: false
    type: "string"
    x-exportParamName: "Hddrpm"
    x-optionalDataType: "String"
  height:
    name: "height"
    in: "formData"
    description: "room height"
    required: false
    type: "string"
    x-exportParamName: "Height"
    x-optionalDataType: "String"
  home_page:
    name: "home_page"
    in: "formData"
    description: "Text field."
    required: false
    type: "string"
    x-exportParamName: "HomePage"
    x-optionalDataType: "String"
  hostname_to_use:
    name: "hostname_to_use"
    in: "query"
    required: true
    type: "string"
    enum:
    - "1 (Serial # / Reverse DNS / IP)"
    - "2 (Discovered Name / Serial # / Reverse DNS / IP)"
    - "3 (Reverse DNS / Discovered Name / Serial # / IP)"
    x-exportParamName: "HostnameToUse"
  hostname_precedence:
    name: "hostname_precedence"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "HostnamePrecedence"
    x-optionalDataType: "String"
  hostidlist:
    name: "hostidlist"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "Hostidlist"
    x-optionalDataType: "String"
  host_allow_duplicate_serials:
    name: "host_allow_duplicate_serials"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "HostAllowDuplicateSerials"
    x-optionalDataType: "String"
  id:
    name: "id"
    in: "query"
    description: "The ID of the software, required if not using NAME"
    required: false
    type: "string"
    x-exportParamName: "Id"
    x-optionalDataType: "String"
  id_post:
    name: "id"
    in: "formData"
    description: "The ID of the software, required if not using NAME"
    required: false
    type: "string"
    x-exportParamName: "Id"
    x-optionalDataType: "String"
  idle_time:
    name: "idle_time"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "IdleTime"
    x-optionalDataType: "String"
  is_it_switch:
    name: "is_it_switch"
    in: "query"
    description: "filter by whether switch or not. Use yes or no. (Added in v6.3.2)"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "IsItSwitch"
    x-optionalDataType: "String"
  is_it_virtual_host:
    name: "is_it_virtual_host"
    in: "query"
    description: "filter by whether virtual host or not. Use yes or no. (Added in\
      \ v6.3.2)"
    required: false
    type: "string"
    x-exportParamName: "IsItVirtualHost"
    x-optionalDataType: "String"
  is_it_blade_host:
    name: "is_it_blade_host"
    in: "query"
    description: "filter by whether blade host or not. Use yes or no. (Added in v6.3.2)"
    required: false
    type: "string"
    x-exportParamName: "IsItBladeHost"
    x-optionalDataType: "String"
  if_parent_assigned:
    name: "if_parent_assigned"
    in: "query"
    description: "yes or no"
    required: false
    type: "string"
    x-exportParamName: "IfParentAssigned"
    x-optionalDataType: "String"
  if_parent_allocated:
    name: "if_parent_allocated"
    in: "query"
    description: "yes or no"
    required: false
    type: "string"
    x-exportParamName: "IfParentAllocated"
    x-optionalDataType: "String"
  imgfile_id:
    name: "imgfile_id"
    in: "formData"
    description: "image file id. You can see these from Tools > Import > Hardware\
      \ Import for now."
    required: false
    type: "string"
    x-exportParamName: "ImgfileId"
    x-optionalDataType: "String"
  imgfile:
    name: "imgfile"
    in: "formData"
    description: "name of the image file (Added in v5.8.2). Use instead of imgfile_id"
    required: false
    type: "string"
    x-exportParamName: "Imgfile"
    x-optionalDataType: "String"
  in_service:
    name: "in_service"
    in: "query"
    description: "filter by whether in service or not. Use yes or no."
    required: false
    type: "string"
    x-exportParamName: "InService"
    x-optionalDataType: "String"
  install_date:
    name: "install_date"
    in: "formData"
    description: "The date that the software was installed"
    required: false
    type: "string"
    x-exportParamName: "InstallDate"
    x-optionalDataType: "String"
  include_cols:
    name: "include_cols"
    in: "query"
    description: "do not return all columns just the ones specified. For example,\
      \ ?include_cols=name, device_id, rack will only result in name, device_id, and\
      \ rack included in the output. The following column names can be part of include_cols:\
      \ name, device_id, rack, name, device_id, serial_no, asset_no, uuid, notes,\
      \ in_service, service_level, type, id, last_updated, tags, customer_id, customer,\
      \ hw_model, hw_size, manufacturer, hw_depth, rack, start_at, rack_id, orientation,\
      \ row, room, building, blade_host_name, blade_host_id, slot_number, virtual_host_name,\
      \ location, device_sub_type, os, osarch, osver, osverno, custom_fields, device_purchase_line_items,\
      \ device_external_links, ip_addresses, mac_addresses, cpucount, cpucore, cpuspeed,\
      \ ram, hddcount, hddsize, hddraid, hddraid_type, hdd_details, pdu_mapping_url,modules,\
      \ vms, devices, aliases, xpos, ucs_manager"
    required: false
    type: "string"
    x-exportParamName: "IncludeCols"
    x-optionalDataType: "String"
  instance_id:
    name: "instance_id"
    in: "formData"
    description: "The cloud instance ID of the device"
    required: false
    type: "integer"
    x-exportParamName: "InstanceId"
    x-optionalDataType: "Int32"
  ipv6:
    name: "ipv6"
    in: "query"
    description: "if creating an ipv6 subnet, &ipv6 will need to be passed,"
    required: true
    type: "string"
  ip:
    name: "ip"
    in: "query"
    description: "ip address (added in v6.3.0)"
    required: false
    type: "string"
    x-exportParamName: "Ip"
    x-optionalDataType: "String"
  ips:
    name: "ips"
    in: "query"
    description: "Details for all the IPs"
    required: false
    type: "string"
    x-exportParamName: "Ips"
    x-optionalDataType: "String"
  ip_id:
    name: "ip_id"
    in: "query"
    description: "D42 ID of the IP"
    required: false
    type: "string"
    x-exportParamName: "IpId"
    x-optionalDataType: "String"
  ipaddress:
    name: "ipaddress"
    in: "formData"
    description: "If a matching IP address is found, it will update the first matched\
      \ IP address(unless you specify a vrf_group or vrf_group_id, then it matches\
      \ or adds IP to that VRF group)"
    required: true
    type: "string"
    x-exportParamName: "Ipaddress"
  ip_address_from:
    name: "ip_address_from"
    in: "formData"
    description: "The external IP address"
    required: true
    type: "string"
    x-exportParamName: "IpAddressFrom"
  ip_address_from_end:
    name: "ip_address_from_end"
    in: "formData"
    description: "used for mapping a range of addresses rather than a single IP"
    required: false
    type: "string"
    x-exportParamName: "IpAddressFromEnd"
    x-optionalDataType: "String"
  ip_address_to:
    name: "ip_address_to"
    in: "formData"
    description: "The internal IP address"
    required: true
    type: "string"
    x-exportParamName: "IpAddressTo"
  ip_address_to_end:
    name: "ip_address_to_end"
    in: "formData"
    description: "used for mapping a range of addresses rather than a single IP"
    required: false
    type: "string"
    x-exportParamName: "IpAddressToEnd"
    x-optionalDataType: "String"
  ip_start:
    name: "ip_start"
    in: "formData"
    description: "starting IP address"
    required: true
    type: "string"
    x-exportParamName: "IpStart"
  ip_end:
    name: "ip_end"
    in: "formData"
    description: "ending IP address, use same as start for single address"
    required: true
    type: "string"
    x-exportParamName: "IpEnd"
  ignore_powered_off:
    name: "ignore_powered_off"
    in: "formData"
    description: "Ignore powered off vms"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "IgnorePoweredOff"
    x-optionalDataType: "String"
  ignore_guest_uuid:
    name: "ignore_guest_uuid"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "IgnoreGuestUuid"
    x-optionalDataType: "String"
  ignore_host_serial:
    name: "ignore_host_serial"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "IgnoreHostSerial"
    x-optionalDataType: "String"
  ignore_host_uuid:
    name: "ignore_host_uuid"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "IgnoreHostUuid"
    x-optionalDataType: "String"
  ignore_ipv6:
    name: "ignore_ipv6"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "IgnoreIpv6"
    x-optionalDataType: "String"
  ignore_virt_subtype:
    name: "ignore_virt_subtype"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "IgnoreVirtSubtype"
    x-optionalDataType: "String"
  initial_software_type:
    name: "initial_software_type"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "managed"
    - "unmanaged"
    - "prohibited"
    - "ignored"
    x-exportParamName: "InitialSoftwareType"
    x-optionalDataType: "String"
  job_id:
    name: "job_id"
    in: "formData"
    description: "D42 ID for the job"
    required: true
    type: "string"
    x-exportParamName: "JobId"
  job_id_wname:
    name: "job_id"
    in: "formData"
    description: "D42 ID for the job - required if no name"
    required: false
    type: "string"
    x-exportParamName: "JobId"
    x-optionalDataType: "String"
  joyent_keyname:
    name: "joyent_keyname"
    in: "formData"
    description: "Only for Joyent"
    required: false
    type: "string"
  key:
    name: "key"
    in: "formData"
    description: "Can be new or existing. This is the custom field name."
    required: true
    type: "string"
    x-exportParamName: "Key"
  last_updated_lt:
    name: "last_updated_lt"
    in: "query"
    description: "last updated less than date YYYY-MM-DD format"
    required: false
    type: "string"
    x-exportParamName: "LastUpdatedLt"
    x-optionalDataType: "String"
  last_updated_gt:
    name: "last_updated_gt"
    in: "query"
    description: "last updated greater than date YYYY-MM-DD format"
    required: false
    type: "string"
    x-exportParamName: "LastUpdatedGt"
    x-optionalDataType: "String"
  limit:
    name: "limit"
    in: "query"
    description: "return this number of devices"
    required: false
    type: "string"
    x-exportParamName: "Limit"
    x-optionalDataType: "String"
  location:
    name: "location"
    in: "formData"
    description: "Location/region of instance deployment"
    required: false
    type: "string"
    x-exportParamName: "Location"
    x-optionalDataType: "String"
  label:
    name: "label"
    in: "query"
    required: false
    type: "string"
    x-exportParamName: "Label"
    x-optionalDataType: "String"
  label_post:
    name: "label"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "Label"
    x-optionalDataType: "String"
  length:
    name: "length"
    in: "formData"
    description: "Cable length"
    required: false
    type: "string"
    x-exportParamName: "Length"
    x-optionalDataType: "String"
  licensed_count:
    name: "licensed_count"
    in: "query"
    description: "Number of licensed instances of operating system"
    required: false
    type: "string"
    x-exportParamName: "LicensedCount"
    x-optionalDataType: "String"
  licensed_count_post:
    name: "licensed_count"
    in: "formData"
    description: "Number of licensed instances of operating system"
    required: false
    type: "string"
  licensing_model:
    name: "licensing_model"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LicensingModel"
    x-optionalDataType: "String"
  licensing_model_get:
    name: "licensing_model"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LicensingModel"
    x-optionalDataType: "String"
  license_key:
    name: "license_key"
    in: "formData"
    description: "OS license key"
    required: false
    type: "string"
    x-exportParamName: "LicenseKey"
    x-optionalDataType: "String"
  line_type:
    name: "line_type"
    in: "formData"
    description: "required for any new line being added for both device or contract."
    required: false
    type: "string"
    x-exportParamName: "LineType"
    x-optionalDataType: "String"
  line_no:
    name: "line_no"
    in: "formData"
    description: "required for existing line items, use existing line # to change\
      \ existing line item."
    required: false
    type: "string"
    x-exportParamName: "LineNo"
    x-optionalDataType: "String"
  line_name:
    name: "line_name"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LineName"
    x-optionalDataType: "String"
  line_quantity:
    name: "line_quantity"
    in: "formData"
    description: "can be calculated automatically from # of objects associated"
    required: false
    type: "string"
    x-exportParamName: "LineQuantity"
    x-optionalDataType: "String"
  line_cost:
    name: "line_cost"
    in: "formData"
    description: "cost for single object / item."
    required: false
    type: "string"
    x-exportParamName: "LineCost"
    x-optionalDataType: "String"
  line_cost_center:
    name: "line_cost_center"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LineCostCenter"
    x-optionalDataType: "String"
  line_customer:
    name: "line_customer"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LineCustomer"
    x-optionalDataType: "String"
  line_item_type:
    name: "line_item_type"
    in: "formData"
    description: "Default is device."
    required: false
    type: "string"
    enum:
    - "device"
    - "asset"
    - "device_os"
    - "rack"
    - "shipping"
    - "tax"
    - "other"
    x-exportParamName: "LineItemType"
    x-optionalDataType: "String"
  line_asset_ids:
    name: "line_asset_ids"
    in: "formData"
    description: "Comma separated asset_id. Only applicable if line_item_type is asset."
    required: false
    type: "string"
    x-exportParamName: "LineAssetIds"
    x-optionalDataType: "String"
  line_start_date:
    name: "line_start_date"
    in: "formData"
    description: "Date in YYYY-MM-DD format"
    required: false
    type: "string"
    x-exportParamName: "LineStartDate"
    x-optionalDataType: "String"
  line_end_date:
    name: "line_end_date"
    in: "formData"
    description: "Date in YYYY-MM-DD format"
    required: false
    type: "string"
    x-exportParamName: "LineEndDate"
    x-optionalDataType: "String"
  line_frequency:
    name: "line_frequency"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "one time"
    - "monthly"
    - "quarterly"
    - "bi-annually"
    - "annually"
    x-exportParamName: "LineFrequency"
    x-optionalDataType: "String"
  line_renew_date:
    name: "line_renew_date"
    in: "formData"
    description: "Date in YYYY-MM-DD format"
    required: false
    type: "string"
    x-exportParamName: "LineRenewDate"
    x-optionalDataType: "String"
  line_cancel_policy:
    name: "line_cancel_policy"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LineCancelPolicy"
    x-optionalDataType: "String"
  line_contract_type:
    name: "line_contract_type"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LineContractType"
    x-optionalDataType: "String"
  line_service_type:
    name: "line_service_type"
    in: "formData"
    description: "new service type will be created, if it doesn’t exist (added in\
      \ v9.0.2)"
    required: false
    type: "string"
    x-exportParamName: "LineServiceType"
    x-optionalDataType: "String"
  line_contract_id:
    name: "line_contract_id"
    in: "formData"
    description: "(added in v9.0.2)"
    required: false
    type: "string"
    x-exportParamName: "LineContractId"
    x-optionalDataType: "String"
  ldap_server:
    name: "ldap_server"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LdapServer"
    x-optionalDataType: "String"
  ldap_filter_type:
    name: "ldap_filter_type"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "all"
    - "servers"
    - "custom"
    - "custom_ldap_filter"
    x-exportParamName: "LdapFilterType"
    x-optionalDataType: "String"
  ldap_unpwd_id:
    name: "ldap_unpwd_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LdapUnpwdId"
    x-optionalDataType: "String"
  line_notes:
    name: "line_notes"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "LineNotes"
    x-optionalDataType: "String"
  line_completed:
    name: "line_completed"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "LineCompleted"
    x-optionalDataType: "String"
  line_devices:
    name: "line_devices"
    in: "formData"
    description: "Comma separated device names. Only applicable if line_item_type\
      \ is device. Will create new devices if device with name specific here does\
      \ not exist."
    required: false
    type: "string"
    x-exportParamName: "LineDevices"
    x-optionalDataType: "String"
  line_device_serial_nos:
    name: "line_device_serial_nos"
    in: "formData"
    description: "Comma separated serial numbers. Only applicable if line_item_type\
      \ is device. Will only work on existing serial numbers."
    required: false
    type: "string"
    x-exportParamName: "LineDeviceSerialNos"
    x-optionalDataType: "String"
  line_device_asset_nos:
    name: "line_device_asset_nos"
    in: "formData"
    description: "Comma separated asset numbers. Only applicable if line_item_type\
      \ is device. Will only work on existing asset numbers."
    required: false
    type: "string"
    x-exportParamName: "LineDeviceAssetNos"
    x-optionalDataType: "String"
  line_circuits:
    name: "line_circuits"
    in: "formData"
    description: "circuit ID name"
    required: false
    type: "string"
    x-exportParamName: "LineCircuits"
    x-optionalDataType: "String"
  line_circuit_ids:
    name: "line_circuit_ids"
    in: "formData"
    description: "D42 ID for the circuit(s)"
    required: false
    type: "string"
    x-exportParamName: "LineCircuitIds"
    x-optionalDataType: "String"
  line_building_ids:
    name: "line_building_ids"
    in: "formData"
    description: "D42 ID for the building(s)"
    required: false
    type: "string"
    x-exportParamName: "LineBuildingIds"
    x-optionalDataType: "String"
  line_certificate_ids:
    name: "line_certificate_ids"
    in: "formData"
    description: "D42 ID for the certificate(s)"
    required: false
    type: "string"
    x-exportParamName: "LineCertificateIds"
    x-optionalDataType: "String"
  line_software_ids:
    name: "line_software_ids"
    in: "formData"
    description: "D42 ID for the software"
    required: false
    type: "string"
    x-exportParamName: "LineSoftwareIds"
    x-optionalDataType: "String"
  line_room_ids:
    name: "line_room_ids"
    in: "formData"
    description: "D42 ID for the room(s)"
    required: false
    type: "string"
    x-exportParamName: "LineRoomIds"
    x-optionalDataType: "String"
  line_rack_ids:
    name: "line_rack_ids"
    in: "formData"
    description: "D42 ID for the rack(s)"
    required: false
    type: "string"
    x-exportParamName: "LineRackIds"
    x-optionalDataType: "String"
  line_part_ids:
    name: "line_part_ids"
    in: "formData"
    description: "D42 ID for the part(s)"
    required: false
    type: "string"
    x-exportParamName: "LinePartIds"
    x-optionalDataType: "String"
  line_device_os_ids:
    name: "line_device_os_ids"
    in: "formData"
    description: "D42 ID for the Device OS"
    required: false
    type: "string"
    x-exportParamName: "LineDeviceOsIds"
    x-optionalDataType: "String"
  listening_ip:
    name: "listening_ip"
    in: "formData"
    description: "the name of the device"
    required: false
    type: "string"
    x-exportParamName: "ListeningIp"
    x-optionalDataType: "String"
  listener_device_name:
    name: "listener_device_name"
    in: "query"
    description: "Name of device with listening services"
    required: false
    type: "string"
    x-exportParamName: "ListenerDeviceName"
    x-optionalDataType: "String"
  license_key_count:
    name: "license_key_count"
    in: "formData"
    description: "The number of licenses this software key supports"
    required: false
    type: "string"
    x-exportParamName: "LicenseKeyCount"
    x-optionalDataType: "String"
  license_use_count:
    name: "license_use_count"
    in: "formData"
    description: "the number of licenses that are in use for this software instance"
    required: false
    type: "string"
    x-exportParamName: "LicenseUseCount"
    x-optionalDataType: "String"
  max_blades_per_row:
    name: "max_blades_per_row"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "MaxBladesPerRow"
    x-optionalDataType: "String"
  mask_bits:
    name: "mask_bits"
    in: "query"
    description: "mask bits (added in v7.2.0)"
    required: true
    type: "string"
    x-exportParamName: "MaskBits"
  mask_bits_lt:
    name: "mask_bits_lt"
    in: "query"
    description: "less than mask bits (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "MaskBitsLt"
    x-optionalDataType: "String"
  mask_bits_gt:
    name: "mask_bits_gt"
    in: "query"
    description: "greater than mask bits (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "MaskBitsGt"
    x-optionalDataType: "String"
  mac:
    name: "mac"
    in: "query"
    description: "mac address"
    required: false
    type: "string"
    x-exportParamName: "Mac"
    x-optionalDataType: "String"
  mac_id:
    name: "mac_id"
    in: "formData"
    description: "mac_id references port_id value. mac_id available via GET at /api/api/1.0/macs/\
      \ or Tools > Export > MAC Address * Please see note below"
    required: false
    type: "string"
    x-exportParamName: "MacId"
    x-optionalDataType: "String"
  macaddress:
    name: "macaddress"
    in: "formData"
    description: "MAC address – can be new or existing"
    required: false
    type: "string"
    x-exportParamName: "Macaddress"
    x-optionalDataType: "String"
  mapped_service:
    name: "mapped_service"
    in: "query"
    description: "the name of the mapped service listening on this IP/port"
    required: false
    type: "string"
    x-exportParamName: "MappedService"
    x-optionalDataType: "String"
  mapped_service_post:
    name: "mapped_service"
    in: "formData"
    description: "the name of the mapped service listening on this IP/port"
    required: false
    type: "string"
    x-exportParamName: "MappedService"
    x-optionalDataType: "String"
  match_name_only_for_virtuals:
    name: "match_name_only_for_virtuals"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "MatchNameOnlyForVirtuals"
    x-optionalDataType: "String"
  match_name_only_for_hypervisor:
    name: "match_name_only_for_hypervisor"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "MatchNameOnlyForHypervisor"
    x-optionalDataType: "String"
  module:
    name: "module"
    in: "formData"
    description: "name of the blade that port belongs to. Blade device must be part\
      \ of the switch. (added in v5.8.1)"
    required: false
    type: "string"
    x-exportParamName: "Module"
    x-optionalDataType: "String"
  module_slot:
    name: "module_slot"
    in: "formData"
    description: "change patch panel port for a certain module slot # (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "ModuleSlot"
    x-optionalDataType: "String"
  media_type:
    name: "media_type"
    in: "formData"
    description: "Type of media"
    required: false
    type: "string"
    x-exportParamName: "MediaType"
    x-optionalDataType: "String"
  method:
    name: "method"
    in: "formData"
    description: "Backup method: 1 for mail,2 for sftp,3 for nfs or 4 for amazon s3"
    required: true
    type: "string"
    x-exportParamName: "Method"
  minutes:
    name: "minutes"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "Minutes"
    x-optionalDataType: "String"
  mtu:
    name: "mtu"
    in: "formData"
    description: "add value for mtu"
    required: false
    type: "string"
    x-exportParamName: "Mtu"
    x-optionalDataType: "String"
  month_of_year:
    name: "month_of_year"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "MonthOfYear"
    x-optionalDataType: "String"
  monitor_direction:
    name: "monitor_direction"
    in: "formData"
    description: "Direction - to, both (optional, only for PortCap: Monitor)"
    required: false
    type: "string"
    x-exportParamName: "MonitorDirection"
    x-optionalDataType: "String"
  monitor_port_1_id:
    name: "monitor_port_1_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "MonitorPort1Id"
    x-optionalDataType: "String"
  monitor_port_2_id:
    name: "monitor_port_2_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "MonitorPort2Id"
    x-optionalDataType: "String"
  morror_port:
    name: "morror_port"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "MorrorPort"
    x-optionalDataType: "String"
  manufacturer:
    name: "manufacturer"
    in: "query"
    description: "name of the hardware manufacturer."
    required: false
    type: "string"
    x-exportParamName: "Manufacturer"
    x-optionalDataType: "String"
  manufacturer_post:
    name: "manufacturer"
    in: "formData"
    description: "name of the hardware/software manufacturer."
    required: false
    type: "string"
    x-exportParamName: "Manufacturer"
    x-optionalDataType: "String"
  module_host_id:
    name: "module_host_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ModuleHostId"
    x-optionalDataType: "String"
  module_host:
    name: "module_host"
    in: "formData"
    description: "Name of the Module host. Must be unique asset name for this to work.\
      \ (use instead of ID, Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "ModuleHost"
    x-optionalDataType: "String"
  module_pos:
    name: "module_pos"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "horizontal"
    - "vertical"
    x-exportParamName: "ModulePos"
    x-optionalDataType: "String"
  module_position:
    name: "module_position"
    in: "formData"
    description: "for Modular Patch Panel Models. Possible values are horizontal or\
      \ vertical (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "ModulePosition"
    x-optionalDataType: "String"
  module_not_found:
    name: "module_not_found"
    in: "formData"
    description: "action to take on module not found. One of: Remove Host Association,\
      \ Change Service Level, Delete Module (default is no action)"
    required: false
    type: "string"
    x-exportParamName: "ModuleNotFound"
    x-optionalDataType: "String"
  modelno:
    name: "modelno"
    in: "formData"
    description: "Model # of the part model"
    required: false
    type: "string"
    x-exportParamName: "Modelno"
    x-optionalDataType: "String"
  network:
    name: "network"
    in: "query"
    description: "optional"
    required: true
    type: "string"
  name_to_use_for_newly_discovered_module:
    name: "name_to_use_for_newly_discovered_module"
    in: "formData"
    description: "name to use"
    required: false
    type: "string"
    x-exportParamName: "NameToUseForNewlyDiscoveredModule"
    x-optionalDataType: "String"
  name_to_use_for_newly_discovered_pdu:
    name: "name_to_use_for_newly_discovered_pdu"
    in: "formData"
    description: "one of: Name discovered by SNMP, Name plus serial number, Name plus\
      \ serial number plus IP"
    required: false
    type: "string"
    x-exportParamName: "NameToUseForNewlyDiscoveredPdu"
    x-optionalDataType: "String"
  name:
    name: "name"
    in: "query"
    description: "filter by name (Added in v6.0.0)"
    required: false
    type: "string"
    x-exportParamName: "Name"
    x-optionalDataType: "String"
  new_name:
    name: "new_name"
    in: "formData"
    description: "Use to change name of object."
    required: false
    type: "string"
    x-exportParamName: "NewName"
    x-optionalDataType: "String"
  numbering_start_from_bottom:
    name: "numbering_start_from_bottom"
    in: "formData"
    description: "default is yes, no to change, otherwise ignored."
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "NumberingStartFromBottom"
    x-optionalDataType: "String"
  notes:
    name: "notes"
    in: "query"
    description: "Any additional notes"
    required: false
    type: "string"
    x-exportParamName: "Notes"
    x-optionalDataType: "String"
  notes_post:
    name: "notes"
    in: "formData"
    description: "Any additional notes"
    required: false
    type: "string"
    x-exportParamName: "Notes"
    x-optionalDataType: "String"
  number:
    name: "number"
    in: "query"
    description: "vlan number"
    required: false
    type: "string"
    x-exportParamName: "Number"
    x-optionalDataType: "String"
  number_post:
    name: "number"
    in: "formData"
    description: "vlan number"
    required: false
    type: "string"
    x-exportParamName: "Number"
    x-optionalDataType: "String"
  new_port:
    name: "new_port"
    in: "formData"
    description: "rename exisiting port"
    required: false
    type: "string"
    x-exportParamName: "NewPort"
    x-optionalDataType: "String"
  netport_id:
    name: "netport_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "NetportId"
    x-optionalDataType: "String"
  nameserver:
    name: "nameserver"
    in: "query"
    description: "Nameserver"
    required: false
    type: "string"
    x-exportParamName: "Nameserver"
    x-optionalDataType: "String"
  numbering_start_from:
    name: "numbering_start_from"
    in: "formData"
    description: "This is starting # for patch panel ports. Defaults to 1 if not entered."
    required: false
    type: "string"
    x-exportParamName: "NumberingStartFrom"
    x-optionalDataType: "String"
  number_of_ports:
    name: "number_of_ports"
    in: "formData"
    description: "number of ports. required for creating a new patch panel type singular.\
      \ Ignored for patch panel type modular"
    required: false
    type: "string"
    x-exportParamName: "NumberOfPorts"
    x-optionalDataType: "String"
  number_of_ports_in_row:
    name: "number_of_ports_in_row"
    in: "formData"
    description: "number of ports in a row. required for creating a new patch panel\
      \ type singular. Ignored for patch panel type modular"
    required: false
    type: "string"
    x-exportParamName: "NumberOfPortsInRow"
    x-optionalDataType: "String"
  not_licensed_count:
    name: "not_licensed_count"
    in: "query"
    description: "Number of discovered instances of operating system not set to licensed"
    required: false
    type: "string"
    x-exportParamName: "NotLicensedCount"
    x-optionalDataType: "String"
  os:
    name: "os"
    in: "query"
    description: "filter by OS name (added in v8.3.0)"
    required: false
    type: "string"
    x-exportParamName: "Os"
    x-optionalDataType: "String"
  os_post:
    name: "os"
    in: "formData"
    description: "Operating system name.<br><br>Use this parameter to create or change\
      \ a device OS. See the device parameters above."
    required: false
    type: "string"
    x-exportParamName: "Os"
    x-optionalDataType: "String"
  object_id:
    name: "object_id"
    in: "query"
    description: "Filters by object ID (ie, device ID, asset ID)"
    required: false
    type: "string"
    x-exportParamName: "ObjectId"
    x-optionalDataType: "String"
  os_id:
    name: "os_id"
    in: "query"
    description: "Operating system ID"
    required: false
    type: "string"
    x-exportParamName: "OsId"
    x-optionalDataType: "String"
  osver:
    name: "osver"
    in: "formData"
    description: "Operating system version name"
    required: false
    type: "string"
    x-exportParamName: "Osver"
    x-optionalDataType: "String"
  osverno:
    name: "osverno"
    in: "formData"
    description: "Operating system version number"
    required: false
    type: "string"
    x-exportParamName: "Osverno"
    x-optionalDataType: "String"
  obj_label1:
    name: "obj_label1"
    in: "formData"
    description: "object label 1"
    required: false
    type: "string"
    x-exportParamName: "ObjLabel1"
    x-optionalDataType: "String"
  obj_label2:
    name: "obj_label2"
    in: "formData"
    description: "object label 2"
    required: false
    type: "string"
    x-exportParamName: "ObjLabel2"
    x-optionalDataType: "String"
  object_category:
    name: "object_category"
    in: "formData"
    description: "name of subnet category for discovered subnets"
    required: false
    type: "string"
    x-exportParamName: "ObjectCategory"
    x-optionalDataType: "String"
  object_category_pdu:
    name: "object_category"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ObjectCategory"
    x-optionalDataType: "String"
  object_category_get:
    name: "object_category"
    in: "query"
    description: "filter by object category"
    required: false
    type: "string"
    x-exportParamName: "ObjectCategory"
    x-optionalDataType: "String"
  origin_cable:
    name: "origin_cable"
    in: "query"
    description: "Cable Type (User definable)"
    required: false
    type: "string"
  origin_cable_post:
    name: "origin_cable_type"
    in: "formData"
    description: "Cable Type (User definable)"
    required: false
    type: "string"
    x-exportParamName: "OriginCableType"
    x-optionalDataType: "String"
  origin_cable_color:
    name: "origin_cable_color"
    in: "formData"
    description: "Origin Cable Color"
    required: false
    type: "string"
    x-exportParamName: "OriginCableColor"
    x-optionalDataType: "String"
  object_category_id:
    name: "object_category_id"
    in: "query"
    description: "filter by object category ID"
    required: false
    type: "string"
    x-exportParamName: "ObjectCategoryId"
    x-optionalDataType: "String"
  origin_connector_type:
    name: "origin_connector_type"
    in: "query"
    description: "Connector Type (User Definable)"
    required: false
    type: "string"
  origin_connector_type_post:
    name: "origin_connector_type"
    in: "formData"
    description: "Connector Type (User Definable)"
    required: false
    type: "string"
    x-exportParamName: "OriginConnectorType"
    x-optionalDataType: "String"
  other_trigger:
    name: "other_trigger"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "OtherTrigger"
    x-optionalDataType: "String"
  other_type:
    name: "other_type"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "OtherType"
    x-optionalDataType: "String"
  offset:
    name: "offset"
    in: "query"
    description: "start with this device (e.g. limit=100&offset=50 means start with\
      \ the 50th device and return the next 100 devices)"
    required: false
    type: "string"
    x-exportParamName: "Offset"
    x-optionalDataType: "String"
  override:
    name: "override"
    in: "formData"
    description: "smart – will detect if the port_name passed exist or not, if not\
      \ – it is added to the current port name. Helpful, if you want to track all\
      \ the port names for that mac address (e.g. eth0 & bond0).<br>yes – change the\
      \ port name. This is default behavior even if you don’t pass this parameter<br>no\
      \ – will not change the port name"
    required: false
    type: "string"
    enum:
    - "smart"
    - "yes"
    - "no"
    x-exportParamName: "Override"
    x-optionalDataType: "String"
  overwrite_object_categories:
    name: "overwrite_object_categories"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "OverwriteObjectCategories"
    x-optionalDataType: "String"
  orientation_rack:
    name: "orientation"
    in: "formData"
    description: "orientation of the rack in room layout view. Possible values: right,\
      \ left, up or down."
    required: false
    type: "string"
    enum:
    - "left"
    - "right"
    - "up"
    - "down"
    x-exportParamName: "Orientation"
    x-optionalDataType: "String"
  orientation_pdu:
    name: "orientation"
    in: "formData"
    description: "orientation of the PDU in rack. back for rear facing, otherwise\
      \ front is default."
    required: false
    type: "string"
    x-exportParamName: "Orientation"
    x-optionalDataType: "String"
  outlet_name:
    name: "outlet_name"
    in: "formData"
    description: "outlet name"
    required: false
    type: "string"
    x-exportParamName: "OutletName"
    x-optionalDataType: "String"
  outscale_regions:
    name: "outscale_regions"
    in: "formData"
    description: "Comma separated region names for Outscale"
    required: false
    type: "string"
  order_no:
    name: "order_no"
    in: "query"
    description: "Order number"
    required: false
    type: "string"
    x-exportParamName: "OrderNo"
    x-optionalDataType: "String"
  order_date:
    name: "order_date"
    in: "query"
    description: "Order number"
    required: false
    type: "string"
    x-exportParamName: "OrderDate"
    x-optionalDataType: "String"
  origin_type:
    name: "origin_type"
    in: "query"
    description: "Type of origin point."
    required: false
    type: "string"
    enum:
    - "device"
    - "circuit"
    - "switchport"
    - "vendor"
    - "patch_panel_port"
    x-exportParamName: "OriginType"
    x-optionalDataType: "String"
  origin_type_post:
    name: "origin_type"
    in: "formData"
    description: "Type of origin point."
    required: false
    type: "string"
    enum:
    - "cable"
    - "circuit"
    - "switchport"
    - "tap_port"
    - "patch_panel_port"
    x-exportParamName: "OriginType"
    x-optionalDataType: "String"
  origin_id:
    name: "origin_id"
    in: "query"
    description: "ID of the origin point"
    required: false
    type: "string"
    x-exportParamName: "OriginId"
    x-optionalDataType: "String"
  origin_id_post:
    name: "origin_id"
    in: "formData"
    description: "ID of the origin point"
    required: false
    type: "string"
    x-exportParamName: "OriginId"
    x-optionalDataType: "String"
  origin_device:
    name: "origin_device"
    in: "query"
    description: "if origin type is device, this is name of the device. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginDevice"
    x-optionalDataType: "String"
  origin_device_post:
    name: "origin_device"
    in: "formData"
    description: "if origin type is device, this is name of the device. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginDevice"
    x-optionalDataType: "String"
  origin_circuit_id:
    name: "origin_circuit_id"
    in: "query"
    description: "if origin type is circuit, this is circuit_id of the circuit. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginCircuitId"
    x-optionalDataType: "String"
  origin_circuit_id_post:
    name: "origin_circuit_id"
    in: "formData"
    description: "if origin type is circuit, this is circuit_id of the circuit. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginCircuitId"
    x-optionalDataType: "String"
  origin_switchport:
    name: "origin_switchport"
    in: "query"
    description: "if origin type is switchport, this is name of the switch port. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginSwitchport"
    x-optionalDataType: "String"
  origin_switchport_post:
    name: "origin_switchport"
    in: "formData"
    description: "if origin type is switchport, this is name of the switch port. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginSwitchport"
    x-optionalDataType: "String"
  origin_switch:
    name: "origin_switch"
    in: "query"
    description: "if origin type is switchport, this is name of the switch. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginSwitch"
    x-optionalDataType: "String"
  origin_switch_post:
    name: "origin_switch"
    in: "formData"
    description: "if origin type is switchport, this is name of the switch. Absent\
      \ otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginSwitch"
    x-optionalDataType: "String"
  origin_patch_panel_port:
    name: "origin_patch_panel_port"
    in: "query"
    description: "if origin type is patch_panel_port, this is name of the patch panel\
      \ port. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginPatchPanelPort"
    x-optionalDataType: "String"
  origin_patch_panel_port_post:
    name: "origin_patch_panel_port"
    in: "formData"
    description: "if origin type is patch_panel_port, this is name of the patch panel\
      \ port. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginPatchPanelPort"
    x-optionalDataType: "String"
  origin_patch_panel:
    name: "origin_patch_panel"
    in: "query"
    description: "if origin type is patch_panel_port, this is name of the patch panel.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginPatchPanel"
    x-optionalDataType: "String"
  origin_patch_panel_id:
    name: "origin_patch_panel_id"
    in: "query"
    description: "if origin type is patch_panel_port, this is ID of the patch panel.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginPatchPanelId"
    x-optionalDataType: "String"
  origin_patch_panel_post:
    name: "origin_patch_panel"
    in: "formData"
    description: "if origin type is patch_panel_port, this is name of the patch panel.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginPatchPanel"
    x-optionalDataType: "String"
  origin_patch_panel_id_post:
    name: "origin_patch_panel_id"
    in: "formData"
    description: "if origin type is patch_panel_port, this is ID of the patch panel.\
      \ Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginPatchPanelId"
    x-optionalDataType: "String"
  origin_vendor:
    name: "origin_vendor"
    in: "query"
    description: "if origin type is vendor, this is name of the vendor. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginVendor"
    x-optionalDataType: "String"
  origin_vendor_post:
    name: "origin_vendor"
    in: "formData"
    description: "if origin type is vendor, this is name of the vendor. Absent otherwise"
    required: false
    type: "string"
    x-exportParamName: "OriginVendor"
    x-optionalDataType: "String"
  origin_optic_type:
    name: "origin_optic_type"
    in: "formData"
    description: "Optic Type (Definable, ie multimode)"
    required: false
    type: "string"
    x-exportParamName: "OriginOpticType"
    x-optionalDataType: "String"
  origin_back_patch_panel:
    name: "origin_back_patch_panel"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "OriginBackPatchPanel"
    x-optionalDataType: "String"
  paired_ports:
    name: "paired_ports"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "PairedPorts"
    x-optionalDataType: "String"
  patch_panel_model_id:
    name: "patch_panel_model_id"
    in: "formData"
    description: "Patch Panel Model ID or UI Tools > Export > Patch Panel Model"
    required: false
    type: "string"
    x-exportParamName: "PatchPanelModelId"
    x-optionalDataType: "String"
  patch_panel:
    name: "patch_panel"
    in: "formData"
    description: "Must be a unique asset name for this to work (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "PatchPanel"
    x-optionalDataType: "String"
  patch_panel_model:
    name: "patch_panel_model"
    in: "formData"
    description: "Name of the patch panel model (use instead of ID, Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "PatchPanelModel"
    x-optionalDataType: "String"
  powerunit_connection_ids:
    name: "powerunit_connection_ids"
    in: "formData"
    description: "A comma-separated list of PU IDs connected to this circuit"
    required: false
    type: "string"
    x-exportParamName: "PowerunitConnectionIds"
    x-optionalDataType: "String"
  patch_panel_module_model_id:
    name: "patch_panel_module_model_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "PatchPanelModuleModelId"
    x-optionalDataType: "String"
  patch_panel_module_model:
    name: "patch_panel_module_model"
    in: "formData"
    description: "Name of the patch panel module model (use instead of ID, Added in\
      \ v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "PatchPanelModuleModel"
    x-optionalDataType: "String"
  parent_subnet_id:
    name: "parent_subnet_id"
    in: "formData"
    description: "Change the parent subnet of the subnet. Note: must be valid parent."
    required: false
    type: "string"
    x-exportParamName: "ParentSubnetId"
    x-optionalDataType: "String"
  parent_subnet_id_get:
    name: "parent_subnet_id"
    in: "query"
    description: "ID of the parent subnet"
    required: false
    type: "string"
    x-exportParamName: "ParentSubnetId"
    x-optionalDataType: "String"
  parent_subnet:
    name: "parent_subnet"
    in: "query"
    description: "parent subnet name"
    required: false
    type: "string"
    x-exportParamName: "ParentSubnet"
    x-optionalDataType: "String"
  parent_mask_bits:
    name: "parent_mask_bits"
    in: "formData"
    description: "only if searching within a VRF and you want to restrict to certain\
      \ parents with particular mask bits (added in v9.0.0)"
    required: false
    type: "string"
    x-exportParamName: "ParentMaskBits"
    x-optionalDataType: "String"
  parent_vlan_id:
    name: "parent_vlan_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ParentVlanId"
    x-optionalDataType: "String"
  part_no:
    name: "part_no"
    in: "query"
    description: "filter by part #"
    required: false
    type: "string"
    x-exportParamName: "PartNo"
    x-optionalDataType: "String"
  part_no_post:
    name: "part_no"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "PartNo"
    x-optionalDataType: "String"
  part_id:
    name: "part_id"
    in: "query"
    description: "id of the part (added in v6.3.3)"
    required: false
    type: "string"
    x-exportParamName: "PartId"
    x-optionalDataType: "String"
  partmodel_id:
    name: "partmodel_id"
    in: "query"
    description: "id of the part model (added in v6.3.3)"
    required: false
    type: "string"
    x-exportParamName: "PartmodelId"
    x-optionalDataType: "String"
  parent_pdu_id:
    name: "parent_pdu_id"
    in: "formData"
    description: "Available from /api/api/1.0/pdus/ or Tools"
    required: false
    type: "string"
    x-exportParamName: "ParentPduId"
    x-optionalDataType: "String"
  parent_pdu:
    name: "parent_pdu"
    in: "formData"
    description: "name of the parent PDU. Must be unique name. Added in v5.8.2"
    required: false
    type: "string"
    x-exportParamName: "ParentPdu"
    x-optionalDataType: "String"
  partno:
    name: "partno"
    in: "formData"
    description: "Part # of the part model"
    required: false
    type: "string"
    x-exportParamName: "Partno"
    x-optionalDataType: "String"
  parent_port:
    name: "parent_port"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ParentPort"
    x-optionalDataType: "String"
  parent_port_device:
    name: "parent_port_device"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ParentPortDevice"
    x-optionalDataType: "String"
  patch_panel_port_id:
    name: "patch_panel_port_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "PatchPanelPortId"
    x-optionalDataType: "String"
  pdu:
    name: "pdu"
    in: "formData"
    description: "name of the PDU. only works if the name is unique in the system"
    required: false
    type: "string"
    x-exportParamName: "Pdu"
    x-optionalDataType: "String"
  pdu_id:
    name: "pdu_id"
    in: "formData"
    description: "ID of the PDU to be edited"
    required: false
    type: "string"
    x-exportParamName: "PduId"
    x-optionalDataType: "String"
  pdu_model:
    name: "pdu_model"
    in: "formData"
    description: "Name of the PDU model. You can use this instead of the ID above.\
      \ (Added in v5.8.2)"
    required: false
    type: "string"
    x-exportParamName: "PduModel"
    x-optionalDataType: "String"
  pdu_model_name:
    name: "pdu_model_name"
    in: "formData"
    description: "Name of the PDU model you want to add ports to."
    required: false
    type: "string"
    x-exportParamName: "PduModelName"
    x-optionalDataType: "String"
  pdu_model_id:
    name: "pdu_model_id"
    in: "formData"
    description: "ID of the PDU model you want to update"
    required: false
    type: "string"
    x-exportParamName: "PduModelId"
    x-optionalDataType: "String"
  polling_interval:
    name: "polling_interval"
    in: "formData"
    description: "polling interval in minutes (integer)"
    required: false
    type: "string"
    x-exportParamName: "PollingInterval"
    x-optionalDataType: "String"
  port:
    name: "port"
    in: "query"
    description: "child is optional assuming you have a parent created (see examples)"
    required: true
    type: "string"
    x-exportParamName: "Port"
  port_post:
    name: "port"
    in: "formData"
    description: "child is optional assuming you have a parent created. Required if\
      \ no hwaddress<br>Note: Do not use a port alias for the port name."
    required: false
    type: "string"
    x-exportParamName: "Port"
    x-optionalDataType: "String"
  ports:
    name: "ports"
    in: "formData"
    description: "default is 443, comma separated"
    required: false
    type: "string"
    x-exportParamName: "Ports"
    x-optionalDataType: "String"
  port_name:
    name: "port_name"
    in: "formData"
    description: "Interface name. (Please note: This is NOT the switchport name.)"
    required: false
    type: "string"
    x-exportParamName: "PortName"
    x-optionalDataType: "String"
  port_id:
    name: "port_id"
    in: "query"
    description: "For the port and switch option, port refers to the switchport name\
      \ (not the interface name) and switch refers to the device name of the switch."
    required: false
    type: "string"
  port_number:
    name: "port_number"
    in: "query"
    description: "port number"
    required: false
    type: "string"
  port_capability:
    name: "port_capability"
    in: "formData"
    description: "Port Capability - Device, Monitor"
    required: false
    type: "string"
    x-exportParamName: "PortCapability"
    x-optionalDataType: "String"
  port_to_from_id:
    name: "port_to_from_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "PortToFromId"
    x-optionalDataType: "String"
  port_type:
    name: "port_type"
    in: "query"
    description: "Port Type Name - RJ45, RJ11, Fiber LC, Fiber SC, Fiber FC"
    required: true
    type: "string"
  port_type_id:
    name: "port_type_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "PortTypeId"
    x-optionalDataType: "String"
  po_date:
    name: "po_date"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "PoDate"
    x-optionalDataType: "String"
  port_name_prefix_to_ignore_macs:
    name: "port_name_prefix_to_ignore_macs"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "PortNamePrefixToIgnoreMacs"
    x-optionalDataType: "String"
  prio:
    name: "prio"
    in: "formData"
    description: "Priority for MX record."
    required: false
    type: "string"
    x-exportParamName: "Prio"
    x-optionalDataType: "String"
  protocol:
    name: "protocol"
    in: "formData"
    description: "the transport protocol, ie TCP"
    required: false
    type: "string"
    x-exportParamName: "Protocol"
    x-optionalDataType: "String"
  psu_label:
    name: "psu_label"
    in: "formData"
    description: "typically used when device has multiple power supplies, e.g.: power\
      \ supply 1, power supply 2, etc."
    required: false
    type: "string"
    x-exportParamName: "PsuLabel"
    x-optionalDataType: "String"
  purchase_id:
    name: "purchase_id"
    in: "query"
    description: "Device42 Purchase ID"
    required: false
    type: "string"
    x-exportParamName: "PurchaseId"
    x-optionalDataType: "String"
  plain_text:
    name: "plain_text"
    in: "query"
    description: "Decrypt the password and return the plain text version. ?plain_text=yes\
      \ will decrypt and display the password."
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "PlainText"
    x-optionalDataType: "String"
  platform:
    name: "platform"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "windows"
    - "winrm"
    - "docker api"
    - "docker"
    - "nutanix"
    - "linux"
    - "vmware"
    - "unix"
    - "aix hmc"
    - "openvz"
    - "oracle vm"
    - "lxc"
    - "kvm"
    - "libvirt"
    - "ovirt"
    - "redhat"
    - "citrix xen"
    x-exportParamName: "Platform"
    x-optionalDataType: "String"
  password:
    name: "password"
    in: "formData"
    description: "The password."
    required: false
    type: "string"
    x-exportParamName: "Password"
    x-optionalDataType: "String"
  phone:
    name: "phone"
    in: "formData"
    description: "Text field."
    required: false
    type: "string"
    x-exportParamName: "Phone"
    x-optionalDataType: "String"
  provision_date:
    name: "provision_date"
    in: "query"
    description: "Text field."
    required: false
    type: "string"
    x-exportParamName: "ProvisionDate"
    x-optionalDataType: "String"
  prepend_vmhostname:
    name: "prepend_vmhostname"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "PrependVmhostname"
    x-optionalDataType: "String"
  run:
    name: "run"
    in: "formData"
    description: "yes to start"
    required: true
    type: "string"
    x-exportParamName: "Run"
  run_as_operator:
    name: "run_as_operator"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "RunAsOperator"
    x-optionalDataType: "String"
  row:
    name: "row"
    in: "formData"
    description: "this row field is for the name of the rows, and not related to the\
      \ grid positioning of the rack"
    required: false
    type: "string"
    x-exportParamName: "Row"
    x-optionalDataType: "String"
  room_id:
    name: "room_id"
    in: "query"
    description: "filter by room ID (Added in v5.9.0)"
    required: false
    type: "string"
    x-exportParamName: "RoomId"
    x-optionalDataType: "String"
  room_id_post:
    name: "room_id"
    in: "formData"
    description: "Room ID if Room name is not unique"
    required: false
    type: "string"
    x-exportParamName: "RoomId"
    x-optionalDataType: "String"
  room:
    name: "room"
    in: "query"
    description: "filter by room name. Only works if room ID is not present (Added\
      \ in v5.9.0)"
    required: false
    type: "string"
    x-exportParamName: "Room"
    x-optionalDataType: "String"
  raid_type:
    name: "raid_type"
    in: "formData"
    description: "type of RAID"
    required: false
    type: "string"
    x-exportParamName: "RaidType"
    x-optionalDataType: "String"
  raid_group:
    name: "raid_group"
    in: "formData"
    description: "RAID group name"
    required: false
    type: "string"
    x-exportParamName: "RaidGroup"
    x-optionalDataType: "String"
  ramsize:
    name: "ramsize"
    in: "formData"
    description: "enter in MB, e.g.: 8 GB enter 8192"
    required: false
    type: "string"
    x-exportParamName: "Ramsize"
    x-optionalDataType: "String"
  ramtype:
    name: "ramtype"
    in: "formData"
    description: "e.g.: DDR3"
    required: false
    type: "string"
    x-exportParamName: "Ramtype"
    x-optionalDataType: "String"
  ramspeed:
    name: "ramspeed"
    in: "formData"
    description: "e.g.: 1600"
    required: false
    type: "string"
    x-exportParamName: "Ramspeed"
    x-optionalDataType: "String"
  rack_id:
    name: "rack_id"
    in: "query"
    description: "filter by rack ID (Added in v5.9.0)"
    required: false
    type: "string"
    x-exportParamName: "RackId"
    x-optionalDataType: "String"
  rack:
    name: "rack"
    in: "query"
    description: "filter by rack name. Only works if rack ID is not present (Added\
      \ in v5.9.0)"
    required: false
    type: "string"
    x-exportParamName: "Rack"
    x-optionalDataType: "String"
  rated_power:
    name: "rated_power"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "RatedPower"
    x-optionalDataType: "String"
  related_field_name:
    name: "related_field_name"
    in: "formData"
    description: "Required if type = related field."
    required: false
    type: "string"
    enum:
    - "appcomp"
    - "building"
    - "certificate"
    - "circuit"
    - "costcenter"
    - "customer"
    - "device"
    - "dns_zone"
    - "endusers"
    - "hardware"
    - "ip_address"
    - "mactable"
    - "os"
    - "room"
    - "servicecategory"
    - "software_category"
    - "software"
    - "vlan"
    - "netport"
    x-exportParamName: "RelatedFieldName"
    x-optionalDataType: "String"
  related_device_id:
    name: "related_device_id"
    in: "query"
    description: "ID of the related device (added in v9.3.0)"
    required: false
    type: "string"
    x-exportParamName: "RelatedDeviceId"
    x-optionalDataType: "String"
  raised_floor:
    name: "raised_floor"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "RaisedFloor"
    x-optionalDataType: "String"
  raised_floor_height:
    name: "raised_floor_height"
    in: "formData"
    description: "height of raised floor"
    required: false
    type: "string"
    x-exportParamName: "RaisedFloorHeight"
    x-optionalDataType: "String"
  reverse_xaxis:
    name: "reverse_xaxis"
    in: "formData"
    description: "'yes' reverses the numbering order on the x-axis"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ReverseXaxis"
    x-optionalDataType: "String"
  reverse_yaxis:
    name: "reverse_yaxis"
    in: "formData"
    description: "'yes' reverses the numbering order on the y-axis"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ReverseYaxis"
    x-optionalDataType: "String"
  remote_collector_id:
    name: "remote_collector_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "RemoteCollectorId"
    x-optionalDataType: "String"
  range_begin:
    name: "range_begin"
    in: "query"
    description: "Range Begin (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "RangeBegin"
    x-optionalDataType: "String"
  range_begin_post:
    name: "range_begin"
    in: "formData"
    description: "Range Begin (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "RangeBegin"
    x-optionalDataType: "String"
  range_end:
    name: "range_end"
    in: "query"
    description: "Range End (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "RangeEnd"
    x-optionalDataType: "String"
  range_end_post:
    name: "range_end"
    in: "formData"
    description: "Range End (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "RangeEnd"
    x-optionalDataType: "String"
  remove_unfound_instances:
    name: "remove_unfound_instances"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "RemoveUnfoundInstances"
    x-optionalDataType: "String"
  remote_port_id:
    name: "remote_port_id"
    in: "formData"
    description: "ID of the remote connected switch port."
    required: false
    type: "string"
    x-exportParamName: "RemotePortId"
    x-optionalDataType: "String"
  remote_ips:
    name: "remote_ips"
    in: "formData"
    description: "the comma separated list of remote IPs that are connected to this\
      \ listening IP/port"
    required: false
    type: "string"
    x-exportParamName: "RemoteIps"
    x-optionalDataType: "String"
  remote_device:
    name: "remote_device"
    in: "formData"
    description: "Name of the switch for remote connected switch port."
    required: false
    type: "string"
    x-exportParamName: "RemoteDevice"
    x-optionalDataType: "String"
  remote_port:
    name: "remote_port"
    in: "formData"
    description: "Name of the port for remote connected switch port."
    required: false
    type: "string"
    x-exportParamName: "RemotePort"
    x-optionalDataType: "String"
  remote_port_clear:
    name: "remote_port_clear"
    in: "formData"
    description: "if set to yes, will clear the remote port"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "RemotePortClear"
    x-optionalDataType: "String"
  reserve_ip:
    name: "reserve_ip"
    in: "query"
    description: "If value of yes is passed, the suggested IP is reserved. Return\
      \ value also adds reserved as yes or no. (added in v7.2.0)"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ReserveIp"
    x-optionalDataType: "String"
  row_size:
    name: "row_size"
    in: "formData"
    description: "How many rows long the rack is"
    required: false
    type: "string"
    x-exportParamName: "RowSize"
    x-optionalDataType: "String"
  snmp_string:
    name: "snmp_string"
    in: "formData"
    description: "required, if new"
    required: false
    type: "string"
    x-exportParamName: "SnmpString"
    x-optionalDataType: "String"
  snmp_port:
    name: "snmp_port"
    in: "formData"
    description: "snmp port (integer only) (added in v10.4.0)"
    required: false
    type: "integer"
    x-exportParamName: "SnmpPort"
    x-optionalDataType: "Int32"
  snmp_version:
    name: "snmp_version"
    in: "formData"
    required: false
    type: "string"
    default: "v2c"
    enum:
    - "v1"
    - "v2c"
    - "v3"
    x-exportParamName: "SnmpVersion"
    x-optionalDataType: "String"
  snmp_string_id:
    name: "snmp_string_id"
    in: "formData"
    description: "The id of the password for the community string"
    required: false
    type: "string"
    x-exportParamName: "SnmpStringId"
    x-optionalDataType: "String"
  snmp_strings:
    name: "snmp_strings"
    in: "formData"
    description: "Can be comma separated list of community strings to use multiple\
      \ community strings"
    required: false
    type: "string"
    x-exportParamName: "SnmpStrings"
    x-optionalDataType: "String"
  snmp_string_ids:
    name: "snmp_string_ids"
    in: "formData"
    description: "Can be comma separated list of community string IDs to use multiple\
      \ community strings"
    required: false
    type: "string"
    x-exportParamName: "SnmpStringIds"
    x-optionalDataType: "String"
  snmpv3_auth_password_id:
    name: "snmpv3_auth_password_id"
    in: "formData"
    description: "The id of the password for the auth password"
    required: false
    type: "string"
    x-exportParamName: "Snmpv3AuthPasswordId"
    x-optionalDataType: "String"
  snmpv3_privacy_protocol_password_id:
    name: "snmpv3_privacy_protocol_password_id"
    in: "formData"
    description: "The id of the password for the privacy protocol password"
    required: false
    type: "string"
    x-exportParamName: "Snmpv3PrivacyProtocolPasswordId"
    x-optionalDataType: "String"
  snmpv3_user:
    name: "snmpv3_user"
    in: "formData"
    description: "name of snmp v3 user (added in v10.4.0)"
    required: false
    type: "string"
    x-exportParamName: "Snmpv3User"
    x-optionalDataType: "String"
  snmpv3_auth_mode:
    name: "snmpv3_auth_mode"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "noAuthoNoPriv"
    - "authNoPriv"
    - "authPriv"
    x-exportParamName: "Snmpv3AuthMode"
    x-optionalDataType: "String"
  snmpv3_auth_protocol:
    name: "snmpv3_auth_protocol"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "MD5"
    - "SHA"
    x-exportParamName: "Snmpv3AuthProtocol"
    x-optionalDataType: "String"
  snmpv3_auth_password:
    name: "snmpv3_auth_password"
    in: "formData"
    description: "password (added in v10.4.0)"
    required: false
    type: "string"
    x-exportParamName: "Snmpv3AuthPassword"
    x-optionalDataType: "String"
  snmpv3_privacy_protocol:
    name: "snmpv3_privacy_protocol"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "DES"
    - "3DES"
    - "AES"
    - "AES128"
    - "AES196"
    - "AES256"
    x-exportParamName: "Snmpv3PrivacyProtocol"
    x-optionalDataType: "String"
  snmpv3_privacy_protocol_password:
    name: "snmpv3_privacy_protocol_password"
    in: "formData"
    description: "password (added in v10.4.0)"
    required: false
    type: "string"
    x-exportParamName: "Snmpv3PrivacyProtocolPassword"
    x-optionalDataType: "String"
  snmpv3_context:
    name: "snmpv3_context"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "Snmpv3Context"
    x-optionalDataType: "String"
  schedule_time:
    name: "schedule_time"
    in: "formData"
    description: "Time in HH:MM format if you want to schedule the job. Note: Must\
      \ be formatted as text NOT date. For multiple schedules, separate with a slash\
      \ (/)."
    required: false
    type: "string"
    x-exportParamName: "ScheduleTime"
    x-optionalDataType: "String"
  schedule_days:
    name: "schedule_days"
    in: "formData"
    description: "Comma separated days of week, where Monday = 0. e.g. 0,1,2 wil set\
      \ the job for Mon, Tue and Wed. For multiple schedules, separate with a slash\
      \ (/)."
    required: false
    type: "string"
    x-exportParamName: "ScheduleDays"
    x-optionalDataType: "String"
  strip_domain_name:
    name: "strip_domain_name"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "StripDomainName"
    x-optionalDataType: "String"
  strip_domain_suffix:
    name: "strip_domain_suffix"
    in: "formData"
    description: "Strip domain suffix if discovered on VMs or hypervisor"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "StripDomainSuffix"
    x-optionalDataType: "String"
  service_type:
    name: "service_type"
    in: "query"
    description: "could be ignored or tracked. Default is tracked."
    required: false
    type: "string"
    x-exportParamName: "ServiceType"
    x-optionalDataType: "String"
  secret_key:
    name: "secret_key"
    in: "formData"
    description: "Amazon AWS, MS Azure, OpenStack, Amazon API, Google Cloud, Alibaba\
      \ Cloud, Oracle Cloud"
    required: false
    type: "string"
    x-exportParamName: "SecretKey"
    x-optionalDataType: "String"
  secret_key_id:
    name: "secret_key_id"
    in: "formData"
    description: "Amazon AWS, MS Azure, OpenStack, Amazon API, Google Cloud, Alibaba\
      \ Cloud, Oracle Cloud"
    required: false
    type: "string"
    x-exportParamName: "SecretKeyId"
    x-optionalDataType: "String"
  server:
    name: "server"
    in: "formData"
    description: "IP or FQDN of target server"
    required: false
    type: "string"
    x-exportParamName: "Server"
    x-optionalDataType: "String"
  service_level_device_id:
    name: "service_level_device_id"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "ServiceLevelDeviceId"
    x-optionalDataType: "String"
  service_name:
    name: "service_name"
    in: "query"
    description: "The executable name of the service"
    required: true
    type: "string"
    x-exportParamName: "ServiceName"
  service_display_name:
    name: "service_display_name"
    in: "query"
    description: "The user freindly display name of the service"
    required: true
    type: "string"
    x-exportParamName: "ServiceDisplayName"
  service_id:
    name: "service_id"
    in: "query"
    description: "filter by id of the service"
    required: false
    type: "string"
    x-exportParamName: "ServiceId"
    x-optionalDataType: "String"
  service_detail_id:
    name: "service_detail_id"
    in: "query"
    description: "filter by id of the service in use"
    required: false
    type: "string"
    x-exportParamName: "ServiceDetailId"
    x-optionalDataType: "String"
  serial_no:
    name: "serial_no"
    in: "query"
    description: "filter by serial # (Added in v6.0.0)"
    required: false
    type: "string"
    x-exportParamName: "SerialNo"
    x-optionalDataType: "String"
  serial_no_contains:
    name: "serial_no_contains"
    in: "query"
    description: "filter by partial serial match (Added in 9.7.1)"
    required: false
    type: "string"
    x-exportParamName: "SerialNoContains"
    x-optionalDataType: "String"
  sequential_numbering_for_ports:
    name: "sequential_numbering_for_ports"
    in: "formData"
    description: "Could be “yes” or “no”. Yes if ports are numbered starting from\
      \ 1."
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "SequentialNumberingForPorts"
    x-optionalDataType: "String"
  skip_vlan_indexing:
    name: "skip_vlan_indexing"
    in: "formData"
    description: "yes or no (added in v10.4.0)"
    required: false
    type: "string"
    x-exportParamName: "SkipVlanIndexing"
    x-optionalDataType: "String"
  status:
    name: "status"
    in: "formData"
    description: "Instance status (ie, running, stopped)"
    required: false
    type: "string"
    x-exportParamName: "Status"
    x-optionalDataType: "String"
  state:
    name: "state"
    in: "query"
    description: "The current running state of this service. Valid values are ‘Running’\
      , ‘Started’, ‘Paused’, ‘Stopped’ and ‘Unknown’"
    required: false
    type: "string"
    x-exportParamName: "State"
    x-optionalDataType: "String"
  startmode:
    name: "startmode"
    in: "query"
    description: "The start mode of this service - valid values are ‘Automatic’, ‘\
      Manual’, ‘Disabled’ and ‘Unknown’"
    required: false
    type: "string"
    x-exportParamName: "Startmode"
    x-optionalDataType: "String"
  subnet_id:
    name: "subnet_id"
    in: "query"
    description: "ID of the subnet (added in v7.2.0)"
    required: false
    type: "string"
    x-exportParamName: "SubnetId"
    x-optionalDataType: "String"
  subscriptionid:
    name: "subscriptionid"
    in: "formData"
    description: "MS Azure Subscription ID"
    required: false
    type: "string"
    x-exportParamName: "Subscriptionid"
    x-optionalDataType: "String"
  subnet:
    name: "subnet"
    in: "query"
    description: "name of the subnet"
    required: false
    type: "string"
    x-exportParamName: "Subnet"
    x-optionalDataType: "String"
  sudo_retry:
    name: "sudo_retry"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "SudoRetry"
    x-optionalDataType: "String"
  service_level:
    name: "service_level"
    in: "query"
    description: "filter by service level name"
    required: false
    type: "string"
    x-exportParamName: "ServiceLevel"
    x-optionalDataType: "String"
  service_level_post:
    name: "service_level"
    in: "formData"
    description: "Must already exist"
    required: false
    type: "string"
    x-exportParamName: "ServiceLevel"
    x-optionalDataType: "String"
  show_on_chart:
    name: "show_on_chart"
    in: "formData"
    description: "Show the field on impact charts"
    required: false
    type: "string"
    x-exportParamName: "ShowOnChart"
    x-optionalDataType: "String"
  slot_numbering:
    name: "slot_numbering"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "top_to_bottom"
    - "bottom_to_top"
    - "left_to_right"
    - "right_to_left"
    x-exportParamName: "SlotNumbering"
    x-optionalDataType: "String"
  switch:
    name: "switch"
    in: "formData"
    description: "d42 will look for existing port and switch combination and if it\
      \ exists, will update that port."
    required: false
    type: "string"
    x-exportParamName: "Switch_"
    x-optionalDataType: "String"
  switch_id:
    name: "switch_id"
    in: "formData"
    description: "Comma separated values for switch_ids"
    required: false
    type: "string"
    x-exportParamName: "SwitchId"
    x-optionalDataType: "String"
  switch2_id:
    name: "switch2_id"
    in: "query"
    description: "ID of the 2nd network device port is on"
    required: false
    type: "string"
    x-exportParamName: "Switch2Id"
    x-optionalDataType: "String"
  switchport_id:
    name: "switchport_id"
    in: "formData"
    description: "ID for the switch port. Available via GET at /api/api/1.0/switchports/\
      \ or Tools > Export > Switch Port"
    required: false
    type: "string"
    x-exportParamName: "SwitchportId"
    x-optionalDataType: "String"
  speed:
    name: "speed"
    in: "formData"
    description: "update port speed"
    required: false
    type: "string"
    x-exportParamName: "Speed"
    x-optionalDataType: "String"
  slave_ports:
    name: "slave_ports"
    in: "formData"
    description: "comma separated port names"
    required: false
    type: "string"
    x-exportParamName: "SlavePorts"
    x-optionalDataType: "String"
  switch_template_id:
    name: "switch_template_id"
    in: "formData"
    description: "GET all Switch Templates"
    required: true
    type: "string"
    x-exportParamName: "SwitchTemplateId"
  source_port_start:
    name: "source_port_start"
    in: "formData"
    description: "Starting port for source IP range"
    required: false
    type: "string"
    x-exportParamName: "SourcePortStart"
    x-optionalDataType: "String"
  source_port_end:
    name: "source_port_end"
    in: "formData"
    description: "used for mapping a range of ports rather than a single port"
    required: false
    type: "string"
    x-exportParamName: "SourcePortEnd"
    x-optionalDataType: "String"
  software_id:
    name: "software_id"
    in: "query"
    description: "filter by id of the software"
    required: false
    type: "string"
    x-exportParamName: "SoftwareId"
    x-optionalDataType: "String"
  software_detail_id:
    name: "software_detail_id"
    in: "query"
    description: "filter by id of the software"
    required: false
    type: "string"
    x-exportParamName: "SoftwareDetailId"
    x-optionalDataType: "String"
  software:
    name: "software"
    in: "formData"
    description: "the name of the software"
    required: true
    type: "string"
    x-exportParamName: "Software"
  software_name:
    name: "software_name"
    in: "query"
    description: "filter by name of the software component"
    required: false
    type: "string"
    x-exportParamName: "SoftwareName"
    x-optionalDataType: "String"
  software_type:
    name: "software_type"
    in: "query"
    description: "Filter by software type (managed, unmanaged, prohibited or ignored)"
    required: false
    type: "string"
    x-exportParamName: "SoftwareType"
    x-optionalDataType: "String"
  size:
    name: "size"
    in: "formData"
    description: "Size of the PDU in U"
    required: false
    type: "string"
    x-exportParamName: "Size"
    x-optionalDataType: "String"
  storage_room_id:
    name: "storage_room_id"
    in: "formData"
    description: "ID of storage room to assign power unit to"
    required: false
    type: "string"
    x-exportParamName: "StorageRoomId"
    x-optionalDataType: "String"
  storage_room:
    name: "storage_room"
    in: "formData"
    description: "Name of storage room to apply power unit to"
    required: false
    type: "string"
    x-exportParamName: "StorageRoom"
    x-optionalDataType: "String"
  store_config_files:
    name: "store_config_files"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "StoreConfigFiles"
    x-optionalDataType: "String"
  start_ip_address:
    name: "start_ip_address"
    in: "formData"
    description: "beginning of IP address range"
    required: true
    type: "string"
    x-exportParamName: "StartIpAddress"
  start_row:
    name: "start_row"
    in: "formData"
    description: "Starting row for rack, for grid positioning"
    required: false
    type: "string"
    x-exportParamName: "StartRow"
    x-optionalDataType: "String"
  start_col:
    name: "start_col"
    in: "formData"
    description: "Starting column for the rack, for grid positioning"
    required: false
    type: "string"
    x-exportParamName: "StartCol"
    x-optionalDataType: "String"
  start_at:
    name: "start_at"
    in: "formData"
    description: "Required if adding to rack. U Start location."
    required: false
    type: "string"
    x-exportParamName: "StartAt"
    x-optionalDataType: "String"
  slot_no:
    name: "slot_no"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "SlotNo"
    x-optionalDataType: "String"
  spec_url:
    name: "spec_url"
    in: "formData"
    description: "Specification url for the hardware model."
    required: false
    type: "string"
    x-exportParamName: "SpecUrl"
    x-optionalDataType: "String"
  tags:
    name: "tags"
    in: "query"
    description: "filter by tags. comma separated for multiple tags (This is an OR\
      \ filter, gets all the devices for all comma separated tags)"
    required: false
    type: "string"
    x-exportParamName: "Tags"
    x-optionalDataType: "String"
  tags_and:
    name: "tags_and"
    in: "query"
    description: "filter by all the tags, separated by comma. (This is an AND filter\
      \ and all tags have to match for filter, this was added in v6.3.1)"
    required: false
    type: "string"
    x-exportParamName: "TagsAnd"
    x-optionalDataType: "String"
  tags_remove:
    name: "tags_remove"
    in: "formData"
    description: "remove tags from a switchport"
    required: false
    type: "string"
    x-exportParamName: "TagsRemove"
    x-optionalDataType: "String"
  tenant:
    name: "tenant"
    in: "formData"
    description: "OpenStack Project name; Google Project ID; Oracle Tenant ID"
    required: false
    type: "string"
    x-exportParamName: "Tenant"
    x-optionalDataType: "String"
  type:
    name: "type"
    in: "query"
    description: "filter by device type (physical, virtual, blade, other, cluster\
      \ or unknown)"
    required: true
    type: "string"
  ttl:
    name: "ttl"
    in: "query"
    description: "TTL value."
    required: false
    type: "string"
    x-exportParamName: "Ttl"
    x-optionalDataType: "String"
  target_port_start:
    name: "target_port_start"
    in: "formData"
    description: "Starting port for target IP range"
    required: false
    type: "string"
    x-exportParamName: "TargetPortStart"
    x-optionalDataType: "String"
  target_port_end:
    name: "target_port_end"
    in: "formData"
    description: "used for mapping a range of ports rather than a single port"
    required: false
    type: "string"
    x-exportParamName: "TargetPortEnd"
    x-optionalDataType: "String"
  two_way_relation:
    name: "two_way_relation"
    in: "formData"
    description: "true if the internal IP addressed is masked with the external IP\
      \ address for outbound traffic in addition to inbound traffic. Default is false."
    required: false
    type: "string"
    enum:
    - "true"
    - "false"
    x-exportParamName: "TwoWayRelation"
    x-optionalDataType: "String"
  token_key:
    name: "token_key"
    in: "formData"
    description: "DigitalOcean Token Key - required for DigitalOcean."
    required: false
    type: "string"
    x-exportParamName: "TokenKey"
    x-optionalDataType: "String"
  total_count:
    name: "total_count"
    in: "query"
    description: "Count of IPs returned (use with offset as max results are limited\
      \ to 1000)"
    required: false
    type: "string"
    x-exportParamName: "TotalCount"
    x-optionalDataType: "String"
  toggle_in_service_on_module_power_state:
    name: "toggle_in_service_on_module_power_state"
    in: "formData"
    description: "yes or no"
    required: false
    type: "string"
    x-exportParamName: "ToggleInServiceOnModulePowerState"
    x-optionalDataType: "String"
  toggle_service_level_on_vm_power_state:
    name: "toggle_service_level_on_vm_power_state"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "ToggleServiceLevelOnVmPowerState"
    x-optionalDataType: "String"
  threads:
    name: "threads"
    in: "formData"
    description: "number of threads"
    required: false
    type: "string"
    x-exportParamName: "Threads"
    x-optionalDataType: "String"
  track_licensed_by_count:
    name: "track_licensed_count_by_keys"
    in: "formData"
    description: "whether or not to track software by discovered count"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "TrackLicensedCountByKeys"
    x-optionalDataType: "String"
  track_vm_name_change:
    name: "track_vm_name_change"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "TrackVmNameChange"
    x-optionalDataType: "String"
  turn_on_date:
    name: "turn_on_date"
    in: "query"
    required: false
    type: "string"
    x-exportParamName: "TurnOnDate"
    x-optionalDataType: "String"
  use_only_users_remove:
    name: "use_only_users_remove"
    in: "formData"
    description: "A comma separated list of users to remove use only permissions."
    required: false
    type: "string"
    x-exportParamName: "UseOnlyUsersRemove"
    x-optionalDataType: "String"
  use_only_groups_remove:
    name: "use_only_groups_remove"
    in: "formData"
    description: "A comma separated list of user groups to remove use permissions."
    required: false
    type: "string"
    x-exportParamName: "UseOnlyGroupsRemove"
    x-optionalDataType: "String"
  uuid:
    name: "uuid"
    in: "query"
    description: "filter by uuid (exact match) (Added in v6.3.2)"
    required: false
    type: "string"
    x-exportParamName: "Uuid"
    x-optionalDataType: "String"
  user_id:
    name: "user_id"
    in: "query"
    description: "filter by id of the user"
    required: false
    type: "string"
    x-exportParamName: "UserId"
    x-optionalDataType: "String"
  uom:
    name: "uom"
    in: "formData"
    description: "unit of measurement (meters or inches)"
    required: false
    type: "string"
    enum:
    - "m"
    - "in"
    x-exportParamName: "Uom"
    x-optionalDataType: "String"
  up:
    name: "up"
    in: "formData"
    description: "= yes for up. = no for down."
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "Up"
    x-optionalDataType: "String"
  up_admin:
    name: "up_admin"
    in: "formData"
    description: "Whether port is administratively up or down. = yes for up. = no\
      \ for down."
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "UpAdmin"
    x-optionalDataType: "String"
  update_model_if_found:
    name: "update_model_if_found"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "UpdateModelIfFound"
    x-optionalDataType: "String"
  user:
    name: "user"
    in: "formData"
    description: "enduser name"
    required: false
    type: "string"
    x-exportParamName: "User"
    x-optionalDataType: "String"
  use_name_alias_port_descr:
    name: "use_name_alias_port_descr"
    in: "formData"
    description: "yes to use alias for port description during discovery (added in\
      \ v8.3.2)"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "UseNameAliasPortDescr"
    x-optionalDataType: "String"
  use_service_account:
    name: "use_service_account"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "UseServiceAccount"
    x-optionalDataType: "String"
  use_domain_server:
    name: "use_domain_server"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "UseDomainServer"
    x-optionalDataType: "String"
  use_fqdn:
    name: "use_fqdn"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "UseFqdn"
    x-optionalDataType: "String"
  username:
    name: "username"
    in: "query"
    description: "Retrieve all the passwords for a specified username. ?username="
    required: false
    type: "string"
    x-exportParamName: "Username"
    x-optionalDataType: "String"
  username_post:
    name: "username"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "Username"
    x-optionalDataType: "String"
  username_and_password:
    name: "username_and_password"
    in: "query"
    description: "Create a new password."
    required: false
    type: "string"
  url:
    name: "url"
    in: "formData"
    description: "Cloudstack IP address - required for CloudStack"
    required: false
    type: "string"
  url_prefix:
    name: "url_prefix"
    in: "formData"
    description: "http or https"
    required: false
    type: "string"
    x-exportParamName: "UrlPrefix"
    x-optionalDataType: "String"
  url_suffix:
    name: "url_suffix"
    in: "formData"
    description: "append suffix to discovery url"
    required: false
    type: "string"
    x-exportParamName: "UrlSuffix"
    x-optionalDataType: "String"
  voltage:
    name: "voltage"
    in: "formData"
    description: "The rated voltage on this circuit"
    required: false
    type: "string"
    x-exportParamName: "Voltage"
    x-optionalDataType: "String"
  vm_name_to_use:
    name: "vm_name_to_use"
    in: "formData"
    description: "“found from vm tools” or “as named on vserver”"
    required: false
    type: "string"
    x-exportParamName: "VmNameToUse"
    x-optionalDataType: "String"
  vm_not_found:
    name: "vm_not_found"
    in: "formData"
    description: "Choose how to handle VM not found in discovery"
    required: false
    type: "string"
    enum:
    - "Remove Host Association"
    - "Change Service Level"
    - "Delete VM"
    x-exportParamName: "VmNotFound"
    x-optionalDataType: "String"
  vm_add_disk:
    name: "vm_add_disk"
    in: "formData"
    required: false
    type: "string"
    enum:
    - "yes"
    - "no"
    x-exportParamName: "VmAddDisk"
    x-optionalDataType: "String"
  virtual_host_name:
    name: "virtual_host_name"
    in: "query"
    description: "filter by virtual host name"
    required: false
    type: "string"
    x-exportParamName: "VirtualHostName"
    x-optionalDataType: "String"
  virtual_subtype:
    name: "virtual_subtype"
    in: "query"
    description: "filter by virtual subtype (added in v8.3.2)"
    required: false
    type: "string"
    x-exportParamName: "VirtualSubtype"
    x-optionalDataType: "String"
  vertical_grid_numbering:
    name: "vertical_grid_numbering"
    in: "formData"
    description: "numeric by default"
    required: false
    type: "string"
    enum:
    - "numeric"
    - "alphabetic"
    x-exportParamName: "VerticalGridNumbering"
    x-optionalDataType: "String"
  vertical_grid_start:
    name: "vertical_grid_start"
    in: "formData"
    required: false
    type: "string"
    x-exportParamName: "VerticalGridStart"
    x-optionalDataType: "String"
  vrf_group_id:
    name: "vrf_group_id"
    in: "query"
    description: "ID of the VRF group"
    required: false
    type: "string"
    x-exportParamName: "VrfGroupId"
    x-optionalDataType: "String"
  vrf_group_id_post:
    name: "vrf_group_id"
    in: "formData"
    description: "ID of the VRF group"
    required: false
    type: "string"
    x-exportParamName: "VrfGroupId"
    x-optionalDataType: "String"
  vrf_group_from:
    name: "vrf_group_from"
    in: "formData"
    description: "Originating VRF Group Name"
    required: false
    type: "string"
    x-exportParamName: "VrfGroupFrom"
    x-optionalDataType: "String"
  vrf_group_id_from:
    name: "vrf_group_id_from"
    in: "formData"
    description: "Originating VRF Group ID"
    required: false
    type: "string"
    x-exportParamName: "VrfGroupIdFrom"
    x-optionalDataType: "String"
  vrf_group_to:
    name: "vrf_group_to"
    in: "formData"
    description: "Destination VRF Group Name"
    required: false
    type: "string"
    x-exportParamName: "VrfGroupTo"
    x-optionalDataType: "String"
  vrf_group_id_to:
    name: "vrf_group_id_to"
    in: "formData"
    description: "Destination VRF Group ID"
    required: false
    type: "string"
    x-exportParamName: "VrfGroupIdTo"
    x-optionalDataType: "String"
  vrf_group:
    name: "vrf_group"
    in: "query"
    description: "VRF group name"
    required: false
    type: "string"
    x-exportParamName: "VrfGroup"
    x-optionalDataType: "String"
  vrf_group_post:
    name: "vrf_group"
    in: "formData"
    description: "VRF group name"
    required: false
    type: "string"
    x-exportParamName: "VrfGroup"
    x-optionalDataType: "String"
  vrfgroup:
    name: "vrfgroup"
    in: "formData"
    description: "name of vrf group for discovered subnets (added in v10.4.0)"
    required: false
    type: "string"
    x-exportParamName: "Vrfgroup"
    x-optionalDataType: "String"
  vendor:
    name: "vendor"
    in: "query"
    description: "The cloud vendor"
    required: false
    type: "string"
    x-exportParamName: "Vendor"
    x-optionalDataType: "String"
  vendor_post:
    name: "vendor"
    in: "formData"
    description: "The cloud vendor"
    required: false
    type: "string"
    x-exportParamName: "Vendor"
    x-optionalDataType: "String"
  vlan_id:
    name: "vlan_id"
    in: "query"
    description: "ID of the vlan"
    required: false
    type: "string"
    x-exportParamName: "VlanId"
    x-optionalDataType: "String"
  vlan_id_post:
    name: "vlan_id"
    in: "formData"
    description: "ID of the vlan"
    required: false
    type: "string"
    x-exportParamName: "VlanId"
    x-optionalDataType: "String"
  value:
    name: "value"
    in: "formData"
    description: "This will set the value of the custom field for the specific object."
    required: false
    type: "string"
    x-exportParamName: "Value"
    x-optionalDataType: "String"
  version:
    name: "version"
    in: "formData"
    description: "The version number of the software"
    required: false
    type: "string"
    x-exportParamName: "Version"
    x-optionalDataType: "String"
  view_users:
    name: "view_users"
    in: "formData"
    description: "A comma separated list of users that have permission to view this\
      \ password."
    required: false
    type: "string"
    x-exportParamName: "ViewUsers"
    x-optionalDataType: "String"
  view_edit_users:
    name: "view_edit_users"
    in: "formData"
    description: "A comma separated list of users that have permission to view and\
      \ edit this password."
    required: false
    type: "string"
    x-exportParamName: "ViewEditUsers"
    x-optionalDataType: "String"
  view_groups:
    name: "view_groups"
    in: "formData"
    description: "A comma separated list of user groups that have permission to view\
      \ this password."
    required: false
    type: "string"
    x-exportParamName: "ViewGroups"
    x-optionalDataType: "String"
  view_users_remove:
    name: "view_users_remove"
    in: "formData"
    description: "A comma separated list of users to remove view permissions."
    required: false
    type: "string"
    x-exportParamName: "ViewUsersRemove"
    x-optionalDataType: "String"
  view_edit_users_remove:
    name: "view_edit_users_remove"
    in: "formData"
    description: "A comma separated list of users to remove view and edit permissions."
    required: false
    type: "string"
    x-exportParamName: "ViewEditUsersRemove"
    x-optionalDataType: "String"
  view_groups_remove:
    name: "view_groups_remove"
    in: "formData"
    description: "A comma separated list of user groups to remove use permissions."
    required: false
    type: "string"
    x-exportParamName: "ViewGroupsRemove"
    x-optionalDataType: "String"
  view_edit_groups_remove:
    name: "view_edit_groups_remove"
    in: "formData"
    description: "A comma separated list of user groups to remove view and edit permissions."
    required: false
    type: "string"
    x-exportParamName: "ViewEditGroupsRemove"
    x-optionalDataType: "String"
  vlans_to_ignore:
    name: "vlans_to_ignore"
    in: "formData"
    description: "list of vlan ids to ignore separated by commas (added in v10.4.0)"
    required: false
    type: "string"
    x-exportParamName: "VlansToIgnore"
    x-optionalDataType: "String"
  weeks:
    name: "weeks"
    in: "query"
    description: "only for schedule based services where startmode = ‘Scheduled’"
    required: false
    type: "string"
    x-exportParamName: "Weeks"
    x-optionalDataType: "String"
  wall:
    name: "wall"
    in: "query"
    description: "Can be one of ‘left’, ‘right’, ‘top’, ‘bottom’, ‘middle’. Choose\
      \ ‘middle’ if you do not want the object placed along one of the 4 walls."
    required: false
    type: "string"
  where:
    name: "where"
    in: "formData"
    description: "Location in a rack. Note: If mounted a size must be provided or\
      \ available from the hardware model."
    required: false
    type: "string"
    enum:
    - "above"
    - "below"
    - "left"
    - "right"
    - "mounted"
    x-exportParamName: "Where"
    x-optionalDataType: "String"
  watts:
    name: "watts"
    in: "formData"
    description: "per power supply"
    required: false
    type: "string"
    x-exportParamName: "Watts"
    x-optionalDataType: "String"
  watts_get:
    name: "watts"
    in: "query"
    description: "filter by exact watts"
    required: false
    type: "string"
    x-exportParamName: "Watts"
    x-optionalDataType: "String"
  what:
    name: "what"
    in: "formData"
    description: "Description of business impact due to loss of component."
    required: false
    type: "string"
    x-exportParamName: "What"
    x-optionalDataType: "String"
  width_ratio:
    name: "width_ratio"
    in: "formData"
    description: "Default=1. Can be ½, 1/3,… 1/10, etc."
    required: false
    type: "string"
    x-exportParamName: "WidthRatio"
    x-optionalDataType: "String"
  x_pos:
    name: "x_pos"
    in: "formData"
    description: "A number between 0 and 2520 representing the position within the\
      \ u slot in increments of 252, which is equal to 1/10th of the width of the\
      \ rack. 0 will place a device flush left, 1260 will place the left side of a\
      \ device in center."
    required: false
    type: "integer"
    maximum: 2520
    minimum: 0
    x-exportParamName: "XPos"
    x-optionalDataType: "Int32"
  zonename:
    name: "zonename"
    in: "formData"
    description: "name of the zone"
    required: true
    type: "string"
    x-exportParamName: "Zonename"
